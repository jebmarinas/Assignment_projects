
Assignment5A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000018c  00800100  00001280  00001314  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001280  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000002d  0080028c  0080028c  000014a0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000014a0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000014fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f8  00000000  00000000  0000153c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c8d  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dda  00000000  00000000  000032c1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b27  00000000  00000000  0000409b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002a0  00000000  00000000  00004bc4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006d3  00000000  00000000  00004e64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000009ea  00000000  00000000  00005537  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000c8  00000000  00000000  00005f21  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 5a 00 	jmp	0xb4	; 0xb4 <__ctors_end>
       4:	0c 94 1d 02 	jmp	0x43a	; 0x43a <__vector_1>
       8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
       c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      10:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      14:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      18:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      1c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      20:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      24:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      28:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      2c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      30:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      34:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      38:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      3c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      40:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      44:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      48:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      4c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      50:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      54:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      58:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      5c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      60:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      64:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      68:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      6c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      70:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      74:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      78:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      7c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      80:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      84:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      88:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      8c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      90:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      94:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      98:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      9c:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a4:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      a8:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      ac:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>
      b0:	0c 94 77 00 	jmp	0xee	; 0xee <__bad_interrupt>

000000b4 <__ctors_end>:
      b4:	11 24       	eor	r1, r1
      b6:	1f be       	out	0x3f, r1	; 63
      b8:	cf ef       	ldi	r28, 0xFF	; 255
      ba:	d8 e0       	ldi	r29, 0x08	; 8
      bc:	de bf       	out	0x3e, r29	; 62
      be:	cd bf       	out	0x3d, r28	; 61

000000c0 <__do_copy_data>:
      c0:	12 e0       	ldi	r17, 0x02	; 2
      c2:	a0 e0       	ldi	r26, 0x00	; 0
      c4:	b1 e0       	ldi	r27, 0x01	; 1
      c6:	e0 e8       	ldi	r30, 0x80	; 128
      c8:	f2 e1       	ldi	r31, 0x12	; 18
      ca:	02 c0       	rjmp	.+4      	; 0xd0 <__do_copy_data+0x10>
      cc:	05 90       	lpm	r0, Z+
      ce:	0d 92       	st	X+, r0
      d0:	ac 38       	cpi	r26, 0x8C	; 140
      d2:	b1 07       	cpc	r27, r17
      d4:	d9 f7       	brne	.-10     	; 0xcc <__do_copy_data+0xc>

000000d6 <__do_clear_bss>:
      d6:	22 e0       	ldi	r18, 0x02	; 2
      d8:	ac e8       	ldi	r26, 0x8C	; 140
      da:	b2 e0       	ldi	r27, 0x02	; 2
      dc:	01 c0       	rjmp	.+2      	; 0xe0 <.do_clear_bss_start>

000000de <.do_clear_bss_loop>:
      de:	1d 92       	st	X+, r1

000000e0 <.do_clear_bss_start>:
      e0:	a9 3b       	cpi	r26, 0xB9	; 185
      e2:	b2 07       	cpc	r27, r18
      e4:	e1 f7       	brne	.-8      	; 0xde <.do_clear_bss_loop>
      e6:	0e 94 93 01 	call	0x326	; 0x326 <main>
      ea:	0c 94 3e 09 	jmp	0x127c	; 0x127c <_exit>

000000ee <__bad_interrupt>:
      ee:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000f2 <USART_init>:
	 while((*data!='\0')) {
		 while(!(UCSR0A & (1 << UDRE0)));  // WAIT FOR BUFFER TO CLEAR
		 UDR0 = *data;  // LOAD DATA INTO BUFFER REGISTER
		 data++;		// POINT TO NEXT CHARACTER IN STRING
	 }
 }
      f2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
      f6:	87 e6       	ldi	r24, 0x67	; 103
      f8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
      fc:	86 e0       	ldi	r24, 0x06	; 6
      fe:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     102:	88 e1       	ldi	r24, 0x18	; 24
     104:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     108:	08 95       	ret

0000010a <adc_init>:

 void adc_init(void) {
	 ADMUX = (1<<REFS0) |  // AVcc set 5V
     10a:	84 e4       	ldi	r24, 0x44	; 68
     10c:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	 (0<<REFS1) |
	 (1<<MUX2)  |  // Channel 4 ADC4
	 (0<<ADLAR);   // Right justify
	 ADCSRA = (1<<ADEN) |  // Enable ADC
     110:	87 e8       	ldi	r24, 0x87	; 135
     112:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     116:	08 95       	ret

00000118 <read_adc>:
	 (1<<ADPS2) | // Clock/128
	 (1<<ADPS1) |
	 (1<<ADPS0);
 }

 void read_adc(void) {
     118:	bf 92       	push	r11
     11a:	cf 92       	push	r12
     11c:	df 92       	push	r13
     11e:	ef 92       	push	r14
     120:	ff 92       	push	r15
     122:	0f 93       	push	r16
     124:	1f 93       	push	r17
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
	 unsigned char i = 4; // Variable to loop
	 adc_temp = 0;  // Set starting value to zero
     12a:	10 92 8c 02 	sts	0x028C, r1	; 0x80028c <__data_end>
     12e:	10 92 8d 02 	sts	0x028D, r1	; 0x80028d <__data_end+0x1>
     132:	10 92 8e 02 	sts	0x028E, r1	; 0x80028e <__data_end+0x2>
     136:	10 92 8f 02 	sts	0x028F, r1	; 0x80028f <__data_end+0x3>
     13a:	68 94       	set
     13c:	bb 24       	eor	r11, r11
     13e:	b2 f8       	bld	r11, 2
	 while(i--) {
		 ADCSRA |= (1<<ADSC); // Start conversion
     140:	ca e7       	ldi	r28, 0x7A	; 122
     142:	d0 e0       	ldi	r29, 0x00	; 0
		 while(ADCSRA & (1<<ADSC)); // Wait for conversion
		 adc_temp += ADC;  // Read value from ADC
     144:	08 e7       	ldi	r16, 0x78	; 120
     146:	10 e0       	ldi	r17, 0x00	; 0

 void read_adc(void) {
	 unsigned char i = 4; // Variable to loop
	 adc_temp = 0;  // Set starting value to zero
	 while(i--) {
		 ADCSRA |= (1<<ADSC); // Start conversion
     148:	88 81       	ld	r24, Y
     14a:	80 64       	ori	r24, 0x40	; 64
     14c:	88 83       	st	Y, r24
		 while(ADCSRA & (1<<ADSC)); // Wait for conversion
     14e:	88 81       	ld	r24, Y
     150:	86 fd       	sbrc	r24, 6
     152:	fd cf       	rjmp	.-6      	; 0x14e <read_adc+0x36>
		 adc_temp += ADC;  // Read value from ADC
     154:	f8 01       	movw	r30, r16
     156:	60 81       	ld	r22, Z
     158:	71 81       	ldd	r23, Z+1	; 0x01
     15a:	c0 90 8c 02 	lds	r12, 0x028C	; 0x80028c <__data_end>
     15e:	d0 90 8d 02 	lds	r13, 0x028D	; 0x80028d <__data_end+0x1>
     162:	e0 90 8e 02 	lds	r14, 0x028E	; 0x80028e <__data_end+0x2>
     166:	f0 90 8f 02 	lds	r15, 0x028F	; 0x80028f <__data_end+0x3>
     16a:	80 e0       	ldi	r24, 0x00	; 0
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	0e 94 fe 04 	call	0x9fc	; 0x9fc <__floatunsisf>
     172:	a7 01       	movw	r20, r14
     174:	96 01       	movw	r18, r12
     176:	0e 94 92 04 	call	0x924	; 0x924 <__addsf3>
     17a:	60 93 8c 02 	sts	0x028C, r22	; 0x80028c <__data_end>
     17e:	70 93 8d 02 	sts	0x028D, r23	; 0x80028d <__data_end+0x1>
     182:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <__data_end+0x2>
     186:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <__data_end+0x3>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     18a:	ff ef       	ldi	r31, 0xFF	; 255
     18c:	20 e7       	ldi	r18, 0x70	; 112
     18e:	82 e0       	ldi	r24, 0x02	; 2
     190:	f1 50       	subi	r31, 0x01	; 1
     192:	20 40       	sbci	r18, 0x00	; 0
     194:	80 40       	sbci	r24, 0x00	; 0
     196:	e1 f7       	brne	.-8      	; 0x190 <read_adc+0x78>
     198:	00 c0       	rjmp	.+0      	; 0x19a <read_adc+0x82>
     19a:	00 00       	nop
     19c:	ba 94       	dec	r11
 }

 void read_adc(void) {
	 unsigned char i = 4; // Variable to loop
	 adc_temp = 0;  // Set starting value to zero
	 while(i--) {
     19e:	b1 10       	cpse	r11, r1
     1a0:	d3 cf       	rjmp	.-90     	; 0x148 <read_adc+0x30>
		 ADCSRA |= (1<<ADSC); // Start conversion
		 while(ADCSRA & (1<<ADSC)); // Wait for conversion
		 adc_temp += ADC;  // Read value from ADC
		 _delay_ms(50);
	 }
	 adc_temp = adc_temp / 4; // Average of 4 samples
     1a2:	60 91 8c 02 	lds	r22, 0x028C	; 0x80028c <__data_end>
     1a6:	70 91 8d 02 	lds	r23, 0x028D	; 0x80028d <__data_end+0x1>
     1aa:	80 91 8e 02 	lds	r24, 0x028E	; 0x80028e <__data_end+0x2>
     1ae:	90 91 8f 02 	lds	r25, 0x028F	; 0x80028f <__data_end+0x3>
     1b2:	20 e0       	ldi	r18, 0x00	; 0
     1b4:	30 e0       	ldi	r19, 0x00	; 0
     1b6:	40 e8       	ldi	r20, 0x80	; 128
     1b8:	5e e3       	ldi	r21, 0x3E	; 62
     1ba:	0e 94 8c 05 	call	0xb18	; 0xb18 <__mulsf3>
     1be:	60 93 8c 02 	sts	0x028C, r22	; 0x80028c <__data_end>
     1c2:	70 93 8d 02 	sts	0x028D, r23	; 0x80028d <__data_end+0x1>
     1c6:	80 93 8e 02 	sts	0x028E, r24	; 0x80028e <__data_end+0x2>
     1ca:	90 93 8f 02 	sts	0x028F, r25	; 0x80028f <__data_end+0x3>
 }
     1ce:	df 91       	pop	r29
     1d0:	cf 91       	pop	r28
     1d2:	1f 91       	pop	r17
     1d4:	0f 91       	pop	r16
     1d6:	ff 90       	pop	r15
     1d8:	ef 90       	pop	r14
     1da:	df 90       	pop	r13
     1dc:	cf 90       	pop	r12
     1de:	bf 90       	pop	r11
     1e0:	08 95       	ret

000001e2 <print_config>:

 void print_config(void){
     1e2:	cf 93       	push	r28
     1e4:	df 93       	push	r29
     1e6:	1f 92       	push	r1
     1e8:	cd b7       	in	r28, 0x3d	; 61
     1ea:	de b7       	in	r29, 0x3e	; 62
	 uint8_t data;
	 printf("Startup successful\n\n nRF24L01+ configured as:\n");
     1ec:	8a e0       	ldi	r24, 0x0A	; 10
     1ee:	91 e0       	ldi	r25, 0x01	; 1
     1f0:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
	 printf("-------------------------------------------\n");
     1f4:	88 e3       	ldi	r24, 0x38	; 56
     1f6:	91 e0       	ldi	r25, 0x01	; 1
     1f8:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
	 nrf24_read(CONFIG,&data,1);
     1fc:	41 e0       	ldi	r20, 0x01	; 1
     1fe:	50 e0       	ldi	r21, 0x00	; 0
     200:	be 01       	movw	r22, r28
     202:	6f 5f       	subi	r22, 0xFF	; 255
     204:	7f 4f       	sbci	r23, 0xFF	; 255
     206:	80 e0       	ldi	r24, 0x00	; 0
     208:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("CONFIG 0x%02X\n",data);
     20c:	89 81       	ldd	r24, Y+1	; 0x01
     20e:	1f 92       	push	r1
     210:	8f 93       	push	r24
     212:	84 e6       	ldi	r24, 0x64	; 100
     214:	91 e0       	ldi	r25, 0x01	; 1
     216:	9f 93       	push	r25
     218:	8f 93       	push	r24
     21a:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(EN_AA,&data,1);
     21e:	41 e0       	ldi	r20, 0x01	; 1
     220:	50 e0       	ldi	r21, 0x00	; 0
     222:	be 01       	movw	r22, r28
     224:	6f 5f       	subi	r22, 0xFF	; 255
     226:	7f 4f       	sbci	r23, 0xFF	; 255
     228:	81 e0       	ldi	r24, 0x01	; 1
     22a:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("EN_AA 0x%02X\n",data);
     22e:	89 81       	ldd	r24, Y+1	; 0x01
     230:	1f 92       	push	r1
     232:	8f 93       	push	r24
     234:	83 e7       	ldi	r24, 0x73	; 115
     236:	91 e0       	ldi	r25, 0x01	; 1
     238:	9f 93       	push	r25
     23a:	8f 93       	push	r24
     23c:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(EN_RXADDR,&data,1);
     240:	41 e0       	ldi	r20, 0x01	; 1
     242:	50 e0       	ldi	r21, 0x00	; 0
     244:	be 01       	movw	r22, r28
     246:	6f 5f       	subi	r22, 0xFF	; 255
     248:	7f 4f       	sbci	r23, 0xFF	; 255
     24a:	82 e0       	ldi	r24, 0x02	; 2
     24c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("EN_RXADDR 0x%02X\n",data);
     250:	89 81       	ldd	r24, Y+1	; 0x01
     252:	1f 92       	push	r1
     254:	8f 93       	push	r24
     256:	81 e8       	ldi	r24, 0x81	; 129
     258:	91 e0       	ldi	r25, 0x01	; 1
     25a:	9f 93       	push	r25
     25c:	8f 93       	push	r24
     25e:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(SETUP_RETR,&data,1);
     262:	41 e0       	ldi	r20, 0x01	; 1
     264:	50 e0       	ldi	r21, 0x00	; 0
     266:	be 01       	movw	r22, r28
     268:	6f 5f       	subi	r22, 0xFF	; 255
     26a:	7f 4f       	sbci	r23, 0xFF	; 255
     26c:	84 e0       	ldi	r24, 0x04	; 4
     26e:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("SETUP_RETR 0x%02X\n",data);
     272:	89 81       	ldd	r24, Y+1	; 0x01
     274:	1f 92       	push	r1
     276:	8f 93       	push	r24
     278:	83 e9       	ldi	r24, 0x93	; 147
     27a:	91 e0       	ldi	r25, 0x01	; 1
     27c:	9f 93       	push	r25
     27e:	8f 93       	push	r24
     280:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(RF_CH,&data,1);
     284:	41 e0       	ldi	r20, 0x01	; 1
     286:	50 e0       	ldi	r21, 0x00	; 0
     288:	be 01       	movw	r22, r28
     28a:	6f 5f       	subi	r22, 0xFF	; 255
     28c:	7f 4f       	sbci	r23, 0xFF	; 255
     28e:	85 e0       	ldi	r24, 0x05	; 5
     290:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("RF_CH 0x%02X\n",data);
     294:	89 81       	ldd	r24, Y+1	; 0x01
     296:	1f 92       	push	r1
     298:	8f 93       	push	r24
     29a:	86 ea       	ldi	r24, 0xA6	; 166
     29c:	91 e0       	ldi	r25, 0x01	; 1
     29e:	9f 93       	push	r25
     2a0:	8f 93       	push	r24
     2a2:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(RF_SETUP,&data,1);
     2a6:	41 e0       	ldi	r20, 0x01	; 1
     2a8:	50 e0       	ldi	r21, 0x00	; 0
     2aa:	be 01       	movw	r22, r28
     2ac:	6f 5f       	subi	r22, 0xFF	; 255
     2ae:	7f 4f       	sbci	r23, 0xFF	; 255
     2b0:	86 e0       	ldi	r24, 0x06	; 6
     2b2:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("RF_SETUP 0x%02X\n",data);
     2b6:	89 81       	ldd	r24, Y+1	; 0x01
     2b8:	1f 92       	push	r1
     2ba:	8f 93       	push	r24
     2bc:	84 eb       	ldi	r24, 0xB4	; 180
     2be:	91 e0       	ldi	r25, 0x01	; 1
     2c0:	9f 93       	push	r25
     2c2:	8f 93       	push	r24
     2c4:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(STATUS,&data,1);
     2c8:	41 e0       	ldi	r20, 0x01	; 1
     2ca:	50 e0       	ldi	r21, 0x00	; 0
     2cc:	be 01       	movw	r22, r28
     2ce:	6f 5f       	subi	r22, 0xFF	; 255
     2d0:	7f 4f       	sbci	r23, 0xFF	; 255
     2d2:	87 e0       	ldi	r24, 0x07	; 7
     2d4:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("STATUS 0x%02X\n",data);
     2d8:	89 81       	ldd	r24, Y+1	; 0x01
     2da:	1f 92       	push	r1
     2dc:	8f 93       	push	r24
     2de:	85 ec       	ldi	r24, 0xC5	; 197
     2e0:	91 e0       	ldi	r25, 0x01	; 1
     2e2:	9f 93       	push	r25
     2e4:	8f 93       	push	r24
     2e6:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 nrf24_read(FEATURE,&data,1);
     2ea:	41 e0       	ldi	r20, 0x01	; 1
     2ec:	50 e0       	ldi	r21, 0x00	; 0
     2ee:	be 01       	movw	r22, r28
     2f0:	6f 5f       	subi	r22, 0xFF	; 255
     2f2:	7f 4f       	sbci	r23, 0xFF	; 255
     2f4:	8d e1       	ldi	r24, 0x1D	; 29
     2f6:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	 printf("FEATURE 0x%02X\n",data);
     2fa:	89 81       	ldd	r24, Y+1	; 0x01
     2fc:	1f 92       	push	r1
     2fe:	8f 93       	push	r24
     300:	84 ed       	ldi	r24, 0xD4	; 212
     302:	91 e0       	ldi	r25, 0x01	; 1
     304:	9f 93       	push	r25
     306:	8f 93       	push	r24
     308:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
	 printf("-------------------------------------------\n\n");
     30c:	0f b6       	in	r0, 0x3f	; 63
     30e:	f8 94       	cli
     310:	de bf       	out	0x3e, r29	; 62
     312:	0f be       	out	0x3f, r0	; 63
     314:	cd bf       	out	0x3d, r28	; 61
     316:	84 ee       	ldi	r24, 0xE4	; 228
     318:	91 e0       	ldi	r25, 0x01	; 1
     31a:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
 }
     31e:	0f 90       	pop	r0
     320:	df 91       	pop	r29
     322:	cf 91       	pop	r28
     324:	08 95       	ret

00000326 <main>:


 int main(void){
     326:	cf 93       	push	r28
     328:	df 93       	push	r29
     32a:	cd b7       	in	r28, 0x3d	; 61
     32c:	de b7       	in	r29, 0x3e	; 62
     32e:	a0 97       	sbiw	r28, 0x20	; 32
     330:	0f b6       	in	r0, 0x3f	; 63
     332:	f8 94       	cli
     334:	de bf       	out	0x3e, r29	; 62
     336:	0f be       	out	0x3f, r0	; 63
     338:	cd bf       	out	0x3d, r28	; 61
	 
	 char tx_message[32]; // Define string array
	 char *tx_ptr = tx_message;
	 
	 // Initialize UART
	 USART_init();
     33a:	0e 94 79 00 	call	0xf2	; 0xf2 <USART_init>
	 
	 // Initialize nRF24L01+ and print configuration info
	 nrf24_init();
     33e:	0e 94 57 02 	call	0x4ae	; 0x4ae <nrf24_init>
	 print_config();
     342:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <print_config>
	 adc_init();
     346:	0e 94 85 00 	call	0x10a	; 0x10a <adc_init>
	 
	 // Start listening to incoming messages
	 printf("start listening\n");
     34a:	81 e1       	ldi	r24, 0x11	; 17
     34c:	92 e0       	ldi	r25, 0x02	; 2
     34e:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
	 nrf24_start_listening();
     352:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <nrf24_start_listening>
	 printf("Done listening\n");
     356:	81 e2       	ldi	r24, 0x21	; 33
     358:	92 e0       	ldi	r25, 0x02	; 2
     35a:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
	 
	 while (1){

		 read_adc();
		 tx_ptr = tx_message;
		 snprintf(tx_message, sizeof(tx_message), "%f\r\n", adc_temp);  // CONVERT FLOAT TO STRING
     35e:	00 e3       	ldi	r16, 0x30	; 48
     360:	12 e0       	ldi	r17, 0x02	; 2
     362:	68 94       	set
     364:	99 24       	eor	r9, r9
     366:	95 f8       	bld	r9, 5
     368:	9e 01       	movw	r18, r28
     36a:	2f 5f       	subi	r18, 0xFF	; 255
     36c:	3f 4f       	sbci	r19, 0xFF	; 255
     36e:	79 01       	movw	r14, r18

		 if (message_received){
			 printf("inside if condition\n");
			 // Message received, print it
			 message_received = false;
			 printf("Message Received: %s\n",nrf24_read_message());
     370:	0f 2e       	mov	r0, r31
     372:	f9 e4       	ldi	r31, 0x49	; 73
     374:	cf 2e       	mov	r12, r31
     376:	f2 e0       	ldi	r31, 0x02	; 2
     378:	df 2e       	mov	r13, r31
     37a:	f0 2d       	mov	r31, r0
	 
	 while (1){

		 read_adc();
		 tx_ptr = tx_message;
		 snprintf(tx_message, sizeof(tx_message), "%f\r\n", adc_temp);  // CONVERT FLOAT TO STRING
     37c:	a2 2e       	mov	r10, r18
     37e:	bf 2c       	mov	r11, r15
			 // Message received, print it
			 message_received = false;
			 printf("Message Received: %s\n",nrf24_read_message());
			 // Send message as response
			 _delay_ms(500);
			 status = nrf24_send_message(tx_message);
     380:	88 24       	eor	r8, r8
     382:	83 94       	inc	r8
	 nrf24_start_listening();
	 printf("Done listening\n");
	 
	 while (1){

		 read_adc();
     384:	0e 94 8c 00 	call	0x118	; 0x118 <read_adc>
		 tx_ptr = tx_message;
		 snprintf(tx_message, sizeof(tx_message), "%f\r\n", adc_temp);  // CONVERT FLOAT TO STRING
     388:	80 91 8c 02 	lds	r24, 0x028C	; 0x80028c <__data_end>
     38c:	90 91 8d 02 	lds	r25, 0x028D	; 0x80028d <__data_end+0x1>
     390:	a0 91 8e 02 	lds	r26, 0x028E	; 0x80028e <__data_end+0x2>
     394:	b0 91 8f 02 	lds	r27, 0x028F	; 0x80028f <__data_end+0x3>
     398:	bf 93       	push	r27
     39a:	af 93       	push	r26
     39c:	9f 93       	push	r25
     39e:	8f 93       	push	r24
     3a0:	1f 93       	push	r17
     3a2:	0f 93       	push	r16
     3a4:	1f 92       	push	r1
     3a6:	9f 92       	push	r9
     3a8:	ff 92       	push	r15
     3aa:	ef 92       	push	r14
     3ac:	0e 94 46 06 	call	0xc8c	; 0xc8c <snprintf>
		 nrf24_send_message(tx_ptr);
     3b0:	8a 2d       	mov	r24, r10
     3b2:	9b 2d       	mov	r25, r11
     3b4:	0e 94 87 03 	call	0x70e	; 0x70e <nrf24_send_message>
     3b8:	3f ef       	ldi	r19, 0xFF	; 255
     3ba:	81 ee       	ldi	r24, 0xE1	; 225
     3bc:	94 e0       	ldi	r25, 0x04	; 4
     3be:	31 50       	subi	r19, 0x01	; 1
     3c0:	80 40       	sbci	r24, 0x00	; 0
     3c2:	90 40       	sbci	r25, 0x00	; 0
     3c4:	e1 f7       	brne	.-8      	; 0x3be <main+0x98>
     3c6:	00 c0       	rjmp	.+0      	; 0x3c8 <main+0xa2>
     3c8:	00 00       	nop
		 _delay_ms(100);

		 if (message_received){
     3ca:	80 91 91 02 	lds	r24, 0x0291	; 0x800291 <message_received>
     3ce:	0f b6       	in	r0, 0x3f	; 63
     3d0:	f8 94       	cli
     3d2:	de bf       	out	0x3e, r29	; 62
     3d4:	0f be       	out	0x3f, r0	; 63
     3d6:	cd bf       	out	0x3d, r28	; 61
     3d8:	88 23       	and	r24, r24
     3da:	a1 f2       	breq	.-88     	; 0x384 <main+0x5e>
			 printf("inside if condition\n");
     3dc:	85 e3       	ldi	r24, 0x35	; 53
     3de:	92 e0       	ldi	r25, 0x02	; 2
     3e0:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
			 // Message received, print it
			 message_received = false;
     3e4:	10 92 91 02 	sts	0x0291, r1	; 0x800291 <message_received>
			 printf("Message Received: %s\n",nrf24_read_message());
     3e8:	0e 94 44 04 	call	0x888	; 0x888 <nrf24_read_message>
     3ec:	9f 93       	push	r25
     3ee:	8f 93       	push	r24
     3f0:	df 92       	push	r13
     3f2:	cf 92       	push	r12
     3f4:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
     3f8:	3f ef       	ldi	r19, 0xFF	; 255
     3fa:	89 e6       	ldi	r24, 0x69	; 105
     3fc:	98 e1       	ldi	r25, 0x18	; 24
     3fe:	31 50       	subi	r19, 0x01	; 1
     400:	80 40       	sbci	r24, 0x00	; 0
     402:	90 40       	sbci	r25, 0x00	; 0
     404:	e1 f7       	brne	.-8      	; 0x3fe <main+0xd8>
     406:	00 c0       	rjmp	.+0      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
     408:	00 00       	nop
			 // Send message as response
			 _delay_ms(500);
			 status = nrf24_send_message(tx_message);
     40a:	8a 2d       	mov	r24, r10
     40c:	9b 2d       	mov	r25, r11
     40e:	0e 94 87 03 	call	0x70e	; 0x70e <nrf24_send_message>
     412:	98 2d       	mov	r25, r8
     414:	0f 90       	pop	r0
     416:	0f 90       	pop	r0
     418:	0f 90       	pop	r0
     41a:	0f 90       	pop	r0
     41c:	81 11       	cpse	r24, r1
     41e:	01 c0       	rjmp	.+2      	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
     420:	90 e0       	ldi	r25, 0x00	; 0
     422:	90 93 90 02 	sts	0x0290, r25	; 0x800290 <status>
			 if (status == true)
     426:	80 91 90 02 	lds	r24, 0x0290	; 0x800290 <status>
     42a:	88 23       	and	r24, r24
     42c:	09 f4       	brne	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     42e:	aa cf       	rjmp	.-172    	; 0x384 <main+0x5e>
			 printf("Message Transmitted\n");
     430:	8f e5       	ldi	r24, 0x5F	; 95
     432:	92 e0       	ldi	r25, 0x02	; 2
     434:	0e 94 16 06 	call	0xc2c	; 0xc2c <puts>
     438:	a5 cf       	rjmp	.-182    	; 0x384 <main+0x5e>

0000043a <__vector_1>:
		 }
	 }
 }

 // Interrupt on IRQ pin
 ISR(INT0_vect) {
     43a:	1f 92       	push	r1
     43c:	0f 92       	push	r0
     43e:	0f b6       	in	r0, 0x3f	; 63
     440:	0f 92       	push	r0
     442:	11 24       	eor	r1, r1
     444:	8f 93       	push	r24
	 message_received = true;
     446:	81 e0       	ldi	r24, 0x01	; 1
     448:	80 93 91 02 	sts	0x0291, r24	; 0x800291 <message_received>
     44c:	8f 91       	pop	r24
     44e:	0f 90       	pop	r0
     450:	0f be       	out	0x3f, r0	; 63
     452:	0f 90       	pop	r0
     454:	1f 90       	pop	r1
     456:	18 95       	reti

00000458 <nrf24_send_spi>:
{
	uint8_t config_register;
	nrf24_read(FIFO_STATUS,&config_register,1);
	if (!(config_register & (1 << RX_EMPTY))) return 1;
	return 0;
}
     458:	df 92       	push	r13
     45a:	ef 92       	push	r14
     45c:	ff 92       	push	r15
     45e:	0f 93       	push	r16
     460:	1f 93       	push	r17
     462:	cf 93       	push	r28
     464:	df 93       	push	r29
     466:	7b 01       	movw	r14, r22
     468:	8a 01       	movw	r16, r20
     46a:	2a 98       	cbi	0x05, 2	; 5
     46c:	0e 94 8b 04 	call	0x916	; 0x916 <spi_exchange>
     470:	d8 2e       	mov	r13, r24
     472:	01 15       	cp	r16, r1
     474:	11 05       	cpc	r17, r1
     476:	51 f0       	breq	.+20     	; 0x48c <nrf24_send_spi+0x34>
     478:	e7 01       	movw	r28, r14
     47a:	0e 0d       	add	r16, r14
     47c:	1f 1d       	adc	r17, r15
     47e:	88 81       	ld	r24, Y
     480:	0e 94 8b 04 	call	0x916	; 0x916 <spi_exchange>
     484:	89 93       	st	Y+, r24
     486:	c0 17       	cp	r28, r16
     488:	d1 07       	cpc	r29, r17
     48a:	c9 f7       	brne	.-14     	; 0x47e <nrf24_send_spi+0x26>
     48c:	2a 9a       	sbi	0x05, 2	; 5
     48e:	8d 2d       	mov	r24, r13
     490:	df 91       	pop	r29
     492:	cf 91       	pop	r28
     494:	1f 91       	pop	r17
     496:	0f 91       	pop	r16
     498:	ff 90       	pop	r15
     49a:	ef 90       	pop	r14
     49c:	df 90       	pop	r13
     49e:	08 95       	ret

000004a0 <nrf24_write>:
     4a0:	80 62       	ori	r24, 0x20	; 32
     4a2:	0e 94 2c 02 	call	0x458	; 0x458 <nrf24_send_spi>
     4a6:	08 95       	ret

000004a8 <nrf24_read>:
     4a8:	0e 94 2c 02 	call	0x458	; 0x458 <nrf24_send_spi>
     4ac:	08 95       	ret

000004ae <nrf24_init>:
     4ae:	0f 93       	push	r16
     4b0:	1f 93       	push	r17
     4b2:	cf 93       	push	r28
     4b4:	df 93       	push	r29
     4b6:	1f 92       	push	r1
     4b8:	cd b7       	in	r28, 0x3d	; 61
     4ba:	de b7       	in	r29, 0x3e	; 62
     4bc:	f8 94       	cli
     4be:	e9 e6       	ldi	r30, 0x69	; 105
     4c0:	f0 e0       	ldi	r31, 0x00	; 0
     4c2:	80 81       	ld	r24, Z
     4c4:	82 60       	ori	r24, 0x02	; 2
     4c6:	80 83       	st	Z, r24
     4c8:	e8 9a       	sbi	0x1d, 0	; 29
     4ca:	78 94       	sei
     4cc:	21 9a       	sbi	0x04, 1	; 4
     4ce:	22 9a       	sbi	0x04, 2	; 4
     4d0:	2a 9a       	sbi	0x05, 2	; 5
     4d2:	29 98       	cbi	0x05, 1	; 5
     4d4:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <spi_master_init>
     4d8:	2f ef       	ldi	r18, 0xFF	; 255
     4da:	81 ee       	ldi	r24, 0xE1	; 225
     4dc:	94 e0       	ldi	r25, 0x04	; 4
     4de:	21 50       	subi	r18, 0x01	; 1
     4e0:	80 40       	sbci	r24, 0x00	; 0
     4e2:	90 40       	sbci	r25, 0x00	; 0
     4e4:	e1 f7       	brne	.-8      	; 0x4de <nrf24_init+0x30>
     4e6:	00 c0       	rjmp	.+0      	; 0x4e8 <nrf24_init+0x3a>
     4e8:	00 00       	nop
     4ea:	0f e3       	ldi	r16, 0x3F	; 63
     4ec:	00 93 b2 02 	sts	0x02B2, r16	; 0x8002b2 <data>
     4f0:	41 e0       	ldi	r20, 0x01	; 1
     4f2:	50 e0       	ldi	r21, 0x00	; 0
     4f4:	62 eb       	ldi	r22, 0xB2	; 178
     4f6:	72 e0       	ldi	r23, 0x02	; 2
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     4fe:	10 92 b2 02 	sts	0x02B2, r1	; 0x8002b2 <data>
     502:	41 e0       	ldi	r20, 0x01	; 1
     504:	50 e0       	ldi	r21, 0x00	; 0
     506:	62 eb       	ldi	r22, 0xB2	; 178
     508:	72 e0       	ldi	r23, 0x02	; 2
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     510:	80 ef       	ldi	r24, 0xF0	; 240
     512:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     516:	41 e0       	ldi	r20, 0x01	; 1
     518:	50 e0       	ldi	r21, 0x00	; 0
     51a:	62 eb       	ldi	r22, 0xB2	; 178
     51c:	72 e0       	ldi	r23, 0x02	; 2
     51e:	84 e0       	ldi	r24, 0x04	; 4
     520:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     524:	10 92 b2 02 	sts	0x02B2, r1	; 0x8002b2 <data>
     528:	41 e0       	ldi	r20, 0x01	; 1
     52a:	50 e0       	ldi	r21, 0x00	; 0
     52c:	62 eb       	ldi	r22, 0xB2	; 178
     52e:	72 e0       	ldi	r23, 0x02	; 2
     530:	82 e0       	ldi	r24, 0x02	; 2
     532:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     536:	84 e7       	ldi	r24, 0x74	; 116
     538:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     53c:	41 e0       	ldi	r20, 0x01	; 1
     53e:	50 e0       	ldi	r21, 0x00	; 0
     540:	62 eb       	ldi	r22, 0xB2	; 178
     542:	72 e0       	ldi	r23, 0x02	; 2
     544:	85 e0       	ldi	r24, 0x05	; 5
     546:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     54a:	8e e0       	ldi	r24, 0x0E	; 14
     54c:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     550:	41 e0       	ldi	r20, 0x01	; 1
     552:	50 e0       	ldi	r21, 0x00	; 0
     554:	62 eb       	ldi	r22, 0xB2	; 178
     556:	72 e0       	ldi	r23, 0x02	; 2
     558:	86 e0       	ldi	r24, 0x06	; 6
     55a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     55e:	10 e7       	ldi	r17, 0x70	; 112
     560:	10 93 b2 02 	sts	0x02B2, r17	; 0x8002b2 <data>
     564:	41 e0       	ldi	r20, 0x01	; 1
     566:	50 e0       	ldi	r21, 0x00	; 0
     568:	62 eb       	ldi	r22, 0xB2	; 178
     56a:	72 e0       	ldi	r23, 0x02	; 2
     56c:	87 e0       	ldi	r24, 0x07	; 7
     56e:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     572:	00 93 b2 02 	sts	0x02B2, r16	; 0x8002b2 <data>
     576:	41 e0       	ldi	r20, 0x01	; 1
     578:	50 e0       	ldi	r21, 0x00	; 0
     57a:	62 eb       	ldi	r22, 0xB2	; 178
     57c:	72 e0       	ldi	r23, 0x02	; 2
     57e:	8c e1       	ldi	r24, 0x1C	; 28
     580:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     584:	84 e0       	ldi	r24, 0x04	; 4
     586:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     58a:	41 e0       	ldi	r20, 0x01	; 1
     58c:	50 e0       	ldi	r21, 0x00	; 0
     58e:	62 eb       	ldi	r22, 0xB2	; 178
     590:	72 e0       	ldi	r23, 0x02	; 2
     592:	8d e1       	ldi	r24, 0x1D	; 29
     594:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     598:	19 83       	std	Y+1, r17	; 0x01
     59a:	40 e0       	ldi	r20, 0x00	; 0
     59c:	50 e0       	ldi	r21, 0x00	; 0
     59e:	60 e0       	ldi	r22, 0x00	; 0
     5a0:	70 e0       	ldi	r23, 0x00	; 0
     5a2:	82 ee       	ldi	r24, 0xE2	; 226
     5a4:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     5a8:	40 e0       	ldi	r20, 0x00	; 0
     5aa:	50 e0       	ldi	r21, 0x00	; 0
     5ac:	60 e0       	ldi	r22, 0x00	; 0
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	81 ee       	ldi	r24, 0xE1	; 225
     5b2:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     5b6:	45 e0       	ldi	r20, 0x05	; 5
     5b8:	50 e0       	ldi	r21, 0x00	; 0
     5ba:	65 e0       	ldi	r22, 0x05	; 5
     5bc:	71 e0       	ldi	r23, 0x01	; 1
     5be:	8a e0       	ldi	r24, 0x0A	; 10
     5c0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     5c4:	45 e0       	ldi	r20, 0x05	; 5
     5c6:	50 e0       	ldi	r21, 0x00	; 0
     5c8:	60 e0       	ldi	r22, 0x00	; 0
     5ca:	71 e0       	ldi	r23, 0x01	; 1
     5cc:	80 e1       	ldi	r24, 0x10	; 16
     5ce:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     5d2:	41 e0       	ldi	r20, 0x01	; 1
     5d4:	50 e0       	ldi	r21, 0x00	; 0
     5d6:	be 01       	movw	r22, r28
     5d8:	6f 5f       	subi	r22, 0xFF	; 255
     5da:	7f 4f       	sbci	r23, 0xFF	; 255
     5dc:	82 e0       	ldi	r24, 0x02	; 2
     5de:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     5e2:	89 81       	ldd	r24, Y+1	; 0x01
     5e4:	81 60       	ori	r24, 0x01	; 1
     5e6:	89 83       	std	Y+1, r24	; 0x01
     5e8:	41 e0       	ldi	r20, 0x01	; 1
     5ea:	50 e0       	ldi	r21, 0x00	; 0
     5ec:	be 01       	movw	r22, r28
     5ee:	6f 5f       	subi	r22, 0xFF	; 255
     5f0:	7f 4f       	sbci	r23, 0xFF	; 255
     5f2:	82 e0       	ldi	r24, 0x02	; 2
     5f4:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     5f8:	0f 90       	pop	r0
     5fa:	df 91       	pop	r29
     5fc:	cf 91       	pop	r28
     5fe:	1f 91       	pop	r17
     600:	0f 91       	pop	r16
     602:	08 95       	ret

00000604 <nrf24_state>:
     604:	1f 93       	push	r17
     606:	cf 93       	push	r28
     608:	df 93       	push	r29
     60a:	1f 92       	push	r1
     60c:	cd b7       	in	r28, 0x3d	; 61
     60e:	de b7       	in	r29, 0x3e	; 62
     610:	18 2f       	mov	r17, r24
     612:	41 e0       	ldi	r20, 0x01	; 1
     614:	50 e0       	ldi	r21, 0x00	; 0
     616:	be 01       	movw	r22, r28
     618:	6f 5f       	subi	r22, 0xFF	; 255
     61a:	7f 4f       	sbci	r23, 0xFF	; 255
     61c:	80 e0       	ldi	r24, 0x00	; 0
     61e:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
     622:	13 30       	cpi	r17, 0x03	; 3
     624:	71 f1       	breq	.+92     	; 0x682 <nrf24_state+0x7e>
     626:	28 f4       	brcc	.+10     	; 0x632 <nrf24_state+0x2e>
     628:	11 30       	cpi	r17, 0x01	; 1
     62a:	59 f0       	breq	.+22     	; 0x642 <nrf24_state+0x3e>
     62c:	12 30       	cpi	r17, 0x02	; 2
     62e:	e9 f0       	breq	.+58     	; 0x66a <nrf24_state+0x66>
     630:	5e c0       	rjmp	.+188    	; 0x6ee <nrf24_state+0xea>
     632:	15 30       	cpi	r17, 0x05	; 5
     634:	09 f4       	brne	.+2      	; 0x638 <nrf24_state+0x34>
     636:	47 c0       	rjmp	.+142    	; 0x6c6 <nrf24_state+0xc2>
     638:	d0 f1       	brcs	.+116    	; 0x6ae <nrf24_state+0xaa>
     63a:	16 30       	cpi	r17, 0x06	; 6
     63c:	09 f4       	brne	.+2      	; 0x640 <nrf24_state+0x3c>
     63e:	45 c0       	rjmp	.+138    	; 0x6ca <nrf24_state+0xc6>
     640:	56 c0       	rjmp	.+172    	; 0x6ee <nrf24_state+0xea>
     642:	89 81       	ldd	r24, Y+1	; 0x01
     644:	81 fd       	sbrc	r24, 1
     646:	53 c0       	rjmp	.+166    	; 0x6ee <nrf24_state+0xea>
     648:	82 60       	ori	r24, 0x02	; 2
     64a:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     64e:	41 e0       	ldi	r20, 0x01	; 1
     650:	50 e0       	ldi	r21, 0x00	; 0
     652:	62 eb       	ldi	r22, 0xB2	; 178
     654:	72 e0       	ldi	r23, 0x02	; 2
     656:	80 e0       	ldi	r24, 0x00	; 0
     658:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     65c:	8f e3       	ldi	r24, 0x3F	; 63
     65e:	9f e1       	ldi	r25, 0x1F	; 31
     660:	01 97       	sbiw	r24, 0x01	; 1
     662:	f1 f7       	brne	.-4      	; 0x660 <nrf24_state+0x5c>
     664:	00 c0       	rjmp	.+0      	; 0x666 <nrf24_state+0x62>
     666:	00 00       	nop
     668:	42 c0       	rjmp	.+132    	; 0x6ee <nrf24_state+0xea>
     66a:	89 81       	ldd	r24, Y+1	; 0x01
     66c:	8d 7f       	andi	r24, 0xFD	; 253
     66e:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     672:	41 e0       	ldi	r20, 0x01	; 1
     674:	50 e0       	ldi	r21, 0x00	; 0
     676:	62 eb       	ldi	r22, 0xB2	; 178
     678:	72 e0       	ldi	r23, 0x02	; 2
     67a:	80 e0       	ldi	r24, 0x00	; 0
     67c:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     680:	36 c0       	rjmp	.+108    	; 0x6ee <nrf24_state+0xea>
     682:	89 81       	ldd	r24, Y+1	; 0x01
     684:	81 60       	ori	r24, 0x01	; 1
     686:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     68a:	41 e0       	ldi	r20, 0x01	; 1
     68c:	50 e0       	ldi	r21, 0x00	; 0
     68e:	62 eb       	ldi	r22, 0xB2	; 178
     690:	72 e0       	ldi	r23, 0x02	; 2
     692:	80 e0       	ldi	r24, 0x00	; 0
     694:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     698:	80 e7       	ldi	r24, 0x70	; 112
     69a:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     69e:	41 e0       	ldi	r20, 0x01	; 1
     6a0:	50 e0       	ldi	r21, 0x00	; 0
     6a2:	62 eb       	ldi	r22, 0xB2	; 178
     6a4:	72 e0       	ldi	r23, 0x02	; 2
     6a6:	87 e0       	ldi	r24, 0x07	; 7
     6a8:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     6ac:	20 c0       	rjmp	.+64     	; 0x6ee <nrf24_state+0xea>
     6ae:	89 81       	ldd	r24, Y+1	; 0x01
     6b0:	8e 7f       	andi	r24, 0xFE	; 254
     6b2:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     6b6:	41 e0       	ldi	r20, 0x01	; 1
     6b8:	50 e0       	ldi	r21, 0x00	; 0
     6ba:	62 eb       	ldi	r22, 0xB2	; 178
     6bc:	72 e0       	ldi	r23, 0x02	; 2
     6be:	80 e0       	ldi	r24, 0x00	; 0
     6c0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     6c4:	14 c0       	rjmp	.+40     	; 0x6ee <nrf24_state+0xea>
     6c6:	29 98       	cbi	0x05, 1	; 5
     6c8:	12 c0       	rjmp	.+36     	; 0x6ee <nrf24_state+0xea>
     6ca:	89 81       	ldd	r24, Y+1	; 0x01
     6cc:	8e 7f       	andi	r24, 0xFE	; 254
     6ce:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     6d2:	41 e0       	ldi	r20, 0x01	; 1
     6d4:	50 e0       	ldi	r21, 0x00	; 0
     6d6:	62 eb       	ldi	r22, 0xB2	; 178
     6d8:	72 e0       	ldi	r23, 0x02	; 2
     6da:	80 e0       	ldi	r24, 0x00	; 0
     6dc:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     6e0:	29 9a       	sbi	0x05, 1	; 5
     6e2:	87 e5       	ldi	r24, 0x57	; 87
     6e4:	92 e0       	ldi	r25, 0x02	; 2
     6e6:	01 97       	sbiw	r24, 0x01	; 1
     6e8:	f1 f7       	brne	.-4      	; 0x6e6 <nrf24_state+0xe2>
     6ea:	00 c0       	rjmp	.+0      	; 0x6ec <nrf24_state+0xe8>
     6ec:	00 00       	nop
     6ee:	0f 90       	pop	r0
     6f0:	df 91       	pop	r29
     6f2:	cf 91       	pop	r28
     6f4:	1f 91       	pop	r17
     6f6:	08 95       	ret

000006f8 <nrf24_start_listening>:
     6f8:	83 e0       	ldi	r24, 0x03	; 3
     6fa:	0e 94 02 03 	call	0x604	; 0x604 <nrf24_state>
     6fe:	29 9a       	sbi	0x05, 1	; 5
     700:	87 e5       	ldi	r24, 0x57	; 87
     702:	92 e0       	ldi	r25, 0x02	; 2
     704:	01 97       	sbiw	r24, 0x01	; 1
     706:	f1 f7       	brne	.-4      	; 0x704 <nrf24_start_listening+0xc>
     708:	00 c0       	rjmp	.+0      	; 0x70a <nrf24_start_listening+0x12>
     70a:	00 00       	nop
     70c:	08 95       	ret

0000070e <nrf24_send_message>:
     70e:	cf 92       	push	r12
     710:	df 92       	push	r13
     712:	ef 92       	push	r14
     714:	ff 92       	push	r15
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
     71e:	cd b7       	in	r28, 0x3d	; 61
     720:	de b7       	in	r29, 0x3e	; 62
     722:	a0 97       	sbiw	r28, 0x20	; 32
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	f8 94       	cli
     728:	de bf       	out	0x3e, r29	; 62
     72a:	0f be       	out	0x3f, r0	; 63
     72c:	cd bf       	out	0x3d, r28	; 61
     72e:	6c 01       	movw	r12, r24
     730:	68 94       	set
     732:	ff 24       	eor	r15, r15
     734:	f5 f8       	bld	r15, 5
     736:	ce 01       	movw	r24, r28
     738:	01 96       	adiw	r24, 0x01	; 1
     73a:	fc 01       	movw	r30, r24
     73c:	2f 2d       	mov	r18, r15
     73e:	11 92       	st	Z+, r1
     740:	2a 95       	dec	r18
     742:	e9 f7       	brne	.-6      	; 0x73e <nrf24_send_message+0x30>
     744:	b6 01       	movw	r22, r12
     746:	0e 94 f9 05 	call	0xbf2	; 0xbf2 <strcpy>
     74a:	f6 01       	movw	r30, r12
     74c:	01 90       	ld	r0, Z+
     74e:	00 20       	and	r0, r0
     750:	e9 f7       	brne	.-6      	; 0x74c <nrf24_send_message+0x3e>
     752:	31 97       	sbiw	r30, 0x01	; 1
     754:	8f 01       	movw	r16, r30
     756:	0c 19       	sub	r16, r12
     758:	1d 09       	sbc	r17, r13
     75a:	84 e0       	ldi	r24, 0x04	; 4
     75c:	0e 94 02 03 	call	0x604	; 0x604 <nrf24_state>
     760:	40 e0       	ldi	r20, 0x00	; 0
     762:	50 e0       	ldi	r21, 0x00	; 0
     764:	60 e0       	ldi	r22, 0x00	; 0
     766:	70 e0       	ldi	r23, 0x00	; 0
     768:	82 ee       	ldi	r24, 0xE2	; 226
     76a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     76e:	40 e0       	ldi	r20, 0x00	; 0
     770:	50 e0       	ldi	r21, 0x00	; 0
     772:	60 e0       	ldi	r22, 0x00	; 0
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	81 ee       	ldi	r24, 0xE1	; 225
     778:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     77c:	f0 92 b2 02 	sts	0x02B2, r15	; 0x8002b2 <data>
     780:	41 e0       	ldi	r20, 0x01	; 1
     782:	50 e0       	ldi	r21, 0x00	; 0
     784:	62 eb       	ldi	r22, 0xB2	; 178
     786:	72 e0       	ldi	r23, 0x02	; 2
     788:	87 e0       	ldi	r24, 0x07	; 7
     78a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     78e:	41 e0       	ldi	r20, 0x01	; 1
     790:	50 e0       	ldi	r21, 0x00	; 0
     792:	62 eb       	ldi	r22, 0xB2	; 178
     794:	72 e0       	ldi	r23, 0x02	; 2
     796:	80 e0       	ldi	r24, 0x00	; 0
     798:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
     79c:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <data>
     7a0:	80 64       	ori	r24, 0x40	; 64
     7a2:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     7a6:	41 e0       	ldi	r20, 0x01	; 1
     7a8:	50 e0       	ldi	r21, 0x00	; 0
     7aa:	62 eb       	ldi	r22, 0xB2	; 178
     7ac:	72 e0       	ldi	r23, 0x02	; 2
     7ae:	80 e0       	ldi	r24, 0x00	; 0
     7b0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     7b4:	2a 98       	cbi	0x05, 2	; 5
     7b6:	80 eb       	ldi	r24, 0xB0	; 176
     7b8:	0e 94 86 04 	call	0x90c	; 0x90c <spi_send>
     7bc:	ef ef       	ldi	r30, 0xFF	; 255
     7be:	e0 0f       	add	r30, r16
     7c0:	00 23       	and	r16, r16
     7c2:	81 f0       	breq	.+32     	; 0x7e4 <nrf24_send_message+0xd6>
     7c4:	86 01       	movw	r16, r12
     7c6:	ee 2e       	mov	r14, r30
     7c8:	f1 2c       	mov	r15, r1
     7ca:	f7 01       	movw	r30, r14
     7cc:	31 96       	adiw	r30, 0x01	; 1
     7ce:	76 01       	movw	r14, r12
     7d0:	ee 0e       	add	r14, r30
     7d2:	ff 1e       	adc	r15, r31
     7d4:	f8 01       	movw	r30, r16
     7d6:	81 91       	ld	r24, Z+
     7d8:	8f 01       	movw	r16, r30
     7da:	0e 94 86 04 	call	0x90c	; 0x90c <spi_send>
     7de:	0e 15       	cp	r16, r14
     7e0:	1f 05       	cpc	r17, r15
     7e2:	c1 f7       	brne	.-16     	; 0x7d4 <nrf24_send_message+0xc6>
     7e4:	80 e0       	ldi	r24, 0x00	; 0
     7e6:	0e 94 86 04 	call	0x90c	; 0x90c <spi_send>
     7ea:	2a 9a       	sbi	0x05, 2	; 5
     7ec:	29 9a       	sbi	0x05, 1	; 5
     7ee:	f0 e5       	ldi	r31, 0x50	; 80
     7f0:	fa 95       	dec	r31
     7f2:	f1 f7       	brne	.-4      	; 0x7f0 <nrf24_send_message+0xe2>
     7f4:	29 98       	cbi	0x05, 1	; 5
     7f6:	41 e0       	ldi	r20, 0x01	; 1
     7f8:	50 e0       	ldi	r21, 0x00	; 0
     7fa:	62 eb       	ldi	r22, 0xB2	; 178
     7fc:	72 e0       	ldi	r23, 0x02	; 2
     7fe:	87 e0       	ldi	r24, 0x07	; 7
     800:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
     804:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <data>
     808:	85 fd       	sbrc	r24, 5
     80a:	0b c0       	rjmp	.+22     	; 0x822 <nrf24_send_message+0x114>
     80c:	41 e0       	ldi	r20, 0x01	; 1
     80e:	50 e0       	ldi	r21, 0x00	; 0
     810:	62 eb       	ldi	r22, 0xB2	; 178
     812:	72 e0       	ldi	r23, 0x02	; 2
     814:	87 e0       	ldi	r24, 0x07	; 7
     816:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
     81a:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <data>
     81e:	85 ff       	sbrs	r24, 5
     820:	f5 cf       	rjmp	.-22     	; 0x80c <nrf24_send_message+0xfe>
     822:	ce 01       	movw	r24, r28
     824:	01 96       	adiw	r24, 0x01	; 1
     826:	9f 93       	push	r25
     828:	8f 93       	push	r24
     82a:	83 e7       	ldi	r24, 0x73	; 115
     82c:	92 e0       	ldi	r25, 0x02	; 2
     82e:	9f 93       	push	r25
     830:	8f 93       	push	r24
     832:	0e 94 00 06 	call	0xc00	; 0xc00 <printf>
     836:	41 e0       	ldi	r20, 0x01	; 1
     838:	50 e0       	ldi	r21, 0x00	; 0
     83a:	62 eb       	ldi	r22, 0xB2	; 178
     83c:	72 e0       	ldi	r23, 0x02	; 2
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
     844:	80 91 b2 02 	lds	r24, 0x02B2	; 0x8002b2 <data>
     848:	8f 7b       	andi	r24, 0xBF	; 191
     84a:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
     84e:	41 e0       	ldi	r20, 0x01	; 1
     850:	50 e0       	ldi	r21, 0x00	; 0
     852:	62 eb       	ldi	r22, 0xB2	; 178
     854:	72 e0       	ldi	r23, 0x02	; 2
     856:	80 e0       	ldi	r24, 0x00	; 0
     858:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
     85c:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <nrf24_start_listening>
     860:	0f 90       	pop	r0
     862:	0f 90       	pop	r0
     864:	0f 90       	pop	r0
     866:	0f 90       	pop	r0
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	a0 96       	adiw	r28, 0x20	; 32
     86c:	0f b6       	in	r0, 0x3f	; 63
     86e:	f8 94       	cli
     870:	de bf       	out	0x3e, r29	; 62
     872:	0f be       	out	0x3f, r0	; 63
     874:	cd bf       	out	0x3d, r28	; 61
     876:	df 91       	pop	r29
     878:	cf 91       	pop	r28
     87a:	1f 91       	pop	r17
     87c:	0f 91       	pop	r16
     87e:	ff 90       	pop	r15
     880:	ef 90       	pop	r14
     882:	df 90       	pop	r13
     884:	cf 90       	pop	r12
     886:	08 95       	ret

00000888 <nrf24_read_message>:

const char * nrf24_read_message(void)
{
	// Message placeholder
	static char rx_message[32];
	memset(rx_message,0,32);
     888:	80 e2       	ldi	r24, 0x20	; 32
     88a:	e2 e9       	ldi	r30, 0x92	; 146
     88c:	f2 e0       	ldi	r31, 0x02	; 2
     88e:	df 01       	movw	r26, r30
     890:	1d 92       	st	X+, r1
     892:	8a 95       	dec	r24
     894:	e9 f7       	brne	.-6      	; 0x890 <nrf24_read_message+0x8>
	
	// Write ACK message
	if (AUTO_ACK) nrf24_write_ack();
	
	// Get length of incoming message
	nrf24_read(R_RX_PL_WID,&data,1);
     896:	41 e0       	ldi	r20, 0x01	; 1
     898:	50 e0       	ldi	r21, 0x00	; 0
     89a:	62 eb       	ldi	r22, 0xB2	; 178
     89c:	72 e0       	ldi	r23, 0x02	; 2
     89e:	80 e6       	ldi	r24, 0x60	; 96
     8a0:	0e 94 54 02 	call	0x4a8	; 0x4a8 <nrf24_read>
	
	// Read message
	if (data > 0) nrf24_send_spi(R_RX_PAYLOAD,&rx_message,data+1);
     8a4:	40 91 b2 02 	lds	r20, 0x02B2	; 0x8002b2 <data>
     8a8:	44 23       	and	r20, r20
     8aa:	41 f0       	breq	.+16     	; 0x8bc <nrf24_read_message+0x34>
     8ac:	50 e0       	ldi	r21, 0x00	; 0
     8ae:	4f 5f       	subi	r20, 0xFF	; 255
     8b0:	5f 4f       	sbci	r21, 0xFF	; 255
     8b2:	62 e9       	ldi	r22, 0x92	; 146
     8b4:	72 e0       	ldi	r23, 0x02	; 2
     8b6:	81 e6       	ldi	r24, 0x61	; 97
     8b8:	0e 94 2c 02 	call	0x458	; 0x458 <nrf24_send_spi>

	// Check if there is message in array
	if (strlen(rx_message) > 0)
     8bc:	80 91 92 02 	lds	r24, 0x0292	; 0x800292 <rx_message.2167>
     8c0:	88 23       	and	r24, r24
     8c2:	69 f0       	breq	.+26     	; 0x8de <nrf24_read_message+0x56>
	{
		// Clear RX interrupt
		data = (1 << RX_DR);
     8c4:	80 e4       	ldi	r24, 0x40	; 64
     8c6:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
		nrf24_write(STATUS,&data,1);
     8ca:	41 e0       	ldi	r20, 0x01	; 1
     8cc:	50 e0       	ldi	r21, 0x00	; 0
     8ce:	62 eb       	ldi	r22, 0xB2	; 178
     8d0:	72 e0       	ldi	r23, 0x02	; 2
     8d2:	87 e0       	ldi	r24, 0x07	; 7
     8d4:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
		
		return rx_message;
     8d8:	82 e9       	ldi	r24, 0x92	; 146
     8da:	92 e0       	ldi	r25, 0x02	; 2
     8dc:	08 95       	ret
	}
	
	// Clear RX interrupt
	data = (1 << RX_DR);
     8de:	80 e4       	ldi	r24, 0x40	; 64
     8e0:	80 93 b2 02 	sts	0x02B2, r24	; 0x8002b2 <data>
	nrf24_write(STATUS,&data,1);
     8e4:	41 e0       	ldi	r20, 0x01	; 1
     8e6:	50 e0       	ldi	r21, 0x00	; 0
     8e8:	62 eb       	ldi	r22, 0xB2	; 178
     8ea:	72 e0       	ldi	r23, 0x02	; 2
     8ec:	87 e0       	ldi	r24, 0x07	; 7
     8ee:	0e 94 50 02 	call	0x4a0	; 0x4a0 <nrf24_write>
	
	return "failed";
     8f2:	85 e8       	ldi	r24, 0x85	; 133
     8f4:	92 e0       	ldi	r25, 0x02	; 2
}
     8f6:	08 95       	ret

000008f8 <spi_master_init>:
	loop_until_bit_is_set(SPSR0, SPIF);
}

void spi_bulk_exchange( uint8_t *send_buffer, uint8_t *receive_buffer, uint8_t count )
{
	while ( count-- ) {
     8f8:	24 98       	cbi	0x04, 4	; 4
     8fa:	84 b1       	in	r24, 0x04	; 4
     8fc:	88 62       	ori	r24, 0x28	; 40
     8fe:	84 b9       	out	0x04, r24	; 4
     900:	80 e5       	ldi	r24, 0x50	; 80
     902:	8c bd       	out	0x2c, r24	; 44
     904:	8d b5       	in	r24, 0x2d	; 45
     906:	81 60       	ori	r24, 0x01	; 1
     908:	8d bd       	out	0x2d, r24	; 45
     90a:	08 95       	ret

0000090c <spi_send>:
     90c:	8e bd       	out	0x2e, r24	; 46
     90e:	0d b4       	in	r0, 0x2d	; 45
     910:	07 fe       	sbrs	r0, 7
     912:	fd cf       	rjmp	.-6      	; 0x90e <spi_send+0x2>
     914:	08 95       	ret

00000916 <spi_exchange>:
	}
}

uint8_t spi_exchange( uint8_t send_data )
{
	SPDR0 = send_data;
     916:	8e bd       	out	0x2e, r24	; 46
	loop_until_bit_is_set(SPSR0, SPIF);
     918:	0d b4       	in	r0, 0x2d	; 45
     91a:	07 fe       	sbrs	r0, 7
     91c:	fd cf       	rjmp	.-6      	; 0x918 <spi_exchange+0x2>
	return SPDR0;
     91e:	8e b5       	in	r24, 0x2e	; 46
}
     920:	08 95       	ret

00000922 <__subsf3>:
     922:	50 58       	subi	r21, 0x80	; 128

00000924 <__addsf3>:
     924:	bb 27       	eor	r27, r27
     926:	aa 27       	eor	r26, r26
     928:	0e 94 a9 04 	call	0x952	; 0x952 <__addsf3x>
     92c:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__fp_round>
     930:	0e 94 44 05 	call	0xa88	; 0xa88 <__fp_pscA>
     934:	38 f0       	brcs	.+14     	; 0x944 <__addsf3+0x20>
     936:	0e 94 4b 05 	call	0xa96	; 0xa96 <__fp_pscB>
     93a:	20 f0       	brcs	.+8      	; 0x944 <__addsf3+0x20>
     93c:	39 f4       	brne	.+14     	; 0x94c <__addsf3+0x28>
     93e:	9f 3f       	cpi	r25, 0xFF	; 255
     940:	19 f4       	brne	.+6      	; 0x948 <__addsf3+0x24>
     942:	26 f4       	brtc	.+8      	; 0x94c <__addsf3+0x28>
     944:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__fp_nan>
     948:	0e f4       	brtc	.+2      	; 0x94c <__addsf3+0x28>
     94a:	e0 95       	com	r30
     94c:	e7 fb       	bst	r30, 7
     94e:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_inf>

00000952 <__addsf3x>:
     952:	e9 2f       	mov	r30, r25
     954:	0e 94 63 05 	call	0xac6	; 0xac6 <__fp_split3>
     958:	58 f3       	brcs	.-42     	; 0x930 <__addsf3+0xc>
     95a:	ba 17       	cp	r27, r26
     95c:	62 07       	cpc	r22, r18
     95e:	73 07       	cpc	r23, r19
     960:	84 07       	cpc	r24, r20
     962:	95 07       	cpc	r25, r21
     964:	20 f0       	brcs	.+8      	; 0x96e <__addsf3x+0x1c>
     966:	79 f4       	brne	.+30     	; 0x986 <__addsf3x+0x34>
     968:	a6 f5       	brtc	.+104    	; 0x9d2 <__addsf3x+0x80>
     96a:	0c 94 85 05 	jmp	0xb0a	; 0xb0a <__fp_zero>
     96e:	0e f4       	brtc	.+2      	; 0x972 <__addsf3x+0x20>
     970:	e0 95       	com	r30
     972:	0b 2e       	mov	r0, r27
     974:	ba 2f       	mov	r27, r26
     976:	a0 2d       	mov	r26, r0
     978:	0b 01       	movw	r0, r22
     97a:	b9 01       	movw	r22, r18
     97c:	90 01       	movw	r18, r0
     97e:	0c 01       	movw	r0, r24
     980:	ca 01       	movw	r24, r20
     982:	a0 01       	movw	r20, r0
     984:	11 24       	eor	r1, r1
     986:	ff 27       	eor	r31, r31
     988:	59 1b       	sub	r21, r25
     98a:	99 f0       	breq	.+38     	; 0x9b2 <__addsf3x+0x60>
     98c:	59 3f       	cpi	r21, 0xF9	; 249
     98e:	50 f4       	brcc	.+20     	; 0x9a4 <__addsf3x+0x52>
     990:	50 3e       	cpi	r21, 0xE0	; 224
     992:	68 f1       	brcs	.+90     	; 0x9ee <__addsf3x+0x9c>
     994:	1a 16       	cp	r1, r26
     996:	f0 40       	sbci	r31, 0x00	; 0
     998:	a2 2f       	mov	r26, r18
     99a:	23 2f       	mov	r18, r19
     99c:	34 2f       	mov	r19, r20
     99e:	44 27       	eor	r20, r20
     9a0:	58 5f       	subi	r21, 0xF8	; 248
     9a2:	f3 cf       	rjmp	.-26     	; 0x98a <__addsf3x+0x38>
     9a4:	46 95       	lsr	r20
     9a6:	37 95       	ror	r19
     9a8:	27 95       	ror	r18
     9aa:	a7 95       	ror	r26
     9ac:	f0 40       	sbci	r31, 0x00	; 0
     9ae:	53 95       	inc	r21
     9b0:	c9 f7       	brne	.-14     	; 0x9a4 <__addsf3x+0x52>
     9b2:	7e f4       	brtc	.+30     	; 0x9d2 <__addsf3x+0x80>
     9b4:	1f 16       	cp	r1, r31
     9b6:	ba 0b       	sbc	r27, r26
     9b8:	62 0b       	sbc	r22, r18
     9ba:	73 0b       	sbc	r23, r19
     9bc:	84 0b       	sbc	r24, r20
     9be:	ba f0       	brmi	.+46     	; 0x9ee <__addsf3x+0x9c>
     9c0:	91 50       	subi	r25, 0x01	; 1
     9c2:	a1 f0       	breq	.+40     	; 0x9ec <__addsf3x+0x9a>
     9c4:	ff 0f       	add	r31, r31
     9c6:	bb 1f       	adc	r27, r27
     9c8:	66 1f       	adc	r22, r22
     9ca:	77 1f       	adc	r23, r23
     9cc:	88 1f       	adc	r24, r24
     9ce:	c2 f7       	brpl	.-16     	; 0x9c0 <__addsf3x+0x6e>
     9d0:	0e c0       	rjmp	.+28     	; 0x9ee <__addsf3x+0x9c>
     9d2:	ba 0f       	add	r27, r26
     9d4:	62 1f       	adc	r22, r18
     9d6:	73 1f       	adc	r23, r19
     9d8:	84 1f       	adc	r24, r20
     9da:	48 f4       	brcc	.+18     	; 0x9ee <__addsf3x+0x9c>
     9dc:	87 95       	ror	r24
     9de:	77 95       	ror	r23
     9e0:	67 95       	ror	r22
     9e2:	b7 95       	ror	r27
     9e4:	f7 95       	ror	r31
     9e6:	9e 3f       	cpi	r25, 0xFE	; 254
     9e8:	08 f0       	brcs	.+2      	; 0x9ec <__addsf3x+0x9a>
     9ea:	b0 cf       	rjmp	.-160    	; 0x94c <__addsf3+0x28>
     9ec:	93 95       	inc	r25
     9ee:	88 0f       	add	r24, r24
     9f0:	08 f0       	brcs	.+2      	; 0x9f4 <__addsf3x+0xa2>
     9f2:	99 27       	eor	r25, r25
     9f4:	ee 0f       	add	r30, r30
     9f6:	97 95       	ror	r25
     9f8:	87 95       	ror	r24
     9fa:	08 95       	ret

000009fc <__floatunsisf>:
     9fc:	e8 94       	clt
     9fe:	09 c0       	rjmp	.+18     	; 0xa12 <__floatsisf+0x12>

00000a00 <__floatsisf>:
     a00:	97 fb       	bst	r25, 7
     a02:	3e f4       	brtc	.+14     	; 0xa12 <__floatsisf+0x12>
     a04:	90 95       	com	r25
     a06:	80 95       	com	r24
     a08:	70 95       	com	r23
     a0a:	61 95       	neg	r22
     a0c:	7f 4f       	sbci	r23, 0xFF	; 255
     a0e:	8f 4f       	sbci	r24, 0xFF	; 255
     a10:	9f 4f       	sbci	r25, 0xFF	; 255
     a12:	99 23       	and	r25, r25
     a14:	a9 f0       	breq	.+42     	; 0xa40 <__floatsisf+0x40>
     a16:	f9 2f       	mov	r31, r25
     a18:	96 e9       	ldi	r25, 0x96	; 150
     a1a:	bb 27       	eor	r27, r27
     a1c:	93 95       	inc	r25
     a1e:	f6 95       	lsr	r31
     a20:	87 95       	ror	r24
     a22:	77 95       	ror	r23
     a24:	67 95       	ror	r22
     a26:	b7 95       	ror	r27
     a28:	f1 11       	cpse	r31, r1
     a2a:	f8 cf       	rjmp	.-16     	; 0xa1c <__floatsisf+0x1c>
     a2c:	fa f4       	brpl	.+62     	; 0xa6c <__floatsisf+0x6c>
     a2e:	bb 0f       	add	r27, r27
     a30:	11 f4       	brne	.+4      	; 0xa36 <__floatsisf+0x36>
     a32:	60 ff       	sbrs	r22, 0
     a34:	1b c0       	rjmp	.+54     	; 0xa6c <__floatsisf+0x6c>
     a36:	6f 5f       	subi	r22, 0xFF	; 255
     a38:	7f 4f       	sbci	r23, 0xFF	; 255
     a3a:	8f 4f       	sbci	r24, 0xFF	; 255
     a3c:	9f 4f       	sbci	r25, 0xFF	; 255
     a3e:	16 c0       	rjmp	.+44     	; 0xa6c <__floatsisf+0x6c>
     a40:	88 23       	and	r24, r24
     a42:	11 f0       	breq	.+4      	; 0xa48 <__floatsisf+0x48>
     a44:	96 e9       	ldi	r25, 0x96	; 150
     a46:	11 c0       	rjmp	.+34     	; 0xa6a <__floatsisf+0x6a>
     a48:	77 23       	and	r23, r23
     a4a:	21 f0       	breq	.+8      	; 0xa54 <__floatsisf+0x54>
     a4c:	9e e8       	ldi	r25, 0x8E	; 142
     a4e:	87 2f       	mov	r24, r23
     a50:	76 2f       	mov	r23, r22
     a52:	05 c0       	rjmp	.+10     	; 0xa5e <__floatsisf+0x5e>
     a54:	66 23       	and	r22, r22
     a56:	71 f0       	breq	.+28     	; 0xa74 <__floatsisf+0x74>
     a58:	96 e8       	ldi	r25, 0x86	; 134
     a5a:	86 2f       	mov	r24, r22
     a5c:	70 e0       	ldi	r23, 0x00	; 0
     a5e:	60 e0       	ldi	r22, 0x00	; 0
     a60:	2a f0       	brmi	.+10     	; 0xa6c <__floatsisf+0x6c>
     a62:	9a 95       	dec	r25
     a64:	66 0f       	add	r22, r22
     a66:	77 1f       	adc	r23, r23
     a68:	88 1f       	adc	r24, r24
     a6a:	da f7       	brpl	.-10     	; 0xa62 <__floatsisf+0x62>
     a6c:	88 0f       	add	r24, r24
     a6e:	96 95       	lsr	r25
     a70:	87 95       	ror	r24
     a72:	97 f9       	bld	r25, 7
     a74:	08 95       	ret

00000a76 <__fp_inf>:
     a76:	97 f9       	bld	r25, 7
     a78:	9f 67       	ori	r25, 0x7F	; 127
     a7a:	80 e8       	ldi	r24, 0x80	; 128
     a7c:	70 e0       	ldi	r23, 0x00	; 0
     a7e:	60 e0       	ldi	r22, 0x00	; 0
     a80:	08 95       	ret

00000a82 <__fp_nan>:
     a82:	9f ef       	ldi	r25, 0xFF	; 255
     a84:	80 ec       	ldi	r24, 0xC0	; 192
     a86:	08 95       	ret

00000a88 <__fp_pscA>:
     a88:	00 24       	eor	r0, r0
     a8a:	0a 94       	dec	r0
     a8c:	16 16       	cp	r1, r22
     a8e:	17 06       	cpc	r1, r23
     a90:	18 06       	cpc	r1, r24
     a92:	09 06       	cpc	r0, r25
     a94:	08 95       	ret

00000a96 <__fp_pscB>:
     a96:	00 24       	eor	r0, r0
     a98:	0a 94       	dec	r0
     a9a:	12 16       	cp	r1, r18
     a9c:	13 06       	cpc	r1, r19
     a9e:	14 06       	cpc	r1, r20
     aa0:	05 06       	cpc	r0, r21
     aa2:	08 95       	ret

00000aa4 <__fp_round>:
     aa4:	09 2e       	mov	r0, r25
     aa6:	03 94       	inc	r0
     aa8:	00 0c       	add	r0, r0
     aaa:	11 f4       	brne	.+4      	; 0xab0 <__fp_round+0xc>
     aac:	88 23       	and	r24, r24
     aae:	52 f0       	brmi	.+20     	; 0xac4 <__fp_round+0x20>
     ab0:	bb 0f       	add	r27, r27
     ab2:	40 f4       	brcc	.+16     	; 0xac4 <__fp_round+0x20>
     ab4:	bf 2b       	or	r27, r31
     ab6:	11 f4       	brne	.+4      	; 0xabc <__fp_round+0x18>
     ab8:	60 ff       	sbrs	r22, 0
     aba:	04 c0       	rjmp	.+8      	; 0xac4 <__fp_round+0x20>
     abc:	6f 5f       	subi	r22, 0xFF	; 255
     abe:	7f 4f       	sbci	r23, 0xFF	; 255
     ac0:	8f 4f       	sbci	r24, 0xFF	; 255
     ac2:	9f 4f       	sbci	r25, 0xFF	; 255
     ac4:	08 95       	ret

00000ac6 <__fp_split3>:
     ac6:	57 fd       	sbrc	r21, 7
     ac8:	90 58       	subi	r25, 0x80	; 128
     aca:	44 0f       	add	r20, r20
     acc:	55 1f       	adc	r21, r21
     ace:	59 f0       	breq	.+22     	; 0xae6 <__fp_splitA+0x10>
     ad0:	5f 3f       	cpi	r21, 0xFF	; 255
     ad2:	71 f0       	breq	.+28     	; 0xaf0 <__fp_splitA+0x1a>
     ad4:	47 95       	ror	r20

00000ad6 <__fp_splitA>:
     ad6:	88 0f       	add	r24, r24
     ad8:	97 fb       	bst	r25, 7
     ada:	99 1f       	adc	r25, r25
     adc:	61 f0       	breq	.+24     	; 0xaf6 <__fp_splitA+0x20>
     ade:	9f 3f       	cpi	r25, 0xFF	; 255
     ae0:	79 f0       	breq	.+30     	; 0xb00 <__fp_splitA+0x2a>
     ae2:	87 95       	ror	r24
     ae4:	08 95       	ret
     ae6:	12 16       	cp	r1, r18
     ae8:	13 06       	cpc	r1, r19
     aea:	14 06       	cpc	r1, r20
     aec:	55 1f       	adc	r21, r21
     aee:	f2 cf       	rjmp	.-28     	; 0xad4 <__fp_split3+0xe>
     af0:	46 95       	lsr	r20
     af2:	f1 df       	rcall	.-30     	; 0xad6 <__fp_splitA>
     af4:	08 c0       	rjmp	.+16     	; 0xb06 <__fp_splitA+0x30>
     af6:	16 16       	cp	r1, r22
     af8:	17 06       	cpc	r1, r23
     afa:	18 06       	cpc	r1, r24
     afc:	99 1f       	adc	r25, r25
     afe:	f1 cf       	rjmp	.-30     	; 0xae2 <__fp_splitA+0xc>
     b00:	86 95       	lsr	r24
     b02:	71 05       	cpc	r23, r1
     b04:	61 05       	cpc	r22, r1
     b06:	08 94       	sec
     b08:	08 95       	ret

00000b0a <__fp_zero>:
     b0a:	e8 94       	clt

00000b0c <__fp_szero>:
     b0c:	bb 27       	eor	r27, r27
     b0e:	66 27       	eor	r22, r22
     b10:	77 27       	eor	r23, r23
     b12:	cb 01       	movw	r24, r22
     b14:	97 f9       	bld	r25, 7
     b16:	08 95       	ret

00000b18 <__mulsf3>:
     b18:	0e 94 9f 05 	call	0xb3e	; 0xb3e <__mulsf3x>
     b1c:	0c 94 52 05 	jmp	0xaa4	; 0xaa4 <__fp_round>
     b20:	0e 94 44 05 	call	0xa88	; 0xa88 <__fp_pscA>
     b24:	38 f0       	brcs	.+14     	; 0xb34 <__mulsf3+0x1c>
     b26:	0e 94 4b 05 	call	0xa96	; 0xa96 <__fp_pscB>
     b2a:	20 f0       	brcs	.+8      	; 0xb34 <__mulsf3+0x1c>
     b2c:	95 23       	and	r25, r21
     b2e:	11 f0       	breq	.+4      	; 0xb34 <__mulsf3+0x1c>
     b30:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_inf>
     b34:	0c 94 41 05 	jmp	0xa82	; 0xa82 <__fp_nan>
     b38:	11 24       	eor	r1, r1
     b3a:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__fp_szero>

00000b3e <__mulsf3x>:
     b3e:	0e 94 63 05 	call	0xac6	; 0xac6 <__fp_split3>
     b42:	70 f3       	brcs	.-36     	; 0xb20 <__mulsf3+0x8>

00000b44 <__mulsf3_pse>:
     b44:	95 9f       	mul	r25, r21
     b46:	c1 f3       	breq	.-16     	; 0xb38 <__mulsf3+0x20>
     b48:	95 0f       	add	r25, r21
     b4a:	50 e0       	ldi	r21, 0x00	; 0
     b4c:	55 1f       	adc	r21, r21
     b4e:	62 9f       	mul	r22, r18
     b50:	f0 01       	movw	r30, r0
     b52:	72 9f       	mul	r23, r18
     b54:	bb 27       	eor	r27, r27
     b56:	f0 0d       	add	r31, r0
     b58:	b1 1d       	adc	r27, r1
     b5a:	63 9f       	mul	r22, r19
     b5c:	aa 27       	eor	r26, r26
     b5e:	f0 0d       	add	r31, r0
     b60:	b1 1d       	adc	r27, r1
     b62:	aa 1f       	adc	r26, r26
     b64:	64 9f       	mul	r22, r20
     b66:	66 27       	eor	r22, r22
     b68:	b0 0d       	add	r27, r0
     b6a:	a1 1d       	adc	r26, r1
     b6c:	66 1f       	adc	r22, r22
     b6e:	82 9f       	mul	r24, r18
     b70:	22 27       	eor	r18, r18
     b72:	b0 0d       	add	r27, r0
     b74:	a1 1d       	adc	r26, r1
     b76:	62 1f       	adc	r22, r18
     b78:	73 9f       	mul	r23, r19
     b7a:	b0 0d       	add	r27, r0
     b7c:	a1 1d       	adc	r26, r1
     b7e:	62 1f       	adc	r22, r18
     b80:	83 9f       	mul	r24, r19
     b82:	a0 0d       	add	r26, r0
     b84:	61 1d       	adc	r22, r1
     b86:	22 1f       	adc	r18, r18
     b88:	74 9f       	mul	r23, r20
     b8a:	33 27       	eor	r19, r19
     b8c:	a0 0d       	add	r26, r0
     b8e:	61 1d       	adc	r22, r1
     b90:	23 1f       	adc	r18, r19
     b92:	84 9f       	mul	r24, r20
     b94:	60 0d       	add	r22, r0
     b96:	21 1d       	adc	r18, r1
     b98:	82 2f       	mov	r24, r18
     b9a:	76 2f       	mov	r23, r22
     b9c:	6a 2f       	mov	r22, r26
     b9e:	11 24       	eor	r1, r1
     ba0:	9f 57       	subi	r25, 0x7F	; 127
     ba2:	50 40       	sbci	r21, 0x00	; 0
     ba4:	9a f0       	brmi	.+38     	; 0xbcc <__mulsf3_pse+0x88>
     ba6:	f1 f0       	breq	.+60     	; 0xbe4 <__mulsf3_pse+0xa0>
     ba8:	88 23       	and	r24, r24
     baa:	4a f0       	brmi	.+18     	; 0xbbe <__mulsf3_pse+0x7a>
     bac:	ee 0f       	add	r30, r30
     bae:	ff 1f       	adc	r31, r31
     bb0:	bb 1f       	adc	r27, r27
     bb2:	66 1f       	adc	r22, r22
     bb4:	77 1f       	adc	r23, r23
     bb6:	88 1f       	adc	r24, r24
     bb8:	91 50       	subi	r25, 0x01	; 1
     bba:	50 40       	sbci	r21, 0x00	; 0
     bbc:	a9 f7       	brne	.-22     	; 0xba8 <__mulsf3_pse+0x64>
     bbe:	9e 3f       	cpi	r25, 0xFE	; 254
     bc0:	51 05       	cpc	r21, r1
     bc2:	80 f0       	brcs	.+32     	; 0xbe4 <__mulsf3_pse+0xa0>
     bc4:	0c 94 3b 05 	jmp	0xa76	; 0xa76 <__fp_inf>
     bc8:	0c 94 86 05 	jmp	0xb0c	; 0xb0c <__fp_szero>
     bcc:	5f 3f       	cpi	r21, 0xFF	; 255
     bce:	e4 f3       	brlt	.-8      	; 0xbc8 <__mulsf3_pse+0x84>
     bd0:	98 3e       	cpi	r25, 0xE8	; 232
     bd2:	d4 f3       	brlt	.-12     	; 0xbc8 <__mulsf3_pse+0x84>
     bd4:	86 95       	lsr	r24
     bd6:	77 95       	ror	r23
     bd8:	67 95       	ror	r22
     bda:	b7 95       	ror	r27
     bdc:	f7 95       	ror	r31
     bde:	e7 95       	ror	r30
     be0:	9f 5f       	subi	r25, 0xFF	; 255
     be2:	c1 f7       	brne	.-16     	; 0xbd4 <__mulsf3_pse+0x90>
     be4:	fe 2b       	or	r31, r30
     be6:	88 0f       	add	r24, r24
     be8:	91 1d       	adc	r25, r1
     bea:	96 95       	lsr	r25
     bec:	87 95       	ror	r24
     bee:	97 f9       	bld	r25, 7
     bf0:	08 95       	ret

00000bf2 <strcpy>:
     bf2:	fb 01       	movw	r30, r22
     bf4:	dc 01       	movw	r26, r24
     bf6:	01 90       	ld	r0, Z+
     bf8:	0d 92       	st	X+, r0
     bfa:	00 20       	and	r0, r0
     bfc:	e1 f7       	brne	.-8      	; 0xbf6 <strcpy+0x4>
     bfe:	08 95       	ret

00000c00 <printf>:
     c00:	a0 e0       	ldi	r26, 0x00	; 0
     c02:	b0 e0       	ldi	r27, 0x00	; 0
     c04:	e6 e0       	ldi	r30, 0x06	; 6
     c06:	f6 e0       	ldi	r31, 0x06	; 6
     c08:	0c 94 17 09 	jmp	0x122e	; 0x122e <__prologue_saves__+0x20>
     c0c:	ae 01       	movw	r20, r28
     c0e:	4b 5f       	subi	r20, 0xFB	; 251
     c10:	5f 4f       	sbci	r21, 0xFF	; 255
     c12:	fa 01       	movw	r30, r20
     c14:	61 91       	ld	r22, Z+
     c16:	71 91       	ld	r23, Z+
     c18:	af 01       	movw	r20, r30
     c1a:	80 91 b5 02 	lds	r24, 0x02B5	; 0x8002b5 <__iob+0x2>
     c1e:	90 91 b6 02 	lds	r25, 0x02B6	; 0x8002b6 <__iob+0x3>
     c22:	0e 94 76 06 	call	0xcec	; 0xcec <vfprintf>
     c26:	e2 e0       	ldi	r30, 0x02	; 2
     c28:	0c 94 33 09 	jmp	0x1266	; 0x1266 <__epilogue_restores__+0x20>

00000c2c <puts>:
     c2c:	0f 93       	push	r16
     c2e:	1f 93       	push	r17
     c30:	cf 93       	push	r28
     c32:	df 93       	push	r29
     c34:	e0 91 b5 02 	lds	r30, 0x02B5	; 0x8002b5 <__iob+0x2>
     c38:	f0 91 b6 02 	lds	r31, 0x02B6	; 0x8002b6 <__iob+0x3>
     c3c:	23 81       	ldd	r18, Z+3	; 0x03
     c3e:	21 ff       	sbrs	r18, 1
     c40:	1b c0       	rjmp	.+54     	; 0xc78 <puts+0x4c>
     c42:	8c 01       	movw	r16, r24
     c44:	d0 e0       	ldi	r29, 0x00	; 0
     c46:	c0 e0       	ldi	r28, 0x00	; 0
     c48:	f8 01       	movw	r30, r16
     c4a:	81 91       	ld	r24, Z+
     c4c:	8f 01       	movw	r16, r30
     c4e:	60 91 b5 02 	lds	r22, 0x02B5	; 0x8002b5 <__iob+0x2>
     c52:	70 91 b6 02 	lds	r23, 0x02B6	; 0x8002b6 <__iob+0x3>
     c56:	db 01       	movw	r26, r22
     c58:	18 96       	adiw	r26, 0x08	; 8
     c5a:	ed 91       	ld	r30, X+
     c5c:	fc 91       	ld	r31, X
     c5e:	19 97       	sbiw	r26, 0x09	; 9
     c60:	88 23       	and	r24, r24
     c62:	31 f0       	breq	.+12     	; 0xc70 <puts+0x44>
     c64:	09 95       	icall
     c66:	89 2b       	or	r24, r25
     c68:	79 f3       	breq	.-34     	; 0xc48 <puts+0x1c>
     c6a:	df ef       	ldi	r29, 0xFF	; 255
     c6c:	cf ef       	ldi	r28, 0xFF	; 255
     c6e:	ec cf       	rjmp	.-40     	; 0xc48 <puts+0x1c>
     c70:	8a e0       	ldi	r24, 0x0A	; 10
     c72:	09 95       	icall
     c74:	89 2b       	or	r24, r25
     c76:	19 f0       	breq	.+6      	; 0xc7e <puts+0x52>
     c78:	8f ef       	ldi	r24, 0xFF	; 255
     c7a:	9f ef       	ldi	r25, 0xFF	; 255
     c7c:	02 c0       	rjmp	.+4      	; 0xc82 <puts+0x56>
     c7e:	8d 2f       	mov	r24, r29
     c80:	9c 2f       	mov	r25, r28
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	1f 91       	pop	r17
     c88:	0f 91       	pop	r16
     c8a:	08 95       	ret

00000c8c <snprintf>:
     c8c:	ae e0       	ldi	r26, 0x0E	; 14
     c8e:	b0 e0       	ldi	r27, 0x00	; 0
     c90:	ec e4       	ldi	r30, 0x4C	; 76
     c92:	f6 e0       	ldi	r31, 0x06	; 6
     c94:	0c 94 15 09 	jmp	0x122a	; 0x122a <__prologue_saves__+0x1c>
     c98:	0d 89       	ldd	r16, Y+21	; 0x15
     c9a:	1e 89       	ldd	r17, Y+22	; 0x16
     c9c:	8f 89       	ldd	r24, Y+23	; 0x17
     c9e:	98 8d       	ldd	r25, Y+24	; 0x18
     ca0:	26 e0       	ldi	r18, 0x06	; 6
     ca2:	2c 83       	std	Y+4, r18	; 0x04
     ca4:	1a 83       	std	Y+2, r17	; 0x02
     ca6:	09 83       	std	Y+1, r16	; 0x01
     ca8:	97 ff       	sbrs	r25, 7
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <snprintf+0x24>
     cac:	80 e0       	ldi	r24, 0x00	; 0
     cae:	90 e8       	ldi	r25, 0x80	; 128
     cb0:	01 97       	sbiw	r24, 0x01	; 1
     cb2:	9e 83       	std	Y+6, r25	; 0x06
     cb4:	8d 83       	std	Y+5, r24	; 0x05
     cb6:	ae 01       	movw	r20, r28
     cb8:	45 5e       	subi	r20, 0xE5	; 229
     cba:	5f 4f       	sbci	r21, 0xFF	; 255
     cbc:	69 8d       	ldd	r22, Y+25	; 0x19
     cbe:	7a 8d       	ldd	r23, Y+26	; 0x1a
     cc0:	ce 01       	movw	r24, r28
     cc2:	01 96       	adiw	r24, 0x01	; 1
     cc4:	0e 94 76 06 	call	0xcec	; 0xcec <vfprintf>
     cc8:	4d 81       	ldd	r20, Y+5	; 0x05
     cca:	5e 81       	ldd	r21, Y+6	; 0x06
     ccc:	57 fd       	sbrc	r21, 7
     cce:	0a c0       	rjmp	.+20     	; 0xce4 <snprintf+0x58>
     cd0:	2f 81       	ldd	r18, Y+7	; 0x07
     cd2:	38 85       	ldd	r19, Y+8	; 0x08
     cd4:	42 17       	cp	r20, r18
     cd6:	53 07       	cpc	r21, r19
     cd8:	0c f4       	brge	.+2      	; 0xcdc <snprintf+0x50>
     cda:	9a 01       	movw	r18, r20
     cdc:	f8 01       	movw	r30, r16
     cde:	e2 0f       	add	r30, r18
     ce0:	f3 1f       	adc	r31, r19
     ce2:	10 82       	st	Z, r1
     ce4:	2e 96       	adiw	r28, 0x0e	; 14
     ce6:	e4 e0       	ldi	r30, 0x04	; 4
     ce8:	0c 94 31 09 	jmp	0x1262	; 0x1262 <__epilogue_restores__+0x1c>

00000cec <vfprintf>:
     cec:	ab e0       	ldi	r26, 0x0B	; 11
     cee:	b0 e0       	ldi	r27, 0x00	; 0
     cf0:	ec e7       	ldi	r30, 0x7C	; 124
     cf2:	f6 e0       	ldi	r31, 0x06	; 6
     cf4:	0c 94 07 09 	jmp	0x120e	; 0x120e <__prologue_saves__>
     cf8:	6c 01       	movw	r12, r24
     cfa:	7b 01       	movw	r14, r22
     cfc:	8a 01       	movw	r16, r20
     cfe:	fc 01       	movw	r30, r24
     d00:	17 82       	std	Z+7, r1	; 0x07
     d02:	16 82       	std	Z+6, r1	; 0x06
     d04:	83 81       	ldd	r24, Z+3	; 0x03
     d06:	81 ff       	sbrs	r24, 1
     d08:	cc c1       	rjmp	.+920    	; 0x10a2 <vfprintf+0x3b6>
     d0a:	ce 01       	movw	r24, r28
     d0c:	01 96       	adiw	r24, 0x01	; 1
     d0e:	3c 01       	movw	r6, r24
     d10:	f6 01       	movw	r30, r12
     d12:	93 81       	ldd	r25, Z+3	; 0x03
     d14:	f7 01       	movw	r30, r14
     d16:	93 fd       	sbrc	r25, 3
     d18:	85 91       	lpm	r24, Z+
     d1a:	93 ff       	sbrs	r25, 3
     d1c:	81 91       	ld	r24, Z+
     d1e:	7f 01       	movw	r14, r30
     d20:	88 23       	and	r24, r24
     d22:	09 f4       	brne	.+2      	; 0xd26 <vfprintf+0x3a>
     d24:	ba c1       	rjmp	.+884    	; 0x109a <vfprintf+0x3ae>
     d26:	85 32       	cpi	r24, 0x25	; 37
     d28:	39 f4       	brne	.+14     	; 0xd38 <vfprintf+0x4c>
     d2a:	93 fd       	sbrc	r25, 3
     d2c:	85 91       	lpm	r24, Z+
     d2e:	93 ff       	sbrs	r25, 3
     d30:	81 91       	ld	r24, Z+
     d32:	7f 01       	movw	r14, r30
     d34:	85 32       	cpi	r24, 0x25	; 37
     d36:	29 f4       	brne	.+10     	; 0xd42 <vfprintf+0x56>
     d38:	b6 01       	movw	r22, r12
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
     d40:	e7 cf       	rjmp	.-50     	; 0xd10 <vfprintf+0x24>
     d42:	91 2c       	mov	r9, r1
     d44:	21 2c       	mov	r2, r1
     d46:	31 2c       	mov	r3, r1
     d48:	ff e1       	ldi	r31, 0x1F	; 31
     d4a:	f3 15       	cp	r31, r3
     d4c:	d8 f0       	brcs	.+54     	; 0xd84 <vfprintf+0x98>
     d4e:	8b 32       	cpi	r24, 0x2B	; 43
     d50:	79 f0       	breq	.+30     	; 0xd70 <vfprintf+0x84>
     d52:	38 f4       	brcc	.+14     	; 0xd62 <vfprintf+0x76>
     d54:	80 32       	cpi	r24, 0x20	; 32
     d56:	79 f0       	breq	.+30     	; 0xd76 <vfprintf+0x8a>
     d58:	83 32       	cpi	r24, 0x23	; 35
     d5a:	a1 f4       	brne	.+40     	; 0xd84 <vfprintf+0x98>
     d5c:	23 2d       	mov	r18, r3
     d5e:	20 61       	ori	r18, 0x10	; 16
     d60:	1d c0       	rjmp	.+58     	; 0xd9c <vfprintf+0xb0>
     d62:	8d 32       	cpi	r24, 0x2D	; 45
     d64:	61 f0       	breq	.+24     	; 0xd7e <vfprintf+0x92>
     d66:	80 33       	cpi	r24, 0x30	; 48
     d68:	69 f4       	brne	.+26     	; 0xd84 <vfprintf+0x98>
     d6a:	23 2d       	mov	r18, r3
     d6c:	21 60       	ori	r18, 0x01	; 1
     d6e:	16 c0       	rjmp	.+44     	; 0xd9c <vfprintf+0xb0>
     d70:	83 2d       	mov	r24, r3
     d72:	82 60       	ori	r24, 0x02	; 2
     d74:	38 2e       	mov	r3, r24
     d76:	e3 2d       	mov	r30, r3
     d78:	e4 60       	ori	r30, 0x04	; 4
     d7a:	3e 2e       	mov	r3, r30
     d7c:	2a c0       	rjmp	.+84     	; 0xdd2 <vfprintf+0xe6>
     d7e:	f3 2d       	mov	r31, r3
     d80:	f8 60       	ori	r31, 0x08	; 8
     d82:	1d c0       	rjmp	.+58     	; 0xdbe <vfprintf+0xd2>
     d84:	37 fc       	sbrc	r3, 7
     d86:	2d c0       	rjmp	.+90     	; 0xde2 <vfprintf+0xf6>
     d88:	20 ed       	ldi	r18, 0xD0	; 208
     d8a:	28 0f       	add	r18, r24
     d8c:	2a 30       	cpi	r18, 0x0A	; 10
     d8e:	40 f0       	brcs	.+16     	; 0xda0 <vfprintf+0xb4>
     d90:	8e 32       	cpi	r24, 0x2E	; 46
     d92:	b9 f4       	brne	.+46     	; 0xdc2 <vfprintf+0xd6>
     d94:	36 fc       	sbrc	r3, 6
     d96:	81 c1       	rjmp	.+770    	; 0x109a <vfprintf+0x3ae>
     d98:	23 2d       	mov	r18, r3
     d9a:	20 64       	ori	r18, 0x40	; 64
     d9c:	32 2e       	mov	r3, r18
     d9e:	19 c0       	rjmp	.+50     	; 0xdd2 <vfprintf+0xe6>
     da0:	36 fe       	sbrs	r3, 6
     da2:	06 c0       	rjmp	.+12     	; 0xdb0 <vfprintf+0xc4>
     da4:	8a e0       	ldi	r24, 0x0A	; 10
     da6:	98 9e       	mul	r9, r24
     da8:	20 0d       	add	r18, r0
     daa:	11 24       	eor	r1, r1
     dac:	92 2e       	mov	r9, r18
     dae:	11 c0       	rjmp	.+34     	; 0xdd2 <vfprintf+0xe6>
     db0:	ea e0       	ldi	r30, 0x0A	; 10
     db2:	2e 9e       	mul	r2, r30
     db4:	20 0d       	add	r18, r0
     db6:	11 24       	eor	r1, r1
     db8:	22 2e       	mov	r2, r18
     dba:	f3 2d       	mov	r31, r3
     dbc:	f0 62       	ori	r31, 0x20	; 32
     dbe:	3f 2e       	mov	r3, r31
     dc0:	08 c0       	rjmp	.+16     	; 0xdd2 <vfprintf+0xe6>
     dc2:	8c 36       	cpi	r24, 0x6C	; 108
     dc4:	21 f4       	brne	.+8      	; 0xdce <vfprintf+0xe2>
     dc6:	83 2d       	mov	r24, r3
     dc8:	80 68       	ori	r24, 0x80	; 128
     dca:	38 2e       	mov	r3, r24
     dcc:	02 c0       	rjmp	.+4      	; 0xdd2 <vfprintf+0xe6>
     dce:	88 36       	cpi	r24, 0x68	; 104
     dd0:	41 f4       	brne	.+16     	; 0xde2 <vfprintf+0xf6>
     dd2:	f7 01       	movw	r30, r14
     dd4:	93 fd       	sbrc	r25, 3
     dd6:	85 91       	lpm	r24, Z+
     dd8:	93 ff       	sbrs	r25, 3
     dda:	81 91       	ld	r24, Z+
     ddc:	7f 01       	movw	r14, r30
     dde:	81 11       	cpse	r24, r1
     de0:	b3 cf       	rjmp	.-154    	; 0xd48 <vfprintf+0x5c>
     de2:	98 2f       	mov	r25, r24
     de4:	9f 7d       	andi	r25, 0xDF	; 223
     de6:	95 54       	subi	r25, 0x45	; 69
     de8:	93 30       	cpi	r25, 0x03	; 3
     dea:	28 f4       	brcc	.+10     	; 0xdf6 <vfprintf+0x10a>
     dec:	0c 5f       	subi	r16, 0xFC	; 252
     dee:	1f 4f       	sbci	r17, 0xFF	; 255
     df0:	9f e3       	ldi	r25, 0x3F	; 63
     df2:	99 83       	std	Y+1, r25	; 0x01
     df4:	0d c0       	rjmp	.+26     	; 0xe10 <vfprintf+0x124>
     df6:	83 36       	cpi	r24, 0x63	; 99
     df8:	31 f0       	breq	.+12     	; 0xe06 <vfprintf+0x11a>
     dfa:	83 37       	cpi	r24, 0x73	; 115
     dfc:	71 f0       	breq	.+28     	; 0xe1a <vfprintf+0x12e>
     dfe:	83 35       	cpi	r24, 0x53	; 83
     e00:	09 f0       	breq	.+2      	; 0xe04 <vfprintf+0x118>
     e02:	59 c0       	rjmp	.+178    	; 0xeb6 <vfprintf+0x1ca>
     e04:	21 c0       	rjmp	.+66     	; 0xe48 <vfprintf+0x15c>
     e06:	f8 01       	movw	r30, r16
     e08:	80 81       	ld	r24, Z
     e0a:	89 83       	std	Y+1, r24	; 0x01
     e0c:	0e 5f       	subi	r16, 0xFE	; 254
     e0e:	1f 4f       	sbci	r17, 0xFF	; 255
     e10:	88 24       	eor	r8, r8
     e12:	83 94       	inc	r8
     e14:	91 2c       	mov	r9, r1
     e16:	53 01       	movw	r10, r6
     e18:	13 c0       	rjmp	.+38     	; 0xe40 <vfprintf+0x154>
     e1a:	28 01       	movw	r4, r16
     e1c:	f2 e0       	ldi	r31, 0x02	; 2
     e1e:	4f 0e       	add	r4, r31
     e20:	51 1c       	adc	r5, r1
     e22:	f8 01       	movw	r30, r16
     e24:	a0 80       	ld	r10, Z
     e26:	b1 80       	ldd	r11, Z+1	; 0x01
     e28:	36 fe       	sbrs	r3, 6
     e2a:	03 c0       	rjmp	.+6      	; 0xe32 <vfprintf+0x146>
     e2c:	69 2d       	mov	r22, r9
     e2e:	70 e0       	ldi	r23, 0x00	; 0
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <vfprintf+0x14a>
     e32:	6f ef       	ldi	r22, 0xFF	; 255
     e34:	7f ef       	ldi	r23, 0xFF	; 255
     e36:	c5 01       	movw	r24, r10
     e38:	0e 94 62 08 	call	0x10c4	; 0x10c4 <strnlen>
     e3c:	4c 01       	movw	r8, r24
     e3e:	82 01       	movw	r16, r4
     e40:	f3 2d       	mov	r31, r3
     e42:	ff 77       	andi	r31, 0x7F	; 127
     e44:	3f 2e       	mov	r3, r31
     e46:	16 c0       	rjmp	.+44     	; 0xe74 <vfprintf+0x188>
     e48:	28 01       	movw	r4, r16
     e4a:	22 e0       	ldi	r18, 0x02	; 2
     e4c:	42 0e       	add	r4, r18
     e4e:	51 1c       	adc	r5, r1
     e50:	f8 01       	movw	r30, r16
     e52:	a0 80       	ld	r10, Z
     e54:	b1 80       	ldd	r11, Z+1	; 0x01
     e56:	36 fe       	sbrs	r3, 6
     e58:	03 c0       	rjmp	.+6      	; 0xe60 <vfprintf+0x174>
     e5a:	69 2d       	mov	r22, r9
     e5c:	70 e0       	ldi	r23, 0x00	; 0
     e5e:	02 c0       	rjmp	.+4      	; 0xe64 <vfprintf+0x178>
     e60:	6f ef       	ldi	r22, 0xFF	; 255
     e62:	7f ef       	ldi	r23, 0xFF	; 255
     e64:	c5 01       	movw	r24, r10
     e66:	0e 94 57 08 	call	0x10ae	; 0x10ae <strnlen_P>
     e6a:	4c 01       	movw	r8, r24
     e6c:	f3 2d       	mov	r31, r3
     e6e:	f0 68       	ori	r31, 0x80	; 128
     e70:	3f 2e       	mov	r3, r31
     e72:	82 01       	movw	r16, r4
     e74:	33 fc       	sbrc	r3, 3
     e76:	1b c0       	rjmp	.+54     	; 0xeae <vfprintf+0x1c2>
     e78:	82 2d       	mov	r24, r2
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	88 16       	cp	r8, r24
     e7e:	99 06       	cpc	r9, r25
     e80:	b0 f4       	brcc	.+44     	; 0xeae <vfprintf+0x1c2>
     e82:	b6 01       	movw	r22, r12
     e84:	80 e2       	ldi	r24, 0x20	; 32
     e86:	90 e0       	ldi	r25, 0x00	; 0
     e88:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
     e8c:	2a 94       	dec	r2
     e8e:	f4 cf       	rjmp	.-24     	; 0xe78 <vfprintf+0x18c>
     e90:	f5 01       	movw	r30, r10
     e92:	37 fc       	sbrc	r3, 7
     e94:	85 91       	lpm	r24, Z+
     e96:	37 fe       	sbrs	r3, 7
     e98:	81 91       	ld	r24, Z+
     e9a:	5f 01       	movw	r10, r30
     e9c:	b6 01       	movw	r22, r12
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
     ea4:	21 10       	cpse	r2, r1
     ea6:	2a 94       	dec	r2
     ea8:	21 e0       	ldi	r18, 0x01	; 1
     eaa:	82 1a       	sub	r8, r18
     eac:	91 08       	sbc	r9, r1
     eae:	81 14       	cp	r8, r1
     eb0:	91 04       	cpc	r9, r1
     eb2:	71 f7       	brne	.-36     	; 0xe90 <vfprintf+0x1a4>
     eb4:	e8 c0       	rjmp	.+464    	; 0x1086 <vfprintf+0x39a>
     eb6:	84 36       	cpi	r24, 0x64	; 100
     eb8:	11 f0       	breq	.+4      	; 0xebe <vfprintf+0x1d2>
     eba:	89 36       	cpi	r24, 0x69	; 105
     ebc:	41 f5       	brne	.+80     	; 0xf0e <vfprintf+0x222>
     ebe:	f8 01       	movw	r30, r16
     ec0:	37 fe       	sbrs	r3, 7
     ec2:	07 c0       	rjmp	.+14     	; 0xed2 <vfprintf+0x1e6>
     ec4:	60 81       	ld	r22, Z
     ec6:	71 81       	ldd	r23, Z+1	; 0x01
     ec8:	82 81       	ldd	r24, Z+2	; 0x02
     eca:	93 81       	ldd	r25, Z+3	; 0x03
     ecc:	0c 5f       	subi	r16, 0xFC	; 252
     ece:	1f 4f       	sbci	r17, 0xFF	; 255
     ed0:	08 c0       	rjmp	.+16     	; 0xee2 <vfprintf+0x1f6>
     ed2:	60 81       	ld	r22, Z
     ed4:	71 81       	ldd	r23, Z+1	; 0x01
     ed6:	07 2e       	mov	r0, r23
     ed8:	00 0c       	add	r0, r0
     eda:	88 0b       	sbc	r24, r24
     edc:	99 0b       	sbc	r25, r25
     ede:	0e 5f       	subi	r16, 0xFE	; 254
     ee0:	1f 4f       	sbci	r17, 0xFF	; 255
     ee2:	f3 2d       	mov	r31, r3
     ee4:	ff 76       	andi	r31, 0x6F	; 111
     ee6:	3f 2e       	mov	r3, r31
     ee8:	97 ff       	sbrs	r25, 7
     eea:	09 c0       	rjmp	.+18     	; 0xefe <vfprintf+0x212>
     eec:	90 95       	com	r25
     eee:	80 95       	com	r24
     ef0:	70 95       	com	r23
     ef2:	61 95       	neg	r22
     ef4:	7f 4f       	sbci	r23, 0xFF	; 255
     ef6:	8f 4f       	sbci	r24, 0xFF	; 255
     ef8:	9f 4f       	sbci	r25, 0xFF	; 255
     efa:	f0 68       	ori	r31, 0x80	; 128
     efc:	3f 2e       	mov	r3, r31
     efe:	2a e0       	ldi	r18, 0x0A	; 10
     f00:	30 e0       	ldi	r19, 0x00	; 0
     f02:	a3 01       	movw	r20, r6
     f04:	0e 94 a9 08 	call	0x1152	; 0x1152 <__ultoa_invert>
     f08:	88 2e       	mov	r8, r24
     f0a:	86 18       	sub	r8, r6
     f0c:	45 c0       	rjmp	.+138    	; 0xf98 <vfprintf+0x2ac>
     f0e:	85 37       	cpi	r24, 0x75	; 117
     f10:	31 f4       	brne	.+12     	; 0xf1e <vfprintf+0x232>
     f12:	23 2d       	mov	r18, r3
     f14:	2f 7e       	andi	r18, 0xEF	; 239
     f16:	b2 2e       	mov	r11, r18
     f18:	2a e0       	ldi	r18, 0x0A	; 10
     f1a:	30 e0       	ldi	r19, 0x00	; 0
     f1c:	25 c0       	rjmp	.+74     	; 0xf68 <vfprintf+0x27c>
     f1e:	93 2d       	mov	r25, r3
     f20:	99 7f       	andi	r25, 0xF9	; 249
     f22:	b9 2e       	mov	r11, r25
     f24:	8f 36       	cpi	r24, 0x6F	; 111
     f26:	c1 f0       	breq	.+48     	; 0xf58 <vfprintf+0x26c>
     f28:	18 f4       	brcc	.+6      	; 0xf30 <vfprintf+0x244>
     f2a:	88 35       	cpi	r24, 0x58	; 88
     f2c:	79 f0       	breq	.+30     	; 0xf4c <vfprintf+0x260>
     f2e:	b5 c0       	rjmp	.+362    	; 0x109a <vfprintf+0x3ae>
     f30:	80 37       	cpi	r24, 0x70	; 112
     f32:	19 f0       	breq	.+6      	; 0xf3a <vfprintf+0x24e>
     f34:	88 37       	cpi	r24, 0x78	; 120
     f36:	21 f0       	breq	.+8      	; 0xf40 <vfprintf+0x254>
     f38:	b0 c0       	rjmp	.+352    	; 0x109a <vfprintf+0x3ae>
     f3a:	e9 2f       	mov	r30, r25
     f3c:	e0 61       	ori	r30, 0x10	; 16
     f3e:	be 2e       	mov	r11, r30
     f40:	b4 fe       	sbrs	r11, 4
     f42:	0d c0       	rjmp	.+26     	; 0xf5e <vfprintf+0x272>
     f44:	fb 2d       	mov	r31, r11
     f46:	f4 60       	ori	r31, 0x04	; 4
     f48:	bf 2e       	mov	r11, r31
     f4a:	09 c0       	rjmp	.+18     	; 0xf5e <vfprintf+0x272>
     f4c:	34 fe       	sbrs	r3, 4
     f4e:	0a c0       	rjmp	.+20     	; 0xf64 <vfprintf+0x278>
     f50:	29 2f       	mov	r18, r25
     f52:	26 60       	ori	r18, 0x06	; 6
     f54:	b2 2e       	mov	r11, r18
     f56:	06 c0       	rjmp	.+12     	; 0xf64 <vfprintf+0x278>
     f58:	28 e0       	ldi	r18, 0x08	; 8
     f5a:	30 e0       	ldi	r19, 0x00	; 0
     f5c:	05 c0       	rjmp	.+10     	; 0xf68 <vfprintf+0x27c>
     f5e:	20 e1       	ldi	r18, 0x10	; 16
     f60:	30 e0       	ldi	r19, 0x00	; 0
     f62:	02 c0       	rjmp	.+4      	; 0xf68 <vfprintf+0x27c>
     f64:	20 e1       	ldi	r18, 0x10	; 16
     f66:	32 e0       	ldi	r19, 0x02	; 2
     f68:	f8 01       	movw	r30, r16
     f6a:	b7 fe       	sbrs	r11, 7
     f6c:	07 c0       	rjmp	.+14     	; 0xf7c <vfprintf+0x290>
     f6e:	60 81       	ld	r22, Z
     f70:	71 81       	ldd	r23, Z+1	; 0x01
     f72:	82 81       	ldd	r24, Z+2	; 0x02
     f74:	93 81       	ldd	r25, Z+3	; 0x03
     f76:	0c 5f       	subi	r16, 0xFC	; 252
     f78:	1f 4f       	sbci	r17, 0xFF	; 255
     f7a:	06 c0       	rjmp	.+12     	; 0xf88 <vfprintf+0x29c>
     f7c:	60 81       	ld	r22, Z
     f7e:	71 81       	ldd	r23, Z+1	; 0x01
     f80:	80 e0       	ldi	r24, 0x00	; 0
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 5f       	subi	r16, 0xFE	; 254
     f86:	1f 4f       	sbci	r17, 0xFF	; 255
     f88:	a3 01       	movw	r20, r6
     f8a:	0e 94 a9 08 	call	0x1152	; 0x1152 <__ultoa_invert>
     f8e:	88 2e       	mov	r8, r24
     f90:	86 18       	sub	r8, r6
     f92:	fb 2d       	mov	r31, r11
     f94:	ff 77       	andi	r31, 0x7F	; 127
     f96:	3f 2e       	mov	r3, r31
     f98:	36 fe       	sbrs	r3, 6
     f9a:	0d c0       	rjmp	.+26     	; 0xfb6 <vfprintf+0x2ca>
     f9c:	23 2d       	mov	r18, r3
     f9e:	2e 7f       	andi	r18, 0xFE	; 254
     fa0:	a2 2e       	mov	r10, r18
     fa2:	89 14       	cp	r8, r9
     fa4:	58 f4       	brcc	.+22     	; 0xfbc <vfprintf+0x2d0>
     fa6:	34 fe       	sbrs	r3, 4
     fa8:	0b c0       	rjmp	.+22     	; 0xfc0 <vfprintf+0x2d4>
     faa:	32 fc       	sbrc	r3, 2
     fac:	09 c0       	rjmp	.+18     	; 0xfc0 <vfprintf+0x2d4>
     fae:	83 2d       	mov	r24, r3
     fb0:	8e 7e       	andi	r24, 0xEE	; 238
     fb2:	a8 2e       	mov	r10, r24
     fb4:	05 c0       	rjmp	.+10     	; 0xfc0 <vfprintf+0x2d4>
     fb6:	b8 2c       	mov	r11, r8
     fb8:	a3 2c       	mov	r10, r3
     fba:	03 c0       	rjmp	.+6      	; 0xfc2 <vfprintf+0x2d6>
     fbc:	b8 2c       	mov	r11, r8
     fbe:	01 c0       	rjmp	.+2      	; 0xfc2 <vfprintf+0x2d6>
     fc0:	b9 2c       	mov	r11, r9
     fc2:	a4 fe       	sbrs	r10, 4
     fc4:	0f c0       	rjmp	.+30     	; 0xfe4 <vfprintf+0x2f8>
     fc6:	fe 01       	movw	r30, r28
     fc8:	e8 0d       	add	r30, r8
     fca:	f1 1d       	adc	r31, r1
     fcc:	80 81       	ld	r24, Z
     fce:	80 33       	cpi	r24, 0x30	; 48
     fd0:	21 f4       	brne	.+8      	; 0xfda <vfprintf+0x2ee>
     fd2:	9a 2d       	mov	r25, r10
     fd4:	99 7e       	andi	r25, 0xE9	; 233
     fd6:	a9 2e       	mov	r10, r25
     fd8:	09 c0       	rjmp	.+18     	; 0xfec <vfprintf+0x300>
     fda:	a2 fe       	sbrs	r10, 2
     fdc:	06 c0       	rjmp	.+12     	; 0xfea <vfprintf+0x2fe>
     fde:	b3 94       	inc	r11
     fe0:	b3 94       	inc	r11
     fe2:	04 c0       	rjmp	.+8      	; 0xfec <vfprintf+0x300>
     fe4:	8a 2d       	mov	r24, r10
     fe6:	86 78       	andi	r24, 0x86	; 134
     fe8:	09 f0       	breq	.+2      	; 0xfec <vfprintf+0x300>
     fea:	b3 94       	inc	r11
     fec:	a3 fc       	sbrc	r10, 3
     fee:	11 c0       	rjmp	.+34     	; 0x1012 <vfprintf+0x326>
     ff0:	a0 fe       	sbrs	r10, 0
     ff2:	06 c0       	rjmp	.+12     	; 0x1000 <vfprintf+0x314>
     ff4:	b2 14       	cp	r11, r2
     ff6:	88 f4       	brcc	.+34     	; 0x101a <vfprintf+0x32e>
     ff8:	28 0c       	add	r2, r8
     ffa:	92 2c       	mov	r9, r2
     ffc:	9b 18       	sub	r9, r11
     ffe:	0e c0       	rjmp	.+28     	; 0x101c <vfprintf+0x330>
    1000:	b2 14       	cp	r11, r2
    1002:	60 f4       	brcc	.+24     	; 0x101c <vfprintf+0x330>
    1004:	b6 01       	movw	r22, r12
    1006:	80 e2       	ldi	r24, 0x20	; 32
    1008:	90 e0       	ldi	r25, 0x00	; 0
    100a:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
    100e:	b3 94       	inc	r11
    1010:	f7 cf       	rjmp	.-18     	; 0x1000 <vfprintf+0x314>
    1012:	b2 14       	cp	r11, r2
    1014:	18 f4       	brcc	.+6      	; 0x101c <vfprintf+0x330>
    1016:	2b 18       	sub	r2, r11
    1018:	02 c0       	rjmp	.+4      	; 0x101e <vfprintf+0x332>
    101a:	98 2c       	mov	r9, r8
    101c:	21 2c       	mov	r2, r1
    101e:	a4 fe       	sbrs	r10, 4
    1020:	10 c0       	rjmp	.+32     	; 0x1042 <vfprintf+0x356>
    1022:	b6 01       	movw	r22, r12
    1024:	80 e3       	ldi	r24, 0x30	; 48
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
    102c:	a2 fe       	sbrs	r10, 2
    102e:	17 c0       	rjmp	.+46     	; 0x105e <vfprintf+0x372>
    1030:	a1 fc       	sbrc	r10, 1
    1032:	03 c0       	rjmp	.+6      	; 0x103a <vfprintf+0x34e>
    1034:	88 e7       	ldi	r24, 0x78	; 120
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	02 c0       	rjmp	.+4      	; 0x103e <vfprintf+0x352>
    103a:	88 e5       	ldi	r24, 0x58	; 88
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	b6 01       	movw	r22, r12
    1040:	0c c0       	rjmp	.+24     	; 0x105a <vfprintf+0x36e>
    1042:	8a 2d       	mov	r24, r10
    1044:	86 78       	andi	r24, 0x86	; 134
    1046:	59 f0       	breq	.+22     	; 0x105e <vfprintf+0x372>
    1048:	a1 fe       	sbrs	r10, 1
    104a:	02 c0       	rjmp	.+4      	; 0x1050 <vfprintf+0x364>
    104c:	8b e2       	ldi	r24, 0x2B	; 43
    104e:	01 c0       	rjmp	.+2      	; 0x1052 <vfprintf+0x366>
    1050:	80 e2       	ldi	r24, 0x20	; 32
    1052:	a7 fc       	sbrc	r10, 7
    1054:	8d e2       	ldi	r24, 0x2D	; 45
    1056:	b6 01       	movw	r22, r12
    1058:	90 e0       	ldi	r25, 0x00	; 0
    105a:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
    105e:	89 14       	cp	r8, r9
    1060:	38 f4       	brcc	.+14     	; 0x1070 <vfprintf+0x384>
    1062:	b6 01       	movw	r22, r12
    1064:	80 e3       	ldi	r24, 0x30	; 48
    1066:	90 e0       	ldi	r25, 0x00	; 0
    1068:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
    106c:	9a 94       	dec	r9
    106e:	f7 cf       	rjmp	.-18     	; 0x105e <vfprintf+0x372>
    1070:	8a 94       	dec	r8
    1072:	f3 01       	movw	r30, r6
    1074:	e8 0d       	add	r30, r8
    1076:	f1 1d       	adc	r31, r1
    1078:	80 81       	ld	r24, Z
    107a:	b6 01       	movw	r22, r12
    107c:	90 e0       	ldi	r25, 0x00	; 0
    107e:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
    1082:	81 10       	cpse	r8, r1
    1084:	f5 cf       	rjmp	.-22     	; 0x1070 <vfprintf+0x384>
    1086:	22 20       	and	r2, r2
    1088:	09 f4       	brne	.+2      	; 0x108c <vfprintf+0x3a0>
    108a:	42 ce       	rjmp	.-892    	; 0xd10 <vfprintf+0x24>
    108c:	b6 01       	movw	r22, r12
    108e:	80 e2       	ldi	r24, 0x20	; 32
    1090:	90 e0       	ldi	r25, 0x00	; 0
    1092:	0e 94 6d 08 	call	0x10da	; 0x10da <fputc>
    1096:	2a 94       	dec	r2
    1098:	f6 cf       	rjmp	.-20     	; 0x1086 <vfprintf+0x39a>
    109a:	f6 01       	movw	r30, r12
    109c:	86 81       	ldd	r24, Z+6	; 0x06
    109e:	97 81       	ldd	r25, Z+7	; 0x07
    10a0:	02 c0       	rjmp	.+4      	; 0x10a6 <vfprintf+0x3ba>
    10a2:	8f ef       	ldi	r24, 0xFF	; 255
    10a4:	9f ef       	ldi	r25, 0xFF	; 255
    10a6:	2b 96       	adiw	r28, 0x0b	; 11
    10a8:	e2 e1       	ldi	r30, 0x12	; 18
    10aa:	0c 94 23 09 	jmp	0x1246	; 0x1246 <__epilogue_restores__>

000010ae <strnlen_P>:
    10ae:	fc 01       	movw	r30, r24
    10b0:	05 90       	lpm	r0, Z+
    10b2:	61 50       	subi	r22, 0x01	; 1
    10b4:	70 40       	sbci	r23, 0x00	; 0
    10b6:	01 10       	cpse	r0, r1
    10b8:	d8 f7       	brcc	.-10     	; 0x10b0 <strnlen_P+0x2>
    10ba:	80 95       	com	r24
    10bc:	90 95       	com	r25
    10be:	8e 0f       	add	r24, r30
    10c0:	9f 1f       	adc	r25, r31
    10c2:	08 95       	ret

000010c4 <strnlen>:
    10c4:	fc 01       	movw	r30, r24
    10c6:	61 50       	subi	r22, 0x01	; 1
    10c8:	70 40       	sbci	r23, 0x00	; 0
    10ca:	01 90       	ld	r0, Z+
    10cc:	01 10       	cpse	r0, r1
    10ce:	d8 f7       	brcc	.-10     	; 0x10c6 <strnlen+0x2>
    10d0:	80 95       	com	r24
    10d2:	90 95       	com	r25
    10d4:	8e 0f       	add	r24, r30
    10d6:	9f 1f       	adc	r25, r31
    10d8:	08 95       	ret

000010da <fputc>:
    10da:	0f 93       	push	r16
    10dc:	1f 93       	push	r17
    10de:	cf 93       	push	r28
    10e0:	df 93       	push	r29
    10e2:	fb 01       	movw	r30, r22
    10e4:	23 81       	ldd	r18, Z+3	; 0x03
    10e6:	21 fd       	sbrc	r18, 1
    10e8:	03 c0       	rjmp	.+6      	; 0x10f0 <fputc+0x16>
    10ea:	8f ef       	ldi	r24, 0xFF	; 255
    10ec:	9f ef       	ldi	r25, 0xFF	; 255
    10ee:	2c c0       	rjmp	.+88     	; 0x1148 <fputc+0x6e>
    10f0:	22 ff       	sbrs	r18, 2
    10f2:	16 c0       	rjmp	.+44     	; 0x1120 <fputc+0x46>
    10f4:	46 81       	ldd	r20, Z+6	; 0x06
    10f6:	57 81       	ldd	r21, Z+7	; 0x07
    10f8:	24 81       	ldd	r18, Z+4	; 0x04
    10fa:	35 81       	ldd	r19, Z+5	; 0x05
    10fc:	42 17       	cp	r20, r18
    10fe:	53 07       	cpc	r21, r19
    1100:	44 f4       	brge	.+16     	; 0x1112 <fputc+0x38>
    1102:	a0 81       	ld	r26, Z
    1104:	b1 81       	ldd	r27, Z+1	; 0x01
    1106:	9d 01       	movw	r18, r26
    1108:	2f 5f       	subi	r18, 0xFF	; 255
    110a:	3f 4f       	sbci	r19, 0xFF	; 255
    110c:	31 83       	std	Z+1, r19	; 0x01
    110e:	20 83       	st	Z, r18
    1110:	8c 93       	st	X, r24
    1112:	26 81       	ldd	r18, Z+6	; 0x06
    1114:	37 81       	ldd	r19, Z+7	; 0x07
    1116:	2f 5f       	subi	r18, 0xFF	; 255
    1118:	3f 4f       	sbci	r19, 0xFF	; 255
    111a:	37 83       	std	Z+7, r19	; 0x07
    111c:	26 83       	std	Z+6, r18	; 0x06
    111e:	14 c0       	rjmp	.+40     	; 0x1148 <fputc+0x6e>
    1120:	8b 01       	movw	r16, r22
    1122:	ec 01       	movw	r28, r24
    1124:	fb 01       	movw	r30, r22
    1126:	00 84       	ldd	r0, Z+8	; 0x08
    1128:	f1 85       	ldd	r31, Z+9	; 0x09
    112a:	e0 2d       	mov	r30, r0
    112c:	09 95       	icall
    112e:	89 2b       	or	r24, r25
    1130:	e1 f6       	brne	.-72     	; 0x10ea <fputc+0x10>
    1132:	d8 01       	movw	r26, r16
    1134:	16 96       	adiw	r26, 0x06	; 6
    1136:	8d 91       	ld	r24, X+
    1138:	9c 91       	ld	r25, X
    113a:	17 97       	sbiw	r26, 0x07	; 7
    113c:	01 96       	adiw	r24, 0x01	; 1
    113e:	17 96       	adiw	r26, 0x07	; 7
    1140:	9c 93       	st	X, r25
    1142:	8e 93       	st	-X, r24
    1144:	16 97       	sbiw	r26, 0x06	; 6
    1146:	ce 01       	movw	r24, r28
    1148:	df 91       	pop	r29
    114a:	cf 91       	pop	r28
    114c:	1f 91       	pop	r17
    114e:	0f 91       	pop	r16
    1150:	08 95       	ret

00001152 <__ultoa_invert>:
    1152:	fa 01       	movw	r30, r20
    1154:	aa 27       	eor	r26, r26
    1156:	28 30       	cpi	r18, 0x08	; 8
    1158:	51 f1       	breq	.+84     	; 0x11ae <__ultoa_invert+0x5c>
    115a:	20 31       	cpi	r18, 0x10	; 16
    115c:	81 f1       	breq	.+96     	; 0x11be <__ultoa_invert+0x6c>
    115e:	e8 94       	clt
    1160:	6f 93       	push	r22
    1162:	6e 7f       	andi	r22, 0xFE	; 254
    1164:	6e 5f       	subi	r22, 0xFE	; 254
    1166:	7f 4f       	sbci	r23, 0xFF	; 255
    1168:	8f 4f       	sbci	r24, 0xFF	; 255
    116a:	9f 4f       	sbci	r25, 0xFF	; 255
    116c:	af 4f       	sbci	r26, 0xFF	; 255
    116e:	b1 e0       	ldi	r27, 0x01	; 1
    1170:	3e d0       	rcall	.+124    	; 0x11ee <__ultoa_invert+0x9c>
    1172:	b4 e0       	ldi	r27, 0x04	; 4
    1174:	3c d0       	rcall	.+120    	; 0x11ee <__ultoa_invert+0x9c>
    1176:	67 0f       	add	r22, r23
    1178:	78 1f       	adc	r23, r24
    117a:	89 1f       	adc	r24, r25
    117c:	9a 1f       	adc	r25, r26
    117e:	a1 1d       	adc	r26, r1
    1180:	68 0f       	add	r22, r24
    1182:	79 1f       	adc	r23, r25
    1184:	8a 1f       	adc	r24, r26
    1186:	91 1d       	adc	r25, r1
    1188:	a1 1d       	adc	r26, r1
    118a:	6a 0f       	add	r22, r26
    118c:	71 1d       	adc	r23, r1
    118e:	81 1d       	adc	r24, r1
    1190:	91 1d       	adc	r25, r1
    1192:	a1 1d       	adc	r26, r1
    1194:	20 d0       	rcall	.+64     	; 0x11d6 <__ultoa_invert+0x84>
    1196:	09 f4       	brne	.+2      	; 0x119a <__ultoa_invert+0x48>
    1198:	68 94       	set
    119a:	3f 91       	pop	r19
    119c:	2a e0       	ldi	r18, 0x0A	; 10
    119e:	26 9f       	mul	r18, r22
    11a0:	11 24       	eor	r1, r1
    11a2:	30 19       	sub	r19, r0
    11a4:	30 5d       	subi	r19, 0xD0	; 208
    11a6:	31 93       	st	Z+, r19
    11a8:	de f6       	brtc	.-74     	; 0x1160 <__ultoa_invert+0xe>
    11aa:	cf 01       	movw	r24, r30
    11ac:	08 95       	ret
    11ae:	46 2f       	mov	r20, r22
    11b0:	47 70       	andi	r20, 0x07	; 7
    11b2:	40 5d       	subi	r20, 0xD0	; 208
    11b4:	41 93       	st	Z+, r20
    11b6:	b3 e0       	ldi	r27, 0x03	; 3
    11b8:	0f d0       	rcall	.+30     	; 0x11d8 <__ultoa_invert+0x86>
    11ba:	c9 f7       	brne	.-14     	; 0x11ae <__ultoa_invert+0x5c>
    11bc:	f6 cf       	rjmp	.-20     	; 0x11aa <__ultoa_invert+0x58>
    11be:	46 2f       	mov	r20, r22
    11c0:	4f 70       	andi	r20, 0x0F	; 15
    11c2:	40 5d       	subi	r20, 0xD0	; 208
    11c4:	4a 33       	cpi	r20, 0x3A	; 58
    11c6:	18 f0       	brcs	.+6      	; 0x11ce <__ultoa_invert+0x7c>
    11c8:	49 5d       	subi	r20, 0xD9	; 217
    11ca:	31 fd       	sbrc	r19, 1
    11cc:	40 52       	subi	r20, 0x20	; 32
    11ce:	41 93       	st	Z+, r20
    11d0:	02 d0       	rcall	.+4      	; 0x11d6 <__ultoa_invert+0x84>
    11d2:	a9 f7       	brne	.-22     	; 0x11be <__ultoa_invert+0x6c>
    11d4:	ea cf       	rjmp	.-44     	; 0x11aa <__ultoa_invert+0x58>
    11d6:	b4 e0       	ldi	r27, 0x04	; 4
    11d8:	a6 95       	lsr	r26
    11da:	97 95       	ror	r25
    11dc:	87 95       	ror	r24
    11de:	77 95       	ror	r23
    11e0:	67 95       	ror	r22
    11e2:	ba 95       	dec	r27
    11e4:	c9 f7       	brne	.-14     	; 0x11d8 <__ultoa_invert+0x86>
    11e6:	00 97       	sbiw	r24, 0x00	; 0
    11e8:	61 05       	cpc	r22, r1
    11ea:	71 05       	cpc	r23, r1
    11ec:	08 95       	ret
    11ee:	9b 01       	movw	r18, r22
    11f0:	ac 01       	movw	r20, r24
    11f2:	0a 2e       	mov	r0, r26
    11f4:	06 94       	lsr	r0
    11f6:	57 95       	ror	r21
    11f8:	47 95       	ror	r20
    11fa:	37 95       	ror	r19
    11fc:	27 95       	ror	r18
    11fe:	ba 95       	dec	r27
    1200:	c9 f7       	brne	.-14     	; 0x11f4 <__ultoa_invert+0xa2>
    1202:	62 0f       	add	r22, r18
    1204:	73 1f       	adc	r23, r19
    1206:	84 1f       	adc	r24, r20
    1208:	95 1f       	adc	r25, r21
    120a:	a0 1d       	adc	r26, r0
    120c:	08 95       	ret

0000120e <__prologue_saves__>:
    120e:	2f 92       	push	r2
    1210:	3f 92       	push	r3
    1212:	4f 92       	push	r4
    1214:	5f 92       	push	r5
    1216:	6f 92       	push	r6
    1218:	7f 92       	push	r7
    121a:	8f 92       	push	r8
    121c:	9f 92       	push	r9
    121e:	af 92       	push	r10
    1220:	bf 92       	push	r11
    1222:	cf 92       	push	r12
    1224:	df 92       	push	r13
    1226:	ef 92       	push	r14
    1228:	ff 92       	push	r15
    122a:	0f 93       	push	r16
    122c:	1f 93       	push	r17
    122e:	cf 93       	push	r28
    1230:	df 93       	push	r29
    1232:	cd b7       	in	r28, 0x3d	; 61
    1234:	de b7       	in	r29, 0x3e	; 62
    1236:	ca 1b       	sub	r28, r26
    1238:	db 0b       	sbc	r29, r27
    123a:	0f b6       	in	r0, 0x3f	; 63
    123c:	f8 94       	cli
    123e:	de bf       	out	0x3e, r29	; 62
    1240:	0f be       	out	0x3f, r0	; 63
    1242:	cd bf       	out	0x3d, r28	; 61
    1244:	09 94       	ijmp

00001246 <__epilogue_restores__>:
    1246:	2a 88       	ldd	r2, Y+18	; 0x12
    1248:	39 88       	ldd	r3, Y+17	; 0x11
    124a:	48 88       	ldd	r4, Y+16	; 0x10
    124c:	5f 84       	ldd	r5, Y+15	; 0x0f
    124e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1250:	7d 84       	ldd	r7, Y+13	; 0x0d
    1252:	8c 84       	ldd	r8, Y+12	; 0x0c
    1254:	9b 84       	ldd	r9, Y+11	; 0x0b
    1256:	aa 84       	ldd	r10, Y+10	; 0x0a
    1258:	b9 84       	ldd	r11, Y+9	; 0x09
    125a:	c8 84       	ldd	r12, Y+8	; 0x08
    125c:	df 80       	ldd	r13, Y+7	; 0x07
    125e:	ee 80       	ldd	r14, Y+6	; 0x06
    1260:	fd 80       	ldd	r15, Y+5	; 0x05
    1262:	0c 81       	ldd	r16, Y+4	; 0x04
    1264:	1b 81       	ldd	r17, Y+3	; 0x03
    1266:	aa 81       	ldd	r26, Y+2	; 0x02
    1268:	b9 81       	ldd	r27, Y+1	; 0x01
    126a:	ce 0f       	add	r28, r30
    126c:	d1 1d       	adc	r29, r1
    126e:	0f b6       	in	r0, 0x3f	; 63
    1270:	f8 94       	cli
    1272:	de bf       	out	0x3e, r29	; 62
    1274:	0f be       	out	0x3f, r0	; 63
    1276:	cd bf       	out	0x3d, r28	; 61
    1278:	ed 01       	movw	r28, r26
    127a:	08 95       	ret

0000127c <_exit>:
    127c:	f8 94       	cli

0000127e <__stop_program>:
    127e:	ff cf       	rjmp	.-2      	; 0x127e <__stop_program>
