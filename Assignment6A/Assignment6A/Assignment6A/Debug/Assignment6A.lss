
Assignment6A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  000018aa  0000193e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018aa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000001c  00800150  00800150  0000198e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000198e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019ec  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00001a2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000136b  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ba4  00000000  00000000  00002e5f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000972  00000000  00000000  00003a03  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000190  00000000  00000000  00004378  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000630  00000000  00000000  00004508  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000564  00000000  00000000  00004b38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000098  00000000  00000000  0000509c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 db 00 	jmp	0x1b6	; 0x1b6 <__ctors_end>
       4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
       c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      10:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      14:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      18:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      1c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      20:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      24:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      28:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      2c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      30:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      34:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      38:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      3c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      40:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      44:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      48:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      4c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      50:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      54:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      58:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      5c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      60:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      64:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      68:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      6c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      70:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      74:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      78:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      7c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      80:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      84:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      88:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      8c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      90:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      94:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      98:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      9c:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a4:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      a8:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      ac:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>
      b0:	0c 94 f8 00 	jmp	0x1f0	; 0x1f0 <__bad_interrupt>

000000b4 <__trampolines_end>:
      b4:	6e 61       	ori	r22, 0x1E	; 30
      b6:	6e 00       	.word	0x006e	; ????

000000b8 <__c.2332>:
      b8:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      c8:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      d8:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      e8:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      f8:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     108:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     118:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     128:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     138:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     148:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     158:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     168:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     178:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     188:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     198:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     1a8:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

000001b6 <__ctors_end>:
     1b6:	11 24       	eor	r1, r1
     1b8:	1f be       	out	0x3f, r1	; 63
     1ba:	cf ef       	ldi	r28, 0xFF	; 255
     1bc:	d8 e0       	ldi	r29, 0x08	; 8
     1be:	de bf       	out	0x3e, r29	; 62
     1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <__do_copy_data>:
     1c2:	11 e0       	ldi	r17, 0x01	; 1
     1c4:	a0 e0       	ldi	r26, 0x00	; 0
     1c6:	b1 e0       	ldi	r27, 0x01	; 1
     1c8:	ea ea       	ldi	r30, 0xAA	; 170
     1ca:	f8 e1       	ldi	r31, 0x18	; 24
     1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <__do_copy_data+0x10>
     1ce:	05 90       	lpm	r0, Z+
     1d0:	0d 92       	st	X+, r0
     1d2:	a0 35       	cpi	r26, 0x50	; 80
     1d4:	b1 07       	cpc	r27, r17
     1d6:	d9 f7       	brne	.-10     	; 0x1ce <__do_copy_data+0xc>

000001d8 <__do_clear_bss>:
     1d8:	21 e0       	ldi	r18, 0x01	; 1
     1da:	a0 e5       	ldi	r26, 0x50	; 80
     1dc:	b1 e0       	ldi	r27, 0x01	; 1
     1de:	01 c0       	rjmp	.+2      	; 0x1e2 <.do_clear_bss_start>

000001e0 <.do_clear_bss_loop>:
     1e0:	1d 92       	st	X+, r1

000001e2 <.do_clear_bss_start>:
     1e2:	ac 36       	cpi	r26, 0x6C	; 108
     1e4:	b2 07       	cpc	r27, r18
     1e6:	e1 f7       	brne	.-8      	; 0x1e0 <.do_clear_bss_loop>
     1e8:	0e 94 7a 02 	call	0x4f4	; 0x4f4 <main>
     1ec:	0c 94 53 0c 	jmp	0x18a6	; 0x18a6 <_exit>

000001f0 <__bad_interrupt>:
     1f0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001f4 <I2C_Init>:
	return 1;												/* If yes then return 1 to indicate ack received i.e. ready to accept data byte */
	if (status == 0x20)										/* Check weather SLA+W transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     1f4:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     1f8:	88 e4       	ldi	r24, 0x48	; 72
     1fa:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
     1fe:	08 95       	ret

00000200 <I2C_Repeated_Start>:

uint8_t I2C_Repeated_Start(char slave_read_address)			/* I2C repeated start function */
{
	uint8_t status;											/* Declare variable */
	TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
     200:	94 ea       	ldi	r25, 0xA4	; 164
     202:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
     206:	ec eb       	ldi	r30, 0xBC	; 188
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	90 81       	ld	r25, Z
     20c:	99 23       	and	r25, r25
     20e:	ec f7       	brge	.-6      	; 0x20a <I2C_Repeated_Start+0xa>
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
     210:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
     214:	98 7f       	andi	r25, 0xF8	; 248
     216:	90 31       	cpi	r25, 0x10	; 16
     218:	99 f4       	brne	.+38     	; 0x240 <I2C_Repeated_Start+0x40>
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
	TWDR0 = slave_read_address;								/* If yes then write SLA+R in TWI data register */
     21a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     21e:	84 e8       	ldi	r24, 0x84	; 132
     220:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     224:	ec eb       	ldi	r30, 0xBC	; 188
     226:	f0 e0       	ldi	r31, 0x00	; 0
     228:	80 81       	ld	r24, Z
     22a:	88 23       	and	r24, r24
     22c:	ec f7       	brge	.-6      	; 0x228 <I2C_Repeated_Start+0x28>
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
     22e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     232:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
     234:	80 34       	cpi	r24, 0x40	; 64
     236:	31 f0       	breq	.+12     	; 0x244 <I2C_Repeated_Start+0x44>
	return 1;												/* If yes then return 1 to indicate ack received */ 
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
     238:	80 32       	cpi	r24, 0x20	; 32
     23a:	31 f0       	breq	.+12     	; 0x248 <I2C_Repeated_Start+0x48>
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
     23c:	83 e0       	ldi	r24, 0x03	; 3
     23e:	08 95       	ret
	uint8_t status;											/* Declare variable */
	TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);					/* Enable TWI, generate start condition and clear interrupt flag */
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (start condition) */
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status != 0x10)										/* Check weather repeated start condition transmitted successfully or not? */
	return 0;												/* If no then return 0 to indicate repeated start condition fail */
     240:	80 e0       	ldi	r24, 0x00	; 0
     242:	08 95       	ret
	TWDR0 = slave_read_address;								/* If yes then write SLA+R in TWI data register */
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x40)										/* Check weather SLA+R transmitted & ack received or not? */
	return 1;												/* If yes then return 1 to indicate ack received */ 
     244:	81 e0       	ldi	r24, 0x01	; 1
     246:	08 95       	ret
	if (status == 0x20)										/* Check weather SLA+R transmitted & nack received or not? */
	return 2;												/* If yes then return 2 to indicate nack received i.e. device is busy */
     248:	82 e0       	ldi	r24, 0x02	; 2
	else
	return 3;												/* Else return 3 to indicate SLA+W failed */
}
     24a:	08 95       	ret

0000024c <I2C_Stop>:

void I2C_Stop()												/* I2C stop function */
{
	TWCR0=(1<<TWSTO)|(1<<TWINT)|(1<<TWEN);					/* Enable TWI, generate stop condition and clear interrupt flag */
     24c:	84 e9       	ldi	r24, 0x94	; 148
     24e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while(TWCR0 & (1<<TWSTO));								/* Wait until stop condition execution */ 
     252:	ec eb       	ldi	r30, 0xBC	; 188
     254:	f0 e0       	ldi	r31, 0x00	; 0
     256:	80 81       	ld	r24, Z
     258:	84 fd       	sbrc	r24, 4
     25a:	fd cf       	rjmp	.-6      	; 0x256 <I2C_Stop+0xa>
}
     25c:	08 95       	ret

0000025e <I2C_Start_Wait>:

void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
     25e:	bf 92       	push	r11
     260:	cf 92       	push	r12
     262:	df 92       	push	r13
     264:	ef 92       	push	r14
     266:	ff 92       	push	r15
     268:	0f 93       	push	r16
     26a:	1f 93       	push	r17
     26c:	cf 93       	push	r28
     26e:	df 93       	push	r29
     270:	b8 2e       	mov	r11, r24
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     272:	cc eb       	ldi	r28, 0xBC	; 188
     274:	d0 e0       	ldi	r29, 0x00	; 0
     276:	0f 2e       	mov	r0, r31
     278:	f4 ea       	ldi	r31, 0xA4	; 164
     27a:	df 2e       	mov	r13, r31
     27c:	f0 2d       	mov	r31, r0
		while (!(TWCR0 & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
		status = TWSR0 & 0xF8;								/* Read TWI status register with masking lower three bits */
     27e:	09 eb       	ldi	r16, 0xB9	; 185
     280:	10 e0       	ldi	r17, 0x00	; 0
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
		continue;											/* If no then continue with start loop again */
		TWDR0 = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     282:	0f 2e       	mov	r0, r31
     284:	fb eb       	ldi	r31, 0xBB	; 187
     286:	ef 2e       	mov	r14, r31
     288:	f1 2c       	mov	r15, r1
     28a:	f0 2d       	mov	r31, r0
		TWCR0 = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     28c:	0f 2e       	mov	r0, r31
     28e:	f4 e8       	ldi	r31, 0x84	; 132
     290:	cf 2e       	mov	r12, r31
     292:	f0 2d       	mov	r31, r0
void I2C_Start_Wait(char slave_write_address)				/* I2C start wait function */
{
	uint8_t status;											/* Declare variable */
	while (1)
	{
		TWCR0 = (1<<TWSTA)|(1<<TWEN)|(1<<TWINT);				/* Enable TWI, generate start condition and clear interrupt flag */
     294:	d8 82       	st	Y, r13
		while (!(TWCR0 & (1<<TWINT)));						/* Wait until TWI finish its current job (start condition) */
     296:	88 81       	ld	r24, Y
     298:	88 23       	and	r24, r24
     29a:	ec f7       	brge	.-6      	; 0x296 <I2C_Start_Wait+0x38>
		status = TWSR0 & 0xF8;								/* Read TWI status register with masking lower three bits */
     29c:	f8 01       	movw	r30, r16
     29e:	80 81       	ld	r24, Z
		if (status != 0x08)									/* Check weather start condition transmitted successfully or not? */
     2a0:	88 7f       	andi	r24, 0xF8	; 248
     2a2:	88 30       	cpi	r24, 0x08	; 8
     2a4:	b9 f7       	brne	.-18     	; 0x294 <I2C_Start_Wait+0x36>
		continue;											/* If no then continue with start loop again */
		TWDR0 = slave_write_address;							/* If yes then write SLA+W in TWI data register */
     2a6:	f7 01       	movw	r30, r14
     2a8:	b0 82       	st	Z, r11
		TWCR0 = (1<<TWEN)|(1<<TWINT);						/* Enable TWI and clear interrupt flag */
     2aa:	c8 82       	st	Y, r12
		while (!(TWCR0 & (1<<TWINT)));						/* Wait until TWI finish its current job (Write operation) */
     2ac:	88 81       	ld	r24, Y
     2ae:	88 23       	and	r24, r24
     2b0:	ec f7       	brge	.-6      	; 0x2ac <I2C_Start_Wait+0x4e>
		status = TWSR0 & 0xF8;								/* Read TWI status register with masking lower three bits */
     2b2:	f8 01       	movw	r30, r16
     2b4:	80 81       	ld	r24, Z
		if (status != 0x18 )								/* Check weather SLA+W transmitted & ack received or not? */
     2b6:	88 7f       	andi	r24, 0xF8	; 248
     2b8:	88 31       	cpi	r24, 0x18	; 24
     2ba:	19 f0       	breq	.+6      	; 0x2c2 <I2C_Start_Wait+0x64>
		{
			I2C_Stop();										/* If not then generate stop condition */
     2bc:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>
			continue;										/* continue with start loop again */
     2c0:	e9 cf       	rjmp	.-46     	; 0x294 <I2C_Start_Wait+0x36>
		}
		break;												/* If yes then break loop */
	}
}
     2c2:	df 91       	pop	r29
     2c4:	cf 91       	pop	r28
     2c6:	1f 91       	pop	r17
     2c8:	0f 91       	pop	r16
     2ca:	ff 90       	pop	r15
     2cc:	ef 90       	pop	r14
     2ce:	df 90       	pop	r13
     2d0:	cf 90       	pop	r12
     2d2:	bf 90       	pop	r11
     2d4:	08 95       	ret

000002d6 <I2C_Write>:

uint8_t I2C_Write(char data)								/* I2C write function */
{
	uint8_t status;											/* Declare variable */
	TWDR0 = data;											/* Copy data in TWI data register */
     2d6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
     2da:	84 e8       	ldi	r24, 0x84	; 132
     2dc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
     2e0:	ec eb       	ldi	r30, 0xBC	; 188
     2e2:	f0 e0       	ldi	r31, 0x00	; 0
     2e4:	80 81       	ld	r24, Z
     2e6:	88 23       	and	r24, r24
     2e8:	ec f7       	brge	.-6      	; 0x2e4 <I2C_Write+0xe>
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
     2ea:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
     2ee:	88 7f       	andi	r24, 0xF8	; 248
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
     2f0:	88 32       	cpi	r24, 0x28	; 40
     2f2:	21 f0       	breq	.+8      	; 0x2fc <I2C_Write+0x26>
	return 0;												/* If yes then return 0 to indicate ack received */
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
     2f4:	80 33       	cpi	r24, 0x30	; 48
     2f6:	21 f0       	breq	.+8      	; 0x300 <I2C_Write+0x2a>
	return 1;												/* If yes then return 1 to indicate nack received */
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
     2f8:	82 e0       	ldi	r24, 0x02	; 2
     2fa:	08 95       	ret
	TWDR0 = data;											/* Copy data in TWI data register */
	TWCR0 = (1<<TWEN)|(1<<TWINT);							/* Enable TWI and clear interrupt flag */
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (Write operation) */
	status = TWSR0 & 0xF8;									/* Read TWI status register with masking lower three bits */
	if (status == 0x28)										/* Check weather data transmitted & ack received or not? */
	return 0;												/* If yes then return 0 to indicate ack received */
     2fc:	80 e0       	ldi	r24, 0x00	; 0
     2fe:	08 95       	ret
	if (status == 0x30)										/* Check weather data transmitted & nack received or not? */
	return 1;												/* If yes then return 1 to indicate nack received */
     300:	81 e0       	ldi	r24, 0x01	; 1
	else
	return 2;												/* Else return 2 to indicate data transmission failed */
}
     302:	08 95       	ret

00000304 <I2C_Read_Ack>:

char I2C_Read_Ack()											/* I2C read ack function */
{
	TWCR0=(1<<TWEN)|(1<<TWINT)|(1<<TWEA);					/* Enable TWI, generation of ack and clear interrupt flag */
     304:	84 ec       	ldi	r24, 0xC4	; 196
     306:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     30a:	ec eb       	ldi	r30, 0xBC	; 188
     30c:	f0 e0       	ldi	r31, 0x00	; 0
     30e:	80 81       	ld	r24, Z
     310:	88 23       	and	r24, r24
     312:	ec f7       	brge	.-6      	; 0x30e <I2C_Read_Ack+0xa>
	return TWDR0;											/* Return received data */
     314:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
}	
     318:	08 95       	ret

0000031a <I2C_Read_Nack>:

char I2C_Read_Nack()										/* I2C read nack function */
{
	TWCR0=(1<<TWEN)|(1<<TWINT);								/* Enable TWI and clear interrupt flag */
     31a:	84 e8       	ldi	r24, 0x84	; 132
     31c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	while (!(TWCR0 & (1<<TWINT)));							/* Wait until TWI finish its current job (read operation) */
     320:	ec eb       	ldi	r30, 0xBC	; 188
     322:	f0 e0       	ldi	r31, 0x00	; 0
     324:	80 81       	ld	r24, Z
     326:	88 23       	and	r24, r24
     328:	ec f7       	brge	.-6      	; 0x324 <I2C_Read_Nack+0xa>
	return TWDR0;
     32a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>
     32e:	08 95       	ret

00000330 <MPU6050_Init>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     330:	2f ef       	ldi	r18, 0xFF	; 255
     332:	82 e5       	ldi	r24, 0x52	; 82
     334:	97 e0       	ldi	r25, 0x07	; 7
     336:	21 50       	subi	r18, 0x01	; 1
     338:	80 40       	sbci	r24, 0x00	; 0
     33a:	90 40       	sbci	r25, 0x00	; 0
     33c:	e1 f7       	brne	.-8      	; 0x336 <MPU6050_Init+0x6>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <MPU6050_Init+0x10>
     340:	00 00       	nop
 float Acc_x,Acc_y,Acc_z,Temperature,Gyro_x,Gyro_y,Gyro_z;

 void MPU6050_Init()
 {
	 _delay_ms(150);// this will power up the time
	 I2C_Start_Wait(0xD0);//this will write the address
     342:	80 ed       	ldi	r24, 0xD0	; 208
     344:	0e 94 2f 01 	call	0x25e	; 0x25e <I2C_Start_Wait>
	 I2C_Write(SMPLRT_DIV);// this will write into the register	
     348:	89 e1       	ldi	r24, 0x19	; 25
     34a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Write(0x07);									
     34e:	87 e0       	ldi	r24, 0x07	; 7
     350:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Stop();
     354:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>

	 I2C_Start_Wait(0xD0);
     358:	80 ed       	ldi	r24, 0xD0	; 208
     35a:	0e 94 2f 01 	call	0x25e	; 0x25e <I2C_Start_Wait>
	 I2C_Write(PWR_MGMT_1);//this will manage the power register
     35e:	8b e6       	ldi	r24, 0x6B	; 107
     360:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Write(0x01);			
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Stop();
     36a:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>

	 I2C_Start_Wait(0xD0);
     36e:	80 ed       	ldi	r24, 0xD0	; 208
     370:	0e 94 2f 01 	call	0x25e	; 0x25e <I2C_Start_Wait>
	 I2C_Write(CONFIG);	// will write the configuration
     374:	8a e1       	ldi	r24, 0x1A	; 26
     376:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Write(0x00);
     37a:	80 e0       	ldi	r24, 0x00	; 0
     37c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Stop();
     380:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>

	 I2C_Start_Wait(0xD0);
     384:	80 ed       	ldi	r24, 0xD0	; 208
     386:	0e 94 2f 01 	call	0x25e	; 0x25e <I2C_Start_Wait>
	 I2C_Write(GYRO_CONFIG);//will write the gyro configuration
     38a:	8b e1       	ldi	r24, 0x1B	; 27
     38c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Write(0x18);
     390:	88 e1       	ldi	r24, 0x18	; 24
     392:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Stop();
     396:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>

	 I2C_Start_Wait(0xD0);
     39a:	80 ed       	ldi	r24, 0xD0	; 208
     39c:	0e 94 2f 01 	call	0x25e	; 0x25e <I2C_Start_Wait>
	 I2C_Write(INT_ENABLE);//will write onto the interrupt
     3a0:	88 e3       	ldi	r24, 0x38	; 56
     3a2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Write(0x01);
     3a6:	81 e0       	ldi	r24, 0x01	; 1
     3a8:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Stop();
     3ac:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>
     3b0:	08 95       	ret

000003b2 <MPU_Start_Loc>:
 }

 void MPU_Start_Loc()
 {
	 I2C_Start_Wait(0xD0);								
     3b2:	80 ed       	ldi	r24, 0xD0	; 208
     3b4:	0e 94 2f 01 	call	0x25e	; 0x25e <I2C_Start_Wait>
	 I2C_Write(ACCEL_XOUT_H);							
     3b8:	8b e3       	ldi	r24, 0x3B	; 59
     3ba:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <I2C_Write>
	 I2C_Repeated_Start(0xD1);							
     3be:	81 ed       	ldi	r24, 0xD1	; 209
     3c0:	0e 94 00 01 	call	0x200	; 0x200 <I2C_Repeated_Start>
     3c4:	08 95       	ret

000003c6 <Read_RawValue>:
 }

 void Read_RawValue()
 {
     3c6:	cf 93       	push	r28
	 MPU_Start_Loc();									
     3c8:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <MPU_Start_Loc>
	 Acc_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     3cc:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     3d0:	c8 2f       	mov	r28, r24
     3d2:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     3d6:	6c 2f       	mov	r22, r28
     3d8:	70 e0       	ldi	r23, 0x00	; 0
     3da:	76 2f       	mov	r23, r22
     3dc:	66 27       	eor	r22, r22
     3de:	68 2b       	or	r22, r24
     3e0:	07 2e       	mov	r0, r23
     3e2:	00 0c       	add	r0, r0
     3e4:	88 0b       	sbc	r24, r24
     3e6:	99 0b       	sbc	r25, r25
     3e8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__floatsisf>
     3ec:	60 93 64 01 	sts	0x0164, r22	; 0x800164 <Acc_x>
     3f0:	70 93 65 01 	sts	0x0165, r23	; 0x800165 <Acc_x+0x1>
     3f4:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <Acc_x+0x2>
     3f8:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <Acc_x+0x3>
	 Acc_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     3fc:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     400:	c8 2f       	mov	r28, r24
     402:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     406:	6c 2f       	mov	r22, r28
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	76 2f       	mov	r23, r22
     40c:	66 27       	eor	r22, r22
     40e:	68 2b       	or	r22, r24
     410:	07 2e       	mov	r0, r23
     412:	00 0c       	add	r0, r0
     414:	88 0b       	sbc	r24, r24
     416:	99 0b       	sbc	r25, r25
     418:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__floatsisf>
     41c:	60 93 5c 01 	sts	0x015C, r22	; 0x80015c <Acc_y>
     420:	70 93 5d 01 	sts	0x015D, r23	; 0x80015d <Acc_y+0x1>
     424:	80 93 5e 01 	sts	0x015E, r24	; 0x80015e <Acc_y+0x2>
     428:	90 93 5f 01 	sts	0x015F, r25	; 0x80015f <Acc_y+0x3>
	 Acc_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     42c:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     430:	c8 2f       	mov	r28, r24
     432:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     436:	6c 2f       	mov	r22, r28
     438:	70 e0       	ldi	r23, 0x00	; 0
     43a:	76 2f       	mov	r23, r22
     43c:	66 27       	eor	r22, r22
     43e:	68 2b       	or	r22, r24
     440:	07 2e       	mov	r0, r23
     442:	00 0c       	add	r0, r0
     444:	88 0b       	sbc	r24, r24
     446:	99 0b       	sbc	r25, r25
     448:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__floatsisf>
     44c:	60 93 50 01 	sts	0x0150, r22	; 0x800150 <__data_end>
     450:	70 93 51 01 	sts	0x0151, r23	; 0x800151 <__data_end+0x1>
     454:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <__data_end+0x2>
     458:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <__data_end+0x3>
	 Gyro_x = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     45c:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     460:	c8 2f       	mov	r28, r24
     462:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     466:	6c 2f       	mov	r22, r28
     468:	70 e0       	ldi	r23, 0x00	; 0
     46a:	76 2f       	mov	r23, r22
     46c:	66 27       	eor	r22, r22
     46e:	68 2b       	or	r22, r24
     470:	07 2e       	mov	r0, r23
     472:	00 0c       	add	r0, r0
     474:	88 0b       	sbc	r24, r24
     476:	99 0b       	sbc	r25, r25
     478:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__floatsisf>
     47c:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <Gyro_x>
     480:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <Gyro_x+0x1>
     484:	80 93 56 01 	sts	0x0156, r24	; 0x800156 <Gyro_x+0x2>
     488:	90 93 57 01 	sts	0x0157, r25	; 0x800157 <Gyro_x+0x3>
	 Gyro_y = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Ack());
     48c:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     490:	c8 2f       	mov	r28, r24
     492:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     496:	6c 2f       	mov	r22, r28
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	76 2f       	mov	r23, r22
     49c:	66 27       	eor	r22, r22
     49e:	68 2b       	or	r22, r24
     4a0:	07 2e       	mov	r0, r23
     4a2:	00 0c       	add	r0, r0
     4a4:	88 0b       	sbc	r24, r24
     4a6:	99 0b       	sbc	r25, r25
     4a8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__floatsisf>
     4ac:	60 93 68 01 	sts	0x0168, r22	; 0x800168 <Gyro_y>
     4b0:	70 93 69 01 	sts	0x0169, r23	; 0x800169 <Gyro_y+0x1>
     4b4:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <Gyro_y+0x2>
     4b8:	90 93 6b 01 	sts	0x016B, r25	; 0x80016b <Gyro_y+0x3>
	 Gyro_z = (((int)I2C_Read_Ack()<<8) | (int)I2C_Read_Nack());
     4bc:	0e 94 82 01 	call	0x304	; 0x304 <I2C_Read_Ack>
     4c0:	c8 2f       	mov	r28, r24
     4c2:	0e 94 8d 01 	call	0x31a	; 0x31a <I2C_Read_Nack>
     4c6:	6c 2f       	mov	r22, r28
     4c8:	70 e0       	ldi	r23, 0x00	; 0
     4ca:	76 2f       	mov	r23, r22
     4cc:	66 27       	eor	r22, r22
     4ce:	68 2b       	or	r22, r24
     4d0:	07 2e       	mov	r0, r23
     4d2:	00 0c       	add	r0, r0
     4d4:	88 0b       	sbc	r24, r24
     4d6:	99 0b       	sbc	r25, r25
     4d8:	0e 94 60 04 	call	0x8c0	; 0x8c0 <__floatsisf>
     4dc:	60 93 60 01 	sts	0x0160, r22	; 0x800160 <Gyro_z>
     4e0:	70 93 61 01 	sts	0x0161, r23	; 0x800161 <Gyro_z+0x1>
     4e4:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <Gyro_z+0x2>
     4e8:	90 93 63 01 	sts	0x0163, r25	; 0x800163 <Gyro_z+0x3>
	 I2C_Stop();
     4ec:	0e 94 26 01 	call	0x24c	; 0x24c <I2C_Stop>
 }
     4f0:	cf 91       	pop	r28
     4f2:	08 95       	ret

000004f4 <main>:

 int main()
 {
     4f4:	cf 93       	push	r28
     4f6:	df 93       	push	r29
     4f8:	cd b7       	in	r28, 0x3d	; 61
     4fa:	de b7       	in	r29, 0x3e	; 62
     4fc:	e2 97       	sbiw	r28, 0x32	; 50
     4fe:	0f b6       	in	r0, 0x3f	; 63
     500:	f8 94       	cli
     502:	de bf       	out	0x3e, r29	; 62
     504:	0f be       	out	0x3f, r0	; 63
     506:	cd bf       	out	0x3d, r28	; 61
	 char buffer[20];
	 char float_val[10];
	 float X_a,Y_a,Z_a,t;
	 float X_g=0,Y_g=0,Z_g=0;
	 I2C_Init();
     508:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <I2C_Init>
	 MPU6050_Init();
     50c:	0e 94 98 01 	call	0x330	; 0x330 <MPU6050_Init>
	 USART_Init(9600);
     510:	60 e8       	ldi	r22, 0x80	; 128
     512:	75 e2       	ldi	r23, 0x25	; 37
     514:	80 e0       	ldi	r24, 0x00	; 0
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	0e 94 a8 03 	call	0x750	; 0x750 <USART_Init>
		 
		 X_g = Gyro_x/16.4;
		 Y_g = Gyro_y/16.4;
		 Z_g = Gyro_z/16.4;

		 dtostrf( X_a, 3, 2, float_val );			
     51c:	7e 01       	movw	r14, r28
     51e:	25 e1       	ldi	r18, 0x15	; 21
     520:	e2 0e       	add	r14, r18
     522:	f1 1c       	adc	r15, r1
		 sprintf(buffer," Ax = %s g\t",float_val);			
     524:	ce 01       	movw	r24, r28
     526:	01 96       	adiw	r24, 0x01	; 1
     528:	6c 01       	movw	r12, r24
		 dtostrf( Y_a, 3, 2, float_val );					
		 sprintf(buffer," Ay = %s g\t",float_val);			
		 USART_SendString(buffer);						
		 
		 dtostrf( Z_a, 3, 2, float_val );					
		 sprintf(buffer," Az = %s g\t",float_val);			
     52a:	0f 2e       	mov	r0, r31
     52c:	f8 e1       	ldi	r31, 0x18	; 24
     52e:	4f 2e       	mov	r4, r31
     530:	f1 e0       	ldi	r31, 0x01	; 1
     532:	5f 2e       	mov	r5, r31
     534:	f0 2d       	mov	r31, r0
		 USART_SendString(buffer);						

		 dtostrf( X_g, 3, 2, float_val );					
		 sprintf(buffer," Gx = %s%c/s\t",float_val,0xF8);	
     536:	0f 2e       	mov	r0, r31
     538:	f8 ef       	ldi	r31, 0xF8	; 248
     53a:	3f 2e       	mov	r3, r31
     53c:	f0 2d       	mov	r31, r0
     53e:	0f 2e       	mov	r0, r31
     540:	f4 e2       	ldi	r31, 0x24	; 36
     542:	6f 2e       	mov	r6, r31
     544:	f1 e0       	ldi	r31, 0x01	; 1
     546:	7f 2e       	mov	r7, r31
     548:	f0 2d       	mov	r31, r0
		 USART_SendString(buffer);						
		 dtostrf( Y_g, 3, 2, float_val );					
		 sprintf(buffer," Gy = %s%c/s\t",float_val,0xF8);	
     54a:	0f 2e       	mov	r0, r31
     54c:	f2 e3       	ldi	r31, 0x32	; 50
     54e:	8f 2e       	mov	r8, r31
     550:	f1 e0       	ldi	r31, 0x01	; 1
     552:	9f 2e       	mov	r9, r31
     554:	f0 2d       	mov	r31, r0
		 USART_SendString(buffer);						
		 
		 dtostrf( Z_g, 3, 2, float_val);					
		 sprintf(buffer," Gz = %s%c/s\r\n",float_val,0xF8);	
     556:	0f 2e       	mov	r0, r31
     558:	f0 e4       	ldi	r31, 0x40	; 64
     55a:	af 2e       	mov	r10, r31
     55c:	f1 e0       	ldi	r31, 0x01	; 1
     55e:	bf 2e       	mov	r11, r31
     560:	f0 2d       	mov	r31, r0
	 MPU6050_Init();
	 USART_Init(9600);
	 
	 while(1)
	 {
		 Read_RawValue();
     562:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <Read_RawValue>

		 X_a = Acc_x/16384.0;
		 Y_a = Acc_y/16384.0;
     566:	20 e0       	ldi	r18, 0x00	; 0
     568:	30 e0       	ldi	r19, 0x00	; 0
     56a:	40 e8       	ldi	r20, 0x80	; 128
     56c:	58 e3       	ldi	r21, 0x38	; 56
     56e:	60 91 5c 01 	lds	r22, 0x015C	; 0x80015c <Acc_y>
     572:	70 91 5d 01 	lds	r23, 0x015D	; 0x80015d <Acc_y+0x1>
     576:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <Acc_y+0x2>
     57a:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <Acc_y+0x3>
     57e:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__mulsf3>
     582:	6f 8f       	std	Y+31, r22	; 0x1f
     584:	78 a3       	std	Y+32, r23	; 0x20
     586:	89 a3       	std	Y+33, r24	; 0x21
     588:	9a a3       	std	Y+34, r25	; 0x22
		 Z_a = Acc_z/16384.0;
     58a:	20 e0       	ldi	r18, 0x00	; 0
     58c:	30 e0       	ldi	r19, 0x00	; 0
     58e:	40 e8       	ldi	r20, 0x80	; 128
     590:	58 e3       	ldi	r21, 0x38	; 56
     592:	60 91 50 01 	lds	r22, 0x0150	; 0x800150 <__data_end>
     596:	70 91 51 01 	lds	r23, 0x0151	; 0x800151 <__data_end+0x1>
     59a:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <__data_end+0x2>
     59e:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <__data_end+0x3>
     5a2:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__mulsf3>
     5a6:	6b a3       	std	Y+35, r22	; 0x23
     5a8:	7c a3       	std	Y+36, r23	; 0x24
     5aa:	8d a3       	std	Y+37, r24	; 0x25
     5ac:	9e a3       	std	Y+38, r25	; 0x26
		 
		 X_g = Gyro_x/16.4;
     5ae:	23 e3       	ldi	r18, 0x33	; 51
     5b0:	33 e3       	ldi	r19, 0x33	; 51
     5b2:	43 e8       	ldi	r20, 0x83	; 131
     5b4:	51 e4       	ldi	r21, 0x41	; 65
     5b6:	60 91 54 01 	lds	r22, 0x0154	; 0x800154 <Gyro_x>
     5ba:	70 91 55 01 	lds	r23, 0x0155	; 0x800155 <Gyro_x+0x1>
     5be:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <Gyro_x+0x2>
     5c2:	90 91 57 01 	lds	r25, 0x0157	; 0x800157 <Gyro_x+0x3>
     5c6:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divsf3>
     5ca:	6f a3       	std	Y+39, r22	; 0x27
     5cc:	78 a7       	std	Y+40, r23	; 0x28
     5ce:	89 a7       	std	Y+41, r24	; 0x29
     5d0:	9a a7       	std	Y+42, r25	; 0x2a
		 Y_g = Gyro_y/16.4;
     5d2:	23 e3       	ldi	r18, 0x33	; 51
     5d4:	33 e3       	ldi	r19, 0x33	; 51
     5d6:	43 e8       	ldi	r20, 0x83	; 131
     5d8:	51 e4       	ldi	r21, 0x41	; 65
     5da:	60 91 68 01 	lds	r22, 0x0168	; 0x800168 <Gyro_y>
     5de:	70 91 69 01 	lds	r23, 0x0169	; 0x800169 <Gyro_y+0x1>
     5e2:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <Gyro_y+0x2>
     5e6:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <Gyro_y+0x3>
     5ea:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divsf3>
     5ee:	6b a7       	std	Y+43, r22	; 0x2b
     5f0:	7c a7       	std	Y+44, r23	; 0x2c
     5f2:	8d a7       	std	Y+45, r24	; 0x2d
     5f4:	9e a7       	std	Y+46, r25	; 0x2e
		 Z_g = Gyro_z/16.4;
     5f6:	23 e3       	ldi	r18, 0x33	; 51
     5f8:	33 e3       	ldi	r19, 0x33	; 51
     5fa:	43 e8       	ldi	r20, 0x83	; 131
     5fc:	51 e4       	ldi	r21, 0x41	; 65
     5fe:	60 91 60 01 	lds	r22, 0x0160	; 0x800160 <Gyro_z>
     602:	70 91 61 01 	lds	r23, 0x0161	; 0x800161 <Gyro_z+0x1>
     606:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <Gyro_z+0x2>
     60a:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <Gyro_z+0x3>
     60e:	0e 94 ec 03 	call	0x7d8	; 0x7d8 <__divsf3>
     612:	6f a7       	std	Y+47, r22	; 0x2f
     614:	78 ab       	std	Y+48, r23	; 0x30
     616:	89 ab       	std	Y+49, r24	; 0x31
     618:	9a ab       	std	Y+50, r25	; 0x32

		 dtostrf( X_a, 3, 2, float_val );			
     61a:	20 e0       	ldi	r18, 0x00	; 0
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	40 e8       	ldi	r20, 0x80	; 128
     620:	58 e3       	ldi	r21, 0x38	; 56
     622:	60 91 64 01 	lds	r22, 0x0164	; 0x800164 <Acc_x>
     626:	70 91 65 01 	lds	r23, 0x0165	; 0x800165 <Acc_x+0x1>
     62a:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <Acc_x+0x2>
     62e:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <Acc_x+0x3>
     632:	0e 94 ec 04 	call	0x9d8	; 0x9d8 <__mulsf3>
     636:	87 01       	movw	r16, r14
     638:	22 e0       	ldi	r18, 0x02	; 2
     63a:	43 e0       	ldi	r20, 0x03	; 3
     63c:	0e 94 2f 09 	call	0x125e	; 0x125e <dtostrf>
		 sprintf(buffer," Ax = %s g\t",float_val);			
     640:	ff 92       	push	r15
     642:	ef 92       	push	r14
     644:	80 e0       	ldi	r24, 0x00	; 0
     646:	91 e0       	ldi	r25, 0x01	; 1
     648:	9f 93       	push	r25
     64a:	8f 93       	push	r24
     64c:	df 92       	push	r13
     64e:	cf 92       	push	r12
     650:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <sprintf>
		 USART_SendString(buffer);						
     654:	c6 01       	movw	r24, r12
     656:	0e 94 dd 03 	call	0x7ba	; 0x7ba <USART_SendString>

		 dtostrf( Y_a, 3, 2, float_val );					
     65a:	22 e0       	ldi	r18, 0x02	; 2
     65c:	43 e0       	ldi	r20, 0x03	; 3
     65e:	6f 8d       	ldd	r22, Y+31	; 0x1f
     660:	78 a1       	ldd	r23, Y+32	; 0x20
     662:	89 a1       	ldd	r24, Y+33	; 0x21
     664:	9a a1       	ldd	r25, Y+34	; 0x22
     666:	0e 94 2f 09 	call	0x125e	; 0x125e <dtostrf>
		 sprintf(buffer," Ay = %s g\t",float_val);			
     66a:	ff 92       	push	r15
     66c:	ef 92       	push	r14
     66e:	8c e0       	ldi	r24, 0x0C	; 12
     670:	91 e0       	ldi	r25, 0x01	; 1
     672:	9f 93       	push	r25
     674:	8f 93       	push	r24
     676:	df 92       	push	r13
     678:	cf 92       	push	r12
     67a:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <sprintf>
		 USART_SendString(buffer);						
     67e:	c6 01       	movw	r24, r12
     680:	0e 94 dd 03 	call	0x7ba	; 0x7ba <USART_SendString>
		 
		 dtostrf( Z_a, 3, 2, float_val );					
     684:	22 e0       	ldi	r18, 0x02	; 2
     686:	43 e0       	ldi	r20, 0x03	; 3
     688:	6b a1       	ldd	r22, Y+35	; 0x23
     68a:	7c a1       	ldd	r23, Y+36	; 0x24
     68c:	8d a1       	ldd	r24, Y+37	; 0x25
     68e:	9e a1       	ldd	r25, Y+38	; 0x26
     690:	0e 94 2f 09 	call	0x125e	; 0x125e <dtostrf>
		 sprintf(buffer," Az = %s g\t",float_val);			
     694:	ff 92       	push	r15
     696:	ef 92       	push	r14
     698:	5f 92       	push	r5
     69a:	4f 92       	push	r4
     69c:	df 92       	push	r13
     69e:	cf 92       	push	r12
     6a0:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <sprintf>
		 USART_SendString(buffer);						
     6a4:	c6 01       	movw	r24, r12
     6a6:	0e 94 dd 03 	call	0x7ba	; 0x7ba <USART_SendString>

		 dtostrf( X_g, 3, 2, float_val );					
     6aa:	22 e0       	ldi	r18, 0x02	; 2
     6ac:	43 e0       	ldi	r20, 0x03	; 3
     6ae:	6f a1       	ldd	r22, Y+39	; 0x27
     6b0:	78 a5       	ldd	r23, Y+40	; 0x28
     6b2:	89 a5       	ldd	r24, Y+41	; 0x29
     6b4:	9a a5       	ldd	r25, Y+42	; 0x2a
     6b6:	0e 94 2f 09 	call	0x125e	; 0x125e <dtostrf>
		 sprintf(buffer," Gx = %s%c/s\t",float_val,0xF8);	
     6ba:	1f 92       	push	r1
     6bc:	3f 92       	push	r3
     6be:	ff 92       	push	r15
     6c0:	ef 92       	push	r14
     6c2:	7f 92       	push	r7
     6c4:	6f 92       	push	r6
     6c6:	df 92       	push	r13
     6c8:	cf 92       	push	r12
     6ca:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <sprintf>
		 USART_SendString(buffer);						
     6ce:	c6 01       	movw	r24, r12
     6d0:	0e 94 dd 03 	call	0x7ba	; 0x7ba <USART_SendString>
		 dtostrf( Y_g, 3, 2, float_val );					
     6d4:	22 e0       	ldi	r18, 0x02	; 2
     6d6:	43 e0       	ldi	r20, 0x03	; 3
     6d8:	6b a5       	ldd	r22, Y+43	; 0x2b
     6da:	7c a5       	ldd	r23, Y+44	; 0x2c
     6dc:	8d a5       	ldd	r24, Y+45	; 0x2d
     6de:	9e a5       	ldd	r25, Y+46	; 0x2e
     6e0:	0e 94 2f 09 	call	0x125e	; 0x125e <dtostrf>
		 sprintf(buffer," Gy = %s%c/s\t",float_val,0xF8);	
     6e4:	1f 92       	push	r1
     6e6:	3f 92       	push	r3
     6e8:	ff 92       	push	r15
     6ea:	ef 92       	push	r14
     6ec:	9f 92       	push	r9
     6ee:	8f 92       	push	r8
     6f0:	df 92       	push	r13
     6f2:	cf 92       	push	r12
     6f4:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <sprintf>
		 USART_SendString(buffer);						
     6f8:	0f b6       	in	r0, 0x3f	; 63
     6fa:	f8 94       	cli
     6fc:	de bf       	out	0x3e, r29	; 62
     6fe:	0f be       	out	0x3f, r0	; 63
     700:	cd bf       	out	0x3d, r28	; 61
     702:	c6 01       	movw	r24, r12
     704:	0e 94 dd 03 	call	0x7ba	; 0x7ba <USART_SendString>
		 
		 dtostrf( Z_g, 3, 2, float_val);					
     708:	22 e0       	ldi	r18, 0x02	; 2
     70a:	43 e0       	ldi	r20, 0x03	; 3
     70c:	6f a5       	ldd	r22, Y+47	; 0x2f
     70e:	78 a9       	ldd	r23, Y+48	; 0x30
     710:	89 a9       	ldd	r24, Y+49	; 0x31
     712:	9a a9       	ldd	r25, Y+50	; 0x32
     714:	0e 94 2f 09 	call	0x125e	; 0x125e <dtostrf>
		 sprintf(buffer," Gz = %s%c/s\r\n",float_val,0xF8);	
     718:	1f 92       	push	r1
     71a:	3f 92       	push	r3
     71c:	ff 92       	push	r15
     71e:	ef 92       	push	r14
     720:	bf 92       	push	r11
     722:	af 92       	push	r10
     724:	df 92       	push	r13
     726:	cf 92       	push	r12
     728:	0e 94 79 0a 	call	0x14f2	; 0x14f2 <sprintf>
		 USART_SendString(buffer);						
     72c:	c6 01       	movw	r24, r12
     72e:	0e 94 dd 03 	call	0x7ba	; 0x7ba <USART_SendString>
     732:	9f ef       	ldi	r25, 0xFF	; 255
     734:	23 ed       	ldi	r18, 0xD3	; 211
     736:	80 e3       	ldi	r24, 0x30	; 48
     738:	91 50       	subi	r25, 0x01	; 1
     73a:	20 40       	sbci	r18, 0x00	; 0
     73c:	80 40       	sbci	r24, 0x00	; 0
     73e:	e1 f7       	brne	.-8      	; 0x738 <main+0x244>
     740:	00 c0       	rjmp	.+0      	; 0x742 <main+0x24e>
     742:	00 00       	nop
     744:	0f b6       	in	r0, 0x3f	; 63
     746:	f8 94       	cli
     748:	de bf       	out	0x3e, r29	; 62
     74a:	0f be       	out	0x3f, r0	; 63
     74c:	cd bf       	out	0x3d, r28	; 61
     74e:	09 cf       	rjmp	.-494    	; 0x562 <main+0x6e>

00000750 <USART_Init>:

char USART_RxChar()									/* Data receiving function */
{
	while (!(UCSR0A & (1 << RXC0)));				/* Wait until new data receive */
	return(UDR0);									/* Get and return received data */ 
}
     750:	28 e1       	ldi	r18, 0x18	; 24
     752:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     756:	dc 01       	movw	r26, r24
     758:	cb 01       	movw	r24, r22
     75a:	88 0f       	add	r24, r24
     75c:	99 1f       	adc	r25, r25
     75e:	aa 1f       	adc	r26, r26
     760:	bb 1f       	adc	r27, r27
     762:	88 0f       	add	r24, r24
     764:	99 1f       	adc	r25, r25
     766:	aa 1f       	adc	r26, r26
     768:	bb 1f       	adc	r27, r27
     76a:	9c 01       	movw	r18, r24
     76c:	ad 01       	movw	r20, r26
     76e:	22 0f       	add	r18, r18
     770:	33 1f       	adc	r19, r19
     772:	44 1f       	adc	r20, r20
     774:	55 1f       	adc	r21, r21
     776:	22 0f       	add	r18, r18
     778:	33 1f       	adc	r19, r19
     77a:	44 1f       	adc	r20, r20
     77c:	55 1f       	adc	r21, r21
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	74 e2       	ldi	r23, 0x24	; 36
     782:	84 ef       	ldi	r24, 0xF4	; 244
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0e 94 d6 08 	call	0x11ac	; 0x11ac <__udivmodsi4>
     78a:	8f ef       	ldi	r24, 0xFF	; 255
     78c:	82 0f       	add	r24, r18
     78e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     792:	da 01       	movw	r26, r20
     794:	c9 01       	movw	r24, r18
     796:	01 97       	sbiw	r24, 0x01	; 1
     798:	a1 09       	sbc	r26, r1
     79a:	b1 09       	sbc	r27, r1
     79c:	89 2f       	mov	r24, r25
     79e:	9a 2f       	mov	r25, r26
     7a0:	ab 2f       	mov	r26, r27
     7a2:	bb 27       	eor	r27, r27
     7a4:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     7a8:	08 95       	ret

000007aa <USART_TxChar>:

void USART_TxChar(char data)						/* Data transmitting function */
{
	UDR0 = data;									/* Write data to be transmitting in UDR */
     7aa:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	while (!(UCSR0A & (1<<UDRE0)));					/* Wait until data transmit and buffer get empty */
     7ae:	e0 ec       	ldi	r30, 0xC0	; 192
     7b0:	f0 e0       	ldi	r31, 0x00	; 0
     7b2:	80 81       	ld	r24, Z
     7b4:	85 ff       	sbrs	r24, 5
     7b6:	fd cf       	rjmp	.-6      	; 0x7b2 <USART_TxChar+0x8>
}
     7b8:	08 95       	ret

000007ba <USART_SendString>:

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
     7ba:	cf 93       	push	r28
     7bc:	df 93       	push	r29
     7be:	ec 01       	movw	r28, r24
	int i=0;																	
	while (str[i]!=0)
     7c0:	88 81       	ld	r24, Y
     7c2:	88 23       	and	r24, r24
     7c4:	31 f0       	breq	.+12     	; 0x7d2 <USART_SendString+0x18>
     7c6:	21 96       	adiw	r28, 0x01	; 1
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
     7c8:	0e 94 d5 03 	call	0x7aa	; 0x7aa <USART_TxChar>
}

void USART_SendString(char *str)					/* Send string of USART data function */ 
{
	int i=0;																	
	while (str[i]!=0)
     7cc:	89 91       	ld	r24, Y+
     7ce:	81 11       	cpse	r24, r1
     7d0:	fb cf       	rjmp	.-10     	; 0x7c8 <USART_SendString+0xe>
	{
		USART_TxChar(str[i]);						/* Send each char of string till the NULL */
		i++;
	}
     7d2:	df 91       	pop	r29
     7d4:	cf 91       	pop	r28
     7d6:	08 95       	ret

000007d8 <__divsf3>:
     7d8:	0e 94 00 04 	call	0x800	; 0x800 <__divsf3x>
     7dc:	0c 94 b2 04 	jmp	0x964	; 0x964 <__fp_round>
     7e0:	0e 94 ab 04 	call	0x956	; 0x956 <__fp_pscB>
     7e4:	58 f0       	brcs	.+22     	; 0x7fc <__divsf3+0x24>
     7e6:	0e 94 a4 04 	call	0x948	; 0x948 <__fp_pscA>
     7ea:	40 f0       	brcs	.+16     	; 0x7fc <__divsf3+0x24>
     7ec:	29 f4       	brne	.+10     	; 0x7f8 <__divsf3+0x20>
     7ee:	5f 3f       	cpi	r21, 0xFF	; 255
     7f0:	29 f0       	breq	.+10     	; 0x7fc <__divsf3+0x24>
     7f2:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_inf>
     7f6:	51 11       	cpse	r21, r1
     7f8:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__fp_szero>
     7fc:	0c 94 a1 04 	jmp	0x942	; 0x942 <__fp_nan>

00000800 <__divsf3x>:
     800:	0e 94 c3 04 	call	0x986	; 0x986 <__fp_split3>
     804:	68 f3       	brcs	.-38     	; 0x7e0 <__divsf3+0x8>

00000806 <__divsf3_pse>:
     806:	99 23       	and	r25, r25
     808:	b1 f3       	breq	.-20     	; 0x7f6 <__divsf3+0x1e>
     80a:	55 23       	and	r21, r21
     80c:	91 f3       	breq	.-28     	; 0x7f2 <__divsf3+0x1a>
     80e:	95 1b       	sub	r25, r21
     810:	55 0b       	sbc	r21, r21
     812:	bb 27       	eor	r27, r27
     814:	aa 27       	eor	r26, r26
     816:	62 17       	cp	r22, r18
     818:	73 07       	cpc	r23, r19
     81a:	84 07       	cpc	r24, r20
     81c:	38 f0       	brcs	.+14     	; 0x82c <__divsf3_pse+0x26>
     81e:	9f 5f       	subi	r25, 0xFF	; 255
     820:	5f 4f       	sbci	r21, 0xFF	; 255
     822:	22 0f       	add	r18, r18
     824:	33 1f       	adc	r19, r19
     826:	44 1f       	adc	r20, r20
     828:	aa 1f       	adc	r26, r26
     82a:	a9 f3       	breq	.-22     	; 0x816 <__divsf3_pse+0x10>
     82c:	35 d0       	rcall	.+106    	; 0x898 <__divsf3_pse+0x92>
     82e:	0e 2e       	mov	r0, r30
     830:	3a f0       	brmi	.+14     	; 0x840 <__divsf3_pse+0x3a>
     832:	e0 e8       	ldi	r30, 0x80	; 128
     834:	32 d0       	rcall	.+100    	; 0x89a <__divsf3_pse+0x94>
     836:	91 50       	subi	r25, 0x01	; 1
     838:	50 40       	sbci	r21, 0x00	; 0
     83a:	e6 95       	lsr	r30
     83c:	00 1c       	adc	r0, r0
     83e:	ca f7       	brpl	.-14     	; 0x832 <__divsf3_pse+0x2c>
     840:	2b d0       	rcall	.+86     	; 0x898 <__divsf3_pse+0x92>
     842:	fe 2f       	mov	r31, r30
     844:	29 d0       	rcall	.+82     	; 0x898 <__divsf3_pse+0x92>
     846:	66 0f       	add	r22, r22
     848:	77 1f       	adc	r23, r23
     84a:	88 1f       	adc	r24, r24
     84c:	bb 1f       	adc	r27, r27
     84e:	26 17       	cp	r18, r22
     850:	37 07       	cpc	r19, r23
     852:	48 07       	cpc	r20, r24
     854:	ab 07       	cpc	r26, r27
     856:	b0 e8       	ldi	r27, 0x80	; 128
     858:	09 f0       	breq	.+2      	; 0x85c <__divsf3_pse+0x56>
     85a:	bb 0b       	sbc	r27, r27
     85c:	80 2d       	mov	r24, r0
     85e:	bf 01       	movw	r22, r30
     860:	ff 27       	eor	r31, r31
     862:	93 58       	subi	r25, 0x83	; 131
     864:	5f 4f       	sbci	r21, 0xFF	; 255
     866:	3a f0       	brmi	.+14     	; 0x876 <__divsf3_pse+0x70>
     868:	9e 3f       	cpi	r25, 0xFE	; 254
     86a:	51 05       	cpc	r21, r1
     86c:	78 f0       	brcs	.+30     	; 0x88c <__divsf3_pse+0x86>
     86e:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_inf>
     872:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__fp_szero>
     876:	5f 3f       	cpi	r21, 0xFF	; 255
     878:	e4 f3       	brlt	.-8      	; 0x872 <__divsf3_pse+0x6c>
     87a:	98 3e       	cpi	r25, 0xE8	; 232
     87c:	d4 f3       	brlt	.-12     	; 0x872 <__divsf3_pse+0x6c>
     87e:	86 95       	lsr	r24
     880:	77 95       	ror	r23
     882:	67 95       	ror	r22
     884:	b7 95       	ror	r27
     886:	f7 95       	ror	r31
     888:	9f 5f       	subi	r25, 0xFF	; 255
     88a:	c9 f7       	brne	.-14     	; 0x87e <__divsf3_pse+0x78>
     88c:	88 0f       	add	r24, r24
     88e:	91 1d       	adc	r25, r1
     890:	96 95       	lsr	r25
     892:	87 95       	ror	r24
     894:	97 f9       	bld	r25, 7
     896:	08 95       	ret
     898:	e1 e0       	ldi	r30, 0x01	; 1
     89a:	66 0f       	add	r22, r22
     89c:	77 1f       	adc	r23, r23
     89e:	88 1f       	adc	r24, r24
     8a0:	bb 1f       	adc	r27, r27
     8a2:	62 17       	cp	r22, r18
     8a4:	73 07       	cpc	r23, r19
     8a6:	84 07       	cpc	r24, r20
     8a8:	ba 07       	cpc	r27, r26
     8aa:	20 f0       	brcs	.+8      	; 0x8b4 <__divsf3_pse+0xae>
     8ac:	62 1b       	sub	r22, r18
     8ae:	73 0b       	sbc	r23, r19
     8b0:	84 0b       	sbc	r24, r20
     8b2:	ba 0b       	sbc	r27, r26
     8b4:	ee 1f       	adc	r30, r30
     8b6:	88 f7       	brcc	.-30     	; 0x89a <__divsf3_pse+0x94>
     8b8:	e0 95       	com	r30
     8ba:	08 95       	ret

000008bc <__floatunsisf>:
     8bc:	e8 94       	clt
     8be:	09 c0       	rjmp	.+18     	; 0x8d2 <__floatsisf+0x12>

000008c0 <__floatsisf>:
     8c0:	97 fb       	bst	r25, 7
     8c2:	3e f4       	brtc	.+14     	; 0x8d2 <__floatsisf+0x12>
     8c4:	90 95       	com	r25
     8c6:	80 95       	com	r24
     8c8:	70 95       	com	r23
     8ca:	61 95       	neg	r22
     8cc:	7f 4f       	sbci	r23, 0xFF	; 255
     8ce:	8f 4f       	sbci	r24, 0xFF	; 255
     8d0:	9f 4f       	sbci	r25, 0xFF	; 255
     8d2:	99 23       	and	r25, r25
     8d4:	a9 f0       	breq	.+42     	; 0x900 <__stack+0x1>
     8d6:	f9 2f       	mov	r31, r25
     8d8:	96 e9       	ldi	r25, 0x96	; 150
     8da:	bb 27       	eor	r27, r27
     8dc:	93 95       	inc	r25
     8de:	f6 95       	lsr	r31
     8e0:	87 95       	ror	r24
     8e2:	77 95       	ror	r23
     8e4:	67 95       	ror	r22
     8e6:	b7 95       	ror	r27
     8e8:	f1 11       	cpse	r31, r1
     8ea:	f8 cf       	rjmp	.-16     	; 0x8dc <__floatsisf+0x1c>
     8ec:	fa f4       	brpl	.+62     	; 0x92c <__stack+0x2d>
     8ee:	bb 0f       	add	r27, r27
     8f0:	11 f4       	brne	.+4      	; 0x8f6 <__floatsisf+0x36>
     8f2:	60 ff       	sbrs	r22, 0
     8f4:	1b c0       	rjmp	.+54     	; 0x92c <__stack+0x2d>
     8f6:	6f 5f       	subi	r22, 0xFF	; 255
     8f8:	7f 4f       	sbci	r23, 0xFF	; 255
     8fa:	8f 4f       	sbci	r24, 0xFF	; 255
     8fc:	9f 4f       	sbci	r25, 0xFF	; 255
     8fe:	16 c0       	rjmp	.+44     	; 0x92c <__stack+0x2d>
     900:	88 23       	and	r24, r24
     902:	11 f0       	breq	.+4      	; 0x908 <__stack+0x9>
     904:	96 e9       	ldi	r25, 0x96	; 150
     906:	11 c0       	rjmp	.+34     	; 0x92a <__stack+0x2b>
     908:	77 23       	and	r23, r23
     90a:	21 f0       	breq	.+8      	; 0x914 <__stack+0x15>
     90c:	9e e8       	ldi	r25, 0x8E	; 142
     90e:	87 2f       	mov	r24, r23
     910:	76 2f       	mov	r23, r22
     912:	05 c0       	rjmp	.+10     	; 0x91e <__stack+0x1f>
     914:	66 23       	and	r22, r22
     916:	71 f0       	breq	.+28     	; 0x934 <__stack+0x35>
     918:	96 e8       	ldi	r25, 0x86	; 134
     91a:	86 2f       	mov	r24, r22
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	60 e0       	ldi	r22, 0x00	; 0
     920:	2a f0       	brmi	.+10     	; 0x92c <__stack+0x2d>
     922:	9a 95       	dec	r25
     924:	66 0f       	add	r22, r22
     926:	77 1f       	adc	r23, r23
     928:	88 1f       	adc	r24, r24
     92a:	da f7       	brpl	.-10     	; 0x922 <__stack+0x23>
     92c:	88 0f       	add	r24, r24
     92e:	96 95       	lsr	r25
     930:	87 95       	ror	r24
     932:	97 f9       	bld	r25, 7
     934:	08 95       	ret

00000936 <__fp_inf>:
     936:	97 f9       	bld	r25, 7
     938:	9f 67       	ori	r25, 0x7F	; 127
     93a:	80 e8       	ldi	r24, 0x80	; 128
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	60 e0       	ldi	r22, 0x00	; 0
     940:	08 95       	ret

00000942 <__fp_nan>:
     942:	9f ef       	ldi	r25, 0xFF	; 255
     944:	80 ec       	ldi	r24, 0xC0	; 192
     946:	08 95       	ret

00000948 <__fp_pscA>:
     948:	00 24       	eor	r0, r0
     94a:	0a 94       	dec	r0
     94c:	16 16       	cp	r1, r22
     94e:	17 06       	cpc	r1, r23
     950:	18 06       	cpc	r1, r24
     952:	09 06       	cpc	r0, r25
     954:	08 95       	ret

00000956 <__fp_pscB>:
     956:	00 24       	eor	r0, r0
     958:	0a 94       	dec	r0
     95a:	12 16       	cp	r1, r18
     95c:	13 06       	cpc	r1, r19
     95e:	14 06       	cpc	r1, r20
     960:	05 06       	cpc	r0, r21
     962:	08 95       	ret

00000964 <__fp_round>:
     964:	09 2e       	mov	r0, r25
     966:	03 94       	inc	r0
     968:	00 0c       	add	r0, r0
     96a:	11 f4       	brne	.+4      	; 0x970 <__fp_round+0xc>
     96c:	88 23       	and	r24, r24
     96e:	52 f0       	brmi	.+20     	; 0x984 <__fp_round+0x20>
     970:	bb 0f       	add	r27, r27
     972:	40 f4       	brcc	.+16     	; 0x984 <__fp_round+0x20>
     974:	bf 2b       	or	r27, r31
     976:	11 f4       	brne	.+4      	; 0x97c <__fp_round+0x18>
     978:	60 ff       	sbrs	r22, 0
     97a:	04 c0       	rjmp	.+8      	; 0x984 <__fp_round+0x20>
     97c:	6f 5f       	subi	r22, 0xFF	; 255
     97e:	7f 4f       	sbci	r23, 0xFF	; 255
     980:	8f 4f       	sbci	r24, 0xFF	; 255
     982:	9f 4f       	sbci	r25, 0xFF	; 255
     984:	08 95       	ret

00000986 <__fp_split3>:
     986:	57 fd       	sbrc	r21, 7
     988:	90 58       	subi	r25, 0x80	; 128
     98a:	44 0f       	add	r20, r20
     98c:	55 1f       	adc	r21, r21
     98e:	59 f0       	breq	.+22     	; 0x9a6 <__fp_splitA+0x10>
     990:	5f 3f       	cpi	r21, 0xFF	; 255
     992:	71 f0       	breq	.+28     	; 0x9b0 <__fp_splitA+0x1a>
     994:	47 95       	ror	r20

00000996 <__fp_splitA>:
     996:	88 0f       	add	r24, r24
     998:	97 fb       	bst	r25, 7
     99a:	99 1f       	adc	r25, r25
     99c:	61 f0       	breq	.+24     	; 0x9b6 <__fp_splitA+0x20>
     99e:	9f 3f       	cpi	r25, 0xFF	; 255
     9a0:	79 f0       	breq	.+30     	; 0x9c0 <__fp_splitA+0x2a>
     9a2:	87 95       	ror	r24
     9a4:	08 95       	ret
     9a6:	12 16       	cp	r1, r18
     9a8:	13 06       	cpc	r1, r19
     9aa:	14 06       	cpc	r1, r20
     9ac:	55 1f       	adc	r21, r21
     9ae:	f2 cf       	rjmp	.-28     	; 0x994 <__fp_split3+0xe>
     9b0:	46 95       	lsr	r20
     9b2:	f1 df       	rcall	.-30     	; 0x996 <__fp_splitA>
     9b4:	08 c0       	rjmp	.+16     	; 0x9c6 <__fp_splitA+0x30>
     9b6:	16 16       	cp	r1, r22
     9b8:	17 06       	cpc	r1, r23
     9ba:	18 06       	cpc	r1, r24
     9bc:	99 1f       	adc	r25, r25
     9be:	f1 cf       	rjmp	.-30     	; 0x9a2 <__fp_splitA+0xc>
     9c0:	86 95       	lsr	r24
     9c2:	71 05       	cpc	r23, r1
     9c4:	61 05       	cpc	r22, r1
     9c6:	08 94       	sec
     9c8:	08 95       	ret

000009ca <__fp_zero>:
     9ca:	e8 94       	clt

000009cc <__fp_szero>:
     9cc:	bb 27       	eor	r27, r27
     9ce:	66 27       	eor	r22, r22
     9d0:	77 27       	eor	r23, r23
     9d2:	cb 01       	movw	r24, r22
     9d4:	97 f9       	bld	r25, 7
     9d6:	08 95       	ret

000009d8 <__mulsf3>:
     9d8:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__mulsf3x>
     9dc:	0c 94 b2 04 	jmp	0x964	; 0x964 <__fp_round>
     9e0:	0e 94 a4 04 	call	0x948	; 0x948 <__fp_pscA>
     9e4:	38 f0       	brcs	.+14     	; 0x9f4 <__mulsf3+0x1c>
     9e6:	0e 94 ab 04 	call	0x956	; 0x956 <__fp_pscB>
     9ea:	20 f0       	brcs	.+8      	; 0x9f4 <__mulsf3+0x1c>
     9ec:	95 23       	and	r25, r21
     9ee:	11 f0       	breq	.+4      	; 0x9f4 <__mulsf3+0x1c>
     9f0:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_inf>
     9f4:	0c 94 a1 04 	jmp	0x942	; 0x942 <__fp_nan>
     9f8:	11 24       	eor	r1, r1
     9fa:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__fp_szero>

000009fe <__mulsf3x>:
     9fe:	0e 94 c3 04 	call	0x986	; 0x986 <__fp_split3>
     a02:	70 f3       	brcs	.-36     	; 0x9e0 <__mulsf3+0x8>

00000a04 <__mulsf3_pse>:
     a04:	95 9f       	mul	r25, r21
     a06:	c1 f3       	breq	.-16     	; 0x9f8 <__mulsf3+0x20>
     a08:	95 0f       	add	r25, r21
     a0a:	50 e0       	ldi	r21, 0x00	; 0
     a0c:	55 1f       	adc	r21, r21
     a0e:	62 9f       	mul	r22, r18
     a10:	f0 01       	movw	r30, r0
     a12:	72 9f       	mul	r23, r18
     a14:	bb 27       	eor	r27, r27
     a16:	f0 0d       	add	r31, r0
     a18:	b1 1d       	adc	r27, r1
     a1a:	63 9f       	mul	r22, r19
     a1c:	aa 27       	eor	r26, r26
     a1e:	f0 0d       	add	r31, r0
     a20:	b1 1d       	adc	r27, r1
     a22:	aa 1f       	adc	r26, r26
     a24:	64 9f       	mul	r22, r20
     a26:	66 27       	eor	r22, r22
     a28:	b0 0d       	add	r27, r0
     a2a:	a1 1d       	adc	r26, r1
     a2c:	66 1f       	adc	r22, r22
     a2e:	82 9f       	mul	r24, r18
     a30:	22 27       	eor	r18, r18
     a32:	b0 0d       	add	r27, r0
     a34:	a1 1d       	adc	r26, r1
     a36:	62 1f       	adc	r22, r18
     a38:	73 9f       	mul	r23, r19
     a3a:	b0 0d       	add	r27, r0
     a3c:	a1 1d       	adc	r26, r1
     a3e:	62 1f       	adc	r22, r18
     a40:	83 9f       	mul	r24, r19
     a42:	a0 0d       	add	r26, r0
     a44:	61 1d       	adc	r22, r1
     a46:	22 1f       	adc	r18, r18
     a48:	74 9f       	mul	r23, r20
     a4a:	33 27       	eor	r19, r19
     a4c:	a0 0d       	add	r26, r0
     a4e:	61 1d       	adc	r22, r1
     a50:	23 1f       	adc	r18, r19
     a52:	84 9f       	mul	r24, r20
     a54:	60 0d       	add	r22, r0
     a56:	21 1d       	adc	r18, r1
     a58:	82 2f       	mov	r24, r18
     a5a:	76 2f       	mov	r23, r22
     a5c:	6a 2f       	mov	r22, r26
     a5e:	11 24       	eor	r1, r1
     a60:	9f 57       	subi	r25, 0x7F	; 127
     a62:	50 40       	sbci	r21, 0x00	; 0
     a64:	9a f0       	brmi	.+38     	; 0xa8c <__mulsf3_pse+0x88>
     a66:	f1 f0       	breq	.+60     	; 0xaa4 <__mulsf3_pse+0xa0>
     a68:	88 23       	and	r24, r24
     a6a:	4a f0       	brmi	.+18     	; 0xa7e <__mulsf3_pse+0x7a>
     a6c:	ee 0f       	add	r30, r30
     a6e:	ff 1f       	adc	r31, r31
     a70:	bb 1f       	adc	r27, r27
     a72:	66 1f       	adc	r22, r22
     a74:	77 1f       	adc	r23, r23
     a76:	88 1f       	adc	r24, r24
     a78:	91 50       	subi	r25, 0x01	; 1
     a7a:	50 40       	sbci	r21, 0x00	; 0
     a7c:	a9 f7       	brne	.-22     	; 0xa68 <__mulsf3_pse+0x64>
     a7e:	9e 3f       	cpi	r25, 0xFE	; 254
     a80:	51 05       	cpc	r21, r1
     a82:	80 f0       	brcs	.+32     	; 0xaa4 <__mulsf3_pse+0xa0>
     a84:	0c 94 9b 04 	jmp	0x936	; 0x936 <__fp_inf>
     a88:	0c 94 e6 04 	jmp	0x9cc	; 0x9cc <__fp_szero>
     a8c:	5f 3f       	cpi	r21, 0xFF	; 255
     a8e:	e4 f3       	brlt	.-8      	; 0xa88 <__mulsf3_pse+0x84>
     a90:	98 3e       	cpi	r25, 0xE8	; 232
     a92:	d4 f3       	brlt	.-12     	; 0xa88 <__mulsf3_pse+0x84>
     a94:	86 95       	lsr	r24
     a96:	77 95       	ror	r23
     a98:	67 95       	ror	r22
     a9a:	b7 95       	ror	r27
     a9c:	f7 95       	ror	r31
     a9e:	e7 95       	ror	r30
     aa0:	9f 5f       	subi	r25, 0xFF	; 255
     aa2:	c1 f7       	brne	.-16     	; 0xa94 <__mulsf3_pse+0x90>
     aa4:	fe 2b       	or	r31, r30
     aa6:	88 0f       	add	r24, r24
     aa8:	91 1d       	adc	r25, r1
     aaa:	96 95       	lsr	r25
     aac:	87 95       	ror	r24
     aae:	97 f9       	bld	r25, 7
     ab0:	08 95       	ret

00000ab2 <vfprintf>:
     ab2:	a0 e1       	ldi	r26, 0x10	; 16
     ab4:	b0 e0       	ldi	r27, 0x00	; 0
     ab6:	ef e5       	ldi	r30, 0x5F	; 95
     ab8:	f5 e0       	ldi	r31, 0x05	; 5
     aba:	0c 94 f8 08 	jmp	0x11f0	; 0x11f0 <__prologue_saves__>
     abe:	7c 01       	movw	r14, r24
     ac0:	1b 01       	movw	r2, r22
     ac2:	6a 01       	movw	r12, r20
     ac4:	fc 01       	movw	r30, r24
     ac6:	17 82       	std	Z+7, r1	; 0x07
     ac8:	16 82       	std	Z+6, r1	; 0x06
     aca:	83 81       	ldd	r24, Z+3	; 0x03
     acc:	81 ff       	sbrs	r24, 1
     ace:	44 c3       	rjmp	.+1672   	; 0x1158 <vfprintf+0x6a6>
     ad0:	9e 01       	movw	r18, r28
     ad2:	2f 5f       	subi	r18, 0xFF	; 255
     ad4:	3f 4f       	sbci	r19, 0xFF	; 255
     ad6:	39 01       	movw	r6, r18
     ad8:	f7 01       	movw	r30, r14
     ada:	93 81       	ldd	r25, Z+3	; 0x03
     adc:	f1 01       	movw	r30, r2
     ade:	93 fd       	sbrc	r25, 3
     ae0:	85 91       	lpm	r24, Z+
     ae2:	93 ff       	sbrs	r25, 3
     ae4:	81 91       	ld	r24, Z+
     ae6:	1f 01       	movw	r2, r30
     ae8:	88 23       	and	r24, r24
     aea:	09 f4       	brne	.+2      	; 0xaee <vfprintf+0x3c>
     aec:	31 c3       	rjmp	.+1634   	; 0x1150 <vfprintf+0x69e>
     aee:	85 32       	cpi	r24, 0x25	; 37
     af0:	39 f4       	brne	.+14     	; 0xb00 <vfprintf+0x4e>
     af2:	93 fd       	sbrc	r25, 3
     af4:	85 91       	lpm	r24, Z+
     af6:	93 ff       	sbrs	r25, 3
     af8:	81 91       	ld	r24, Z+
     afa:	1f 01       	movw	r2, r30
     afc:	85 32       	cpi	r24, 0x25	; 37
     afe:	39 f4       	brne	.+14     	; 0xb0e <vfprintf+0x5c>
     b00:	b7 01       	movw	r22, r14
     b02:	90 e0       	ldi	r25, 0x00	; 0
     b04:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     b08:	56 01       	movw	r10, r12
     b0a:	65 01       	movw	r12, r10
     b0c:	e5 cf       	rjmp	.-54     	; 0xad8 <vfprintf+0x26>
     b0e:	10 e0       	ldi	r17, 0x00	; 0
     b10:	51 2c       	mov	r5, r1
     b12:	91 2c       	mov	r9, r1
     b14:	ff e1       	ldi	r31, 0x1F	; 31
     b16:	f9 15       	cp	r31, r9
     b18:	d8 f0       	brcs	.+54     	; 0xb50 <vfprintf+0x9e>
     b1a:	8b 32       	cpi	r24, 0x2B	; 43
     b1c:	79 f0       	breq	.+30     	; 0xb3c <vfprintf+0x8a>
     b1e:	38 f4       	brcc	.+14     	; 0xb2e <vfprintf+0x7c>
     b20:	80 32       	cpi	r24, 0x20	; 32
     b22:	79 f0       	breq	.+30     	; 0xb42 <vfprintf+0x90>
     b24:	83 32       	cpi	r24, 0x23	; 35
     b26:	a1 f4       	brne	.+40     	; 0xb50 <vfprintf+0x9e>
     b28:	f9 2d       	mov	r31, r9
     b2a:	f0 61       	ori	r31, 0x10	; 16
     b2c:	2e c0       	rjmp	.+92     	; 0xb8a <vfprintf+0xd8>
     b2e:	8d 32       	cpi	r24, 0x2D	; 45
     b30:	61 f0       	breq	.+24     	; 0xb4a <vfprintf+0x98>
     b32:	80 33       	cpi	r24, 0x30	; 48
     b34:	69 f4       	brne	.+26     	; 0xb50 <vfprintf+0x9e>
     b36:	29 2d       	mov	r18, r9
     b38:	21 60       	ori	r18, 0x01	; 1
     b3a:	2d c0       	rjmp	.+90     	; 0xb96 <vfprintf+0xe4>
     b3c:	39 2d       	mov	r19, r9
     b3e:	32 60       	ori	r19, 0x02	; 2
     b40:	93 2e       	mov	r9, r19
     b42:	89 2d       	mov	r24, r9
     b44:	84 60       	ori	r24, 0x04	; 4
     b46:	98 2e       	mov	r9, r24
     b48:	2a c0       	rjmp	.+84     	; 0xb9e <vfprintf+0xec>
     b4a:	e9 2d       	mov	r30, r9
     b4c:	e8 60       	ori	r30, 0x08	; 8
     b4e:	15 c0       	rjmp	.+42     	; 0xb7a <vfprintf+0xc8>
     b50:	97 fc       	sbrc	r9, 7
     b52:	2d c0       	rjmp	.+90     	; 0xbae <vfprintf+0xfc>
     b54:	20 ed       	ldi	r18, 0xD0	; 208
     b56:	28 0f       	add	r18, r24
     b58:	2a 30       	cpi	r18, 0x0A	; 10
     b5a:	88 f4       	brcc	.+34     	; 0xb7e <vfprintf+0xcc>
     b5c:	96 fe       	sbrs	r9, 6
     b5e:	06 c0       	rjmp	.+12     	; 0xb6c <vfprintf+0xba>
     b60:	3a e0       	ldi	r19, 0x0A	; 10
     b62:	13 9f       	mul	r17, r19
     b64:	20 0d       	add	r18, r0
     b66:	11 24       	eor	r1, r1
     b68:	12 2f       	mov	r17, r18
     b6a:	19 c0       	rjmp	.+50     	; 0xb9e <vfprintf+0xec>
     b6c:	8a e0       	ldi	r24, 0x0A	; 10
     b6e:	58 9e       	mul	r5, r24
     b70:	20 0d       	add	r18, r0
     b72:	11 24       	eor	r1, r1
     b74:	52 2e       	mov	r5, r18
     b76:	e9 2d       	mov	r30, r9
     b78:	e0 62       	ori	r30, 0x20	; 32
     b7a:	9e 2e       	mov	r9, r30
     b7c:	10 c0       	rjmp	.+32     	; 0xb9e <vfprintf+0xec>
     b7e:	8e 32       	cpi	r24, 0x2E	; 46
     b80:	31 f4       	brne	.+12     	; 0xb8e <vfprintf+0xdc>
     b82:	96 fc       	sbrc	r9, 6
     b84:	e5 c2       	rjmp	.+1482   	; 0x1150 <vfprintf+0x69e>
     b86:	f9 2d       	mov	r31, r9
     b88:	f0 64       	ori	r31, 0x40	; 64
     b8a:	9f 2e       	mov	r9, r31
     b8c:	08 c0       	rjmp	.+16     	; 0xb9e <vfprintf+0xec>
     b8e:	8c 36       	cpi	r24, 0x6C	; 108
     b90:	21 f4       	brne	.+8      	; 0xb9a <vfprintf+0xe8>
     b92:	29 2d       	mov	r18, r9
     b94:	20 68       	ori	r18, 0x80	; 128
     b96:	92 2e       	mov	r9, r18
     b98:	02 c0       	rjmp	.+4      	; 0xb9e <vfprintf+0xec>
     b9a:	88 36       	cpi	r24, 0x68	; 104
     b9c:	41 f4       	brne	.+16     	; 0xbae <vfprintf+0xfc>
     b9e:	f1 01       	movw	r30, r2
     ba0:	93 fd       	sbrc	r25, 3
     ba2:	85 91       	lpm	r24, Z+
     ba4:	93 ff       	sbrs	r25, 3
     ba6:	81 91       	ld	r24, Z+
     ba8:	1f 01       	movw	r2, r30
     baa:	81 11       	cpse	r24, r1
     bac:	b3 cf       	rjmp	.-154    	; 0xb14 <vfprintf+0x62>
     bae:	9b eb       	ldi	r25, 0xBB	; 187
     bb0:	98 0f       	add	r25, r24
     bb2:	93 30       	cpi	r25, 0x03	; 3
     bb4:	20 f4       	brcc	.+8      	; 0xbbe <vfprintf+0x10c>
     bb6:	99 2d       	mov	r25, r9
     bb8:	90 61       	ori	r25, 0x10	; 16
     bba:	80 5e       	subi	r24, 0xE0	; 224
     bbc:	07 c0       	rjmp	.+14     	; 0xbcc <vfprintf+0x11a>
     bbe:	9b e9       	ldi	r25, 0x9B	; 155
     bc0:	98 0f       	add	r25, r24
     bc2:	93 30       	cpi	r25, 0x03	; 3
     bc4:	08 f0       	brcs	.+2      	; 0xbc8 <vfprintf+0x116>
     bc6:	66 c1       	rjmp	.+716    	; 0xe94 <vfprintf+0x3e2>
     bc8:	99 2d       	mov	r25, r9
     bca:	9f 7e       	andi	r25, 0xEF	; 239
     bcc:	96 ff       	sbrs	r25, 6
     bce:	16 e0       	ldi	r17, 0x06	; 6
     bd0:	9f 73       	andi	r25, 0x3F	; 63
     bd2:	99 2e       	mov	r9, r25
     bd4:	85 36       	cpi	r24, 0x65	; 101
     bd6:	19 f4       	brne	.+6      	; 0xbde <vfprintf+0x12c>
     bd8:	90 64       	ori	r25, 0x40	; 64
     bda:	99 2e       	mov	r9, r25
     bdc:	08 c0       	rjmp	.+16     	; 0xbee <vfprintf+0x13c>
     bde:	86 36       	cpi	r24, 0x66	; 102
     be0:	21 f4       	brne	.+8      	; 0xbea <vfprintf+0x138>
     be2:	39 2f       	mov	r19, r25
     be4:	30 68       	ori	r19, 0x80	; 128
     be6:	93 2e       	mov	r9, r19
     be8:	02 c0       	rjmp	.+4      	; 0xbee <vfprintf+0x13c>
     bea:	11 11       	cpse	r17, r1
     bec:	11 50       	subi	r17, 0x01	; 1
     bee:	97 fe       	sbrs	r9, 7
     bf0:	07 c0       	rjmp	.+14     	; 0xc00 <vfprintf+0x14e>
     bf2:	1c 33       	cpi	r17, 0x3C	; 60
     bf4:	50 f4       	brcc	.+20     	; 0xc0a <vfprintf+0x158>
     bf6:	44 24       	eor	r4, r4
     bf8:	43 94       	inc	r4
     bfa:	41 0e       	add	r4, r17
     bfc:	27 e0       	ldi	r18, 0x07	; 7
     bfe:	0b c0       	rjmp	.+22     	; 0xc16 <vfprintf+0x164>
     c00:	18 30       	cpi	r17, 0x08	; 8
     c02:	38 f0       	brcs	.+14     	; 0xc12 <vfprintf+0x160>
     c04:	27 e0       	ldi	r18, 0x07	; 7
     c06:	17 e0       	ldi	r17, 0x07	; 7
     c08:	05 c0       	rjmp	.+10     	; 0xc14 <vfprintf+0x162>
     c0a:	27 e0       	ldi	r18, 0x07	; 7
     c0c:	9c e3       	ldi	r25, 0x3C	; 60
     c0e:	49 2e       	mov	r4, r25
     c10:	02 c0       	rjmp	.+4      	; 0xc16 <vfprintf+0x164>
     c12:	21 2f       	mov	r18, r17
     c14:	41 2c       	mov	r4, r1
     c16:	56 01       	movw	r10, r12
     c18:	84 e0       	ldi	r24, 0x04	; 4
     c1a:	a8 0e       	add	r10, r24
     c1c:	b1 1c       	adc	r11, r1
     c1e:	f6 01       	movw	r30, r12
     c20:	60 81       	ld	r22, Z
     c22:	71 81       	ldd	r23, Z+1	; 0x01
     c24:	82 81       	ldd	r24, Z+2	; 0x02
     c26:	93 81       	ldd	r25, Z+3	; 0x03
     c28:	04 2d       	mov	r16, r4
     c2a:	a3 01       	movw	r20, r6
     c2c:	0e 94 4f 09 	call	0x129e	; 0x129e <__ftoa_engine>
     c30:	6c 01       	movw	r12, r24
     c32:	f9 81       	ldd	r31, Y+1	; 0x01
     c34:	fc 87       	std	Y+12, r31	; 0x0c
     c36:	f0 ff       	sbrs	r31, 0
     c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x18c>
     c3a:	f3 ff       	sbrs	r31, 3
     c3c:	06 c0       	rjmp	.+12     	; 0xc4a <vfprintf+0x198>
     c3e:	91 fc       	sbrc	r9, 1
     c40:	06 c0       	rjmp	.+12     	; 0xc4e <vfprintf+0x19c>
     c42:	92 fe       	sbrs	r9, 2
     c44:	06 c0       	rjmp	.+12     	; 0xc52 <vfprintf+0x1a0>
     c46:	00 e2       	ldi	r16, 0x20	; 32
     c48:	05 c0       	rjmp	.+10     	; 0xc54 <vfprintf+0x1a2>
     c4a:	0d e2       	ldi	r16, 0x2D	; 45
     c4c:	03 c0       	rjmp	.+6      	; 0xc54 <vfprintf+0x1a2>
     c4e:	0b e2       	ldi	r16, 0x2B	; 43
     c50:	01 c0       	rjmp	.+2      	; 0xc54 <vfprintf+0x1a2>
     c52:	00 e0       	ldi	r16, 0x00	; 0
     c54:	8c 85       	ldd	r24, Y+12	; 0x0c
     c56:	8c 70       	andi	r24, 0x0C	; 12
     c58:	19 f0       	breq	.+6      	; 0xc60 <vfprintf+0x1ae>
     c5a:	01 11       	cpse	r16, r1
     c5c:	5a c2       	rjmp	.+1204   	; 0x1112 <vfprintf+0x660>
     c5e:	9b c2       	rjmp	.+1334   	; 0x1196 <vfprintf+0x6e4>
     c60:	97 fe       	sbrs	r9, 7
     c62:	10 c0       	rjmp	.+32     	; 0xc84 <vfprintf+0x1d2>
     c64:	4c 0c       	add	r4, r12
     c66:	fc 85       	ldd	r31, Y+12	; 0x0c
     c68:	f4 ff       	sbrs	r31, 4
     c6a:	04 c0       	rjmp	.+8      	; 0xc74 <vfprintf+0x1c2>
     c6c:	8a 81       	ldd	r24, Y+2	; 0x02
     c6e:	81 33       	cpi	r24, 0x31	; 49
     c70:	09 f4       	brne	.+2      	; 0xc74 <vfprintf+0x1c2>
     c72:	4a 94       	dec	r4
     c74:	14 14       	cp	r1, r4
     c76:	74 f5       	brge	.+92     	; 0xcd4 <vfprintf+0x222>
     c78:	28 e0       	ldi	r18, 0x08	; 8
     c7a:	24 15       	cp	r18, r4
     c7c:	78 f5       	brcc	.+94     	; 0xcdc <vfprintf+0x22a>
     c7e:	88 e0       	ldi	r24, 0x08	; 8
     c80:	48 2e       	mov	r4, r24
     c82:	2c c0       	rjmp	.+88     	; 0xcdc <vfprintf+0x22a>
     c84:	96 fc       	sbrc	r9, 6
     c86:	2a c0       	rjmp	.+84     	; 0xcdc <vfprintf+0x22a>
     c88:	81 2f       	mov	r24, r17
     c8a:	90 e0       	ldi	r25, 0x00	; 0
     c8c:	8c 15       	cp	r24, r12
     c8e:	9d 05       	cpc	r25, r13
     c90:	9c f0       	brlt	.+38     	; 0xcb8 <vfprintf+0x206>
     c92:	3c ef       	ldi	r19, 0xFC	; 252
     c94:	c3 16       	cp	r12, r19
     c96:	3f ef       	ldi	r19, 0xFF	; 255
     c98:	d3 06       	cpc	r13, r19
     c9a:	74 f0       	brlt	.+28     	; 0xcb8 <vfprintf+0x206>
     c9c:	89 2d       	mov	r24, r9
     c9e:	80 68       	ori	r24, 0x80	; 128
     ca0:	98 2e       	mov	r9, r24
     ca2:	0a c0       	rjmp	.+20     	; 0xcb8 <vfprintf+0x206>
     ca4:	e2 e0       	ldi	r30, 0x02	; 2
     ca6:	f0 e0       	ldi	r31, 0x00	; 0
     ca8:	ec 0f       	add	r30, r28
     caa:	fd 1f       	adc	r31, r29
     cac:	e1 0f       	add	r30, r17
     cae:	f1 1d       	adc	r31, r1
     cb0:	80 81       	ld	r24, Z
     cb2:	80 33       	cpi	r24, 0x30	; 48
     cb4:	19 f4       	brne	.+6      	; 0xcbc <vfprintf+0x20a>
     cb6:	11 50       	subi	r17, 0x01	; 1
     cb8:	11 11       	cpse	r17, r1
     cba:	f4 cf       	rjmp	.-24     	; 0xca4 <vfprintf+0x1f2>
     cbc:	97 fe       	sbrs	r9, 7
     cbe:	0e c0       	rjmp	.+28     	; 0xcdc <vfprintf+0x22a>
     cc0:	44 24       	eor	r4, r4
     cc2:	43 94       	inc	r4
     cc4:	41 0e       	add	r4, r17
     cc6:	81 2f       	mov	r24, r17
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	c8 16       	cp	r12, r24
     ccc:	d9 06       	cpc	r13, r25
     cce:	2c f4       	brge	.+10     	; 0xcda <vfprintf+0x228>
     cd0:	1c 19       	sub	r17, r12
     cd2:	04 c0       	rjmp	.+8      	; 0xcdc <vfprintf+0x22a>
     cd4:	44 24       	eor	r4, r4
     cd6:	43 94       	inc	r4
     cd8:	01 c0       	rjmp	.+2      	; 0xcdc <vfprintf+0x22a>
     cda:	10 e0       	ldi	r17, 0x00	; 0
     cdc:	97 fe       	sbrs	r9, 7
     cde:	06 c0       	rjmp	.+12     	; 0xcec <vfprintf+0x23a>
     ce0:	1c 14       	cp	r1, r12
     ce2:	1d 04       	cpc	r1, r13
     ce4:	34 f4       	brge	.+12     	; 0xcf2 <vfprintf+0x240>
     ce6:	c6 01       	movw	r24, r12
     ce8:	01 96       	adiw	r24, 0x01	; 1
     cea:	05 c0       	rjmp	.+10     	; 0xcf6 <vfprintf+0x244>
     cec:	85 e0       	ldi	r24, 0x05	; 5
     cee:	90 e0       	ldi	r25, 0x00	; 0
     cf0:	02 c0       	rjmp	.+4      	; 0xcf6 <vfprintf+0x244>
     cf2:	81 e0       	ldi	r24, 0x01	; 1
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	01 11       	cpse	r16, r1
     cf8:	01 96       	adiw	r24, 0x01	; 1
     cfa:	11 23       	and	r17, r17
     cfc:	31 f0       	breq	.+12     	; 0xd0a <vfprintf+0x258>
     cfe:	21 2f       	mov	r18, r17
     d00:	30 e0       	ldi	r19, 0x00	; 0
     d02:	2f 5f       	subi	r18, 0xFF	; 255
     d04:	3f 4f       	sbci	r19, 0xFF	; 255
     d06:	82 0f       	add	r24, r18
     d08:	93 1f       	adc	r25, r19
     d0a:	25 2d       	mov	r18, r5
     d0c:	30 e0       	ldi	r19, 0x00	; 0
     d0e:	82 17       	cp	r24, r18
     d10:	93 07       	cpc	r25, r19
     d12:	14 f4       	brge	.+4      	; 0xd18 <vfprintf+0x266>
     d14:	58 1a       	sub	r5, r24
     d16:	01 c0       	rjmp	.+2      	; 0xd1a <vfprintf+0x268>
     d18:	51 2c       	mov	r5, r1
     d1a:	89 2d       	mov	r24, r9
     d1c:	89 70       	andi	r24, 0x09	; 9
     d1e:	49 f4       	brne	.+18     	; 0xd32 <vfprintf+0x280>
     d20:	55 20       	and	r5, r5
     d22:	39 f0       	breq	.+14     	; 0xd32 <vfprintf+0x280>
     d24:	b7 01       	movw	r22, r14
     d26:	80 e2       	ldi	r24, 0x20	; 32
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     d2e:	5a 94       	dec	r5
     d30:	f7 cf       	rjmp	.-18     	; 0xd20 <vfprintf+0x26e>
     d32:	00 23       	and	r16, r16
     d34:	29 f0       	breq	.+10     	; 0xd40 <vfprintf+0x28e>
     d36:	b7 01       	movw	r22, r14
     d38:	80 2f       	mov	r24, r16
     d3a:	90 e0       	ldi	r25, 0x00	; 0
     d3c:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     d40:	93 fc       	sbrc	r9, 3
     d42:	09 c0       	rjmp	.+18     	; 0xd56 <vfprintf+0x2a4>
     d44:	55 20       	and	r5, r5
     d46:	39 f0       	breq	.+14     	; 0xd56 <vfprintf+0x2a4>
     d48:	b7 01       	movw	r22, r14
     d4a:	80 e3       	ldi	r24, 0x30	; 48
     d4c:	90 e0       	ldi	r25, 0x00	; 0
     d4e:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     d52:	5a 94       	dec	r5
     d54:	f7 cf       	rjmp	.-18     	; 0xd44 <vfprintf+0x292>
     d56:	97 fe       	sbrs	r9, 7
     d58:	4c c0       	rjmp	.+152    	; 0xdf2 <vfprintf+0x340>
     d5a:	46 01       	movw	r8, r12
     d5c:	d7 fe       	sbrs	r13, 7
     d5e:	02 c0       	rjmp	.+4      	; 0xd64 <vfprintf+0x2b2>
     d60:	81 2c       	mov	r8, r1
     d62:	91 2c       	mov	r9, r1
     d64:	c6 01       	movw	r24, r12
     d66:	88 19       	sub	r24, r8
     d68:	99 09       	sbc	r25, r9
     d6a:	f3 01       	movw	r30, r6
     d6c:	e8 0f       	add	r30, r24
     d6e:	f9 1f       	adc	r31, r25
     d70:	fe 87       	std	Y+14, r31	; 0x0e
     d72:	ed 87       	std	Y+13, r30	; 0x0d
     d74:	96 01       	movw	r18, r12
     d76:	24 19       	sub	r18, r4
     d78:	31 09       	sbc	r19, r1
     d7a:	38 8b       	std	Y+16, r19	; 0x10
     d7c:	2f 87       	std	Y+15, r18	; 0x0f
     d7e:	01 2f       	mov	r16, r17
     d80:	10 e0       	ldi	r17, 0x00	; 0
     d82:	11 95       	neg	r17
     d84:	01 95       	neg	r16
     d86:	11 09       	sbc	r17, r1
     d88:	3f ef       	ldi	r19, 0xFF	; 255
     d8a:	83 16       	cp	r8, r19
     d8c:	93 06       	cpc	r9, r19
     d8e:	29 f4       	brne	.+10     	; 0xd9a <vfprintf+0x2e8>
     d90:	b7 01       	movw	r22, r14
     d92:	8e e2       	ldi	r24, 0x2E	; 46
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     d9a:	c8 14       	cp	r12, r8
     d9c:	d9 04       	cpc	r13, r9
     d9e:	4c f0       	brlt	.+18     	; 0xdb2 <vfprintf+0x300>
     da0:	8f 85       	ldd	r24, Y+15	; 0x0f
     da2:	98 89       	ldd	r25, Y+16	; 0x10
     da4:	88 15       	cp	r24, r8
     da6:	99 05       	cpc	r25, r9
     da8:	24 f4       	brge	.+8      	; 0xdb2 <vfprintf+0x300>
     daa:	ed 85       	ldd	r30, Y+13	; 0x0d
     dac:	fe 85       	ldd	r31, Y+14	; 0x0e
     dae:	81 81       	ldd	r24, Z+1	; 0x01
     db0:	01 c0       	rjmp	.+2      	; 0xdb4 <vfprintf+0x302>
     db2:	80 e3       	ldi	r24, 0x30	; 48
     db4:	f1 e0       	ldi	r31, 0x01	; 1
     db6:	8f 1a       	sub	r8, r31
     db8:	91 08       	sbc	r9, r1
     dba:	2d 85       	ldd	r18, Y+13	; 0x0d
     dbc:	3e 85       	ldd	r19, Y+14	; 0x0e
     dbe:	2f 5f       	subi	r18, 0xFF	; 255
     dc0:	3f 4f       	sbci	r19, 0xFF	; 255
     dc2:	3e 87       	std	Y+14, r19	; 0x0e
     dc4:	2d 87       	std	Y+13, r18	; 0x0d
     dc6:	80 16       	cp	r8, r16
     dc8:	91 06       	cpc	r9, r17
     dca:	2c f0       	brlt	.+10     	; 0xdd6 <vfprintf+0x324>
     dcc:	b7 01       	movw	r22, r14
     dce:	90 e0       	ldi	r25, 0x00	; 0
     dd0:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     dd4:	d9 cf       	rjmp	.-78     	; 0xd88 <vfprintf+0x2d6>
     dd6:	c8 14       	cp	r12, r8
     dd8:	d9 04       	cpc	r13, r9
     dda:	41 f4       	brne	.+16     	; 0xdec <vfprintf+0x33a>
     ddc:	9a 81       	ldd	r25, Y+2	; 0x02
     dde:	96 33       	cpi	r25, 0x36	; 54
     de0:	20 f4       	brcc	.+8      	; 0xdea <vfprintf+0x338>
     de2:	95 33       	cpi	r25, 0x35	; 53
     de4:	19 f4       	brne	.+6      	; 0xdec <vfprintf+0x33a>
     de6:	3c 85       	ldd	r19, Y+12	; 0x0c
     de8:	34 ff       	sbrs	r19, 4
     dea:	81 e3       	ldi	r24, 0x31	; 49
     dec:	b7 01       	movw	r22, r14
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	4e c0       	rjmp	.+156    	; 0xe8e <vfprintf+0x3dc>
     df2:	8a 81       	ldd	r24, Y+2	; 0x02
     df4:	81 33       	cpi	r24, 0x31	; 49
     df6:	19 f0       	breq	.+6      	; 0xdfe <vfprintf+0x34c>
     df8:	9c 85       	ldd	r25, Y+12	; 0x0c
     dfa:	9f 7e       	andi	r25, 0xEF	; 239
     dfc:	9c 87       	std	Y+12, r25	; 0x0c
     dfe:	b7 01       	movw	r22, r14
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e06:	11 11       	cpse	r17, r1
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <vfprintf+0x362>
     e0a:	94 fc       	sbrc	r9, 4
     e0c:	18 c0       	rjmp	.+48     	; 0xe3e <vfprintf+0x38c>
     e0e:	85 e6       	ldi	r24, 0x65	; 101
     e10:	90 e0       	ldi	r25, 0x00	; 0
     e12:	17 c0       	rjmp	.+46     	; 0xe42 <vfprintf+0x390>
     e14:	b7 01       	movw	r22, r14
     e16:	8e e2       	ldi	r24, 0x2E	; 46
     e18:	90 e0       	ldi	r25, 0x00	; 0
     e1a:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e1e:	1e 5f       	subi	r17, 0xFE	; 254
     e20:	82 e0       	ldi	r24, 0x02	; 2
     e22:	01 e0       	ldi	r16, 0x01	; 1
     e24:	08 0f       	add	r16, r24
     e26:	f3 01       	movw	r30, r6
     e28:	e8 0f       	add	r30, r24
     e2a:	f1 1d       	adc	r31, r1
     e2c:	80 81       	ld	r24, Z
     e2e:	b7 01       	movw	r22, r14
     e30:	90 e0       	ldi	r25, 0x00	; 0
     e32:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e36:	80 2f       	mov	r24, r16
     e38:	01 13       	cpse	r16, r17
     e3a:	f3 cf       	rjmp	.-26     	; 0xe22 <vfprintf+0x370>
     e3c:	e6 cf       	rjmp	.-52     	; 0xe0a <vfprintf+0x358>
     e3e:	85 e4       	ldi	r24, 0x45	; 69
     e40:	90 e0       	ldi	r25, 0x00	; 0
     e42:	b7 01       	movw	r22, r14
     e44:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e48:	d7 fc       	sbrc	r13, 7
     e4a:	06 c0       	rjmp	.+12     	; 0xe58 <vfprintf+0x3a6>
     e4c:	c1 14       	cp	r12, r1
     e4e:	d1 04       	cpc	r13, r1
     e50:	41 f4       	brne	.+16     	; 0xe62 <vfprintf+0x3b0>
     e52:	ec 85       	ldd	r30, Y+12	; 0x0c
     e54:	e4 ff       	sbrs	r30, 4
     e56:	05 c0       	rjmp	.+10     	; 0xe62 <vfprintf+0x3b0>
     e58:	d1 94       	neg	r13
     e5a:	c1 94       	neg	r12
     e5c:	d1 08       	sbc	r13, r1
     e5e:	8d e2       	ldi	r24, 0x2D	; 45
     e60:	01 c0       	rjmp	.+2      	; 0xe64 <vfprintf+0x3b2>
     e62:	8b e2       	ldi	r24, 0x2B	; 43
     e64:	b7 01       	movw	r22, r14
     e66:	90 e0       	ldi	r25, 0x00	; 0
     e68:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e6c:	80 e3       	ldi	r24, 0x30	; 48
     e6e:	2a e0       	ldi	r18, 0x0A	; 10
     e70:	c2 16       	cp	r12, r18
     e72:	d1 04       	cpc	r13, r1
     e74:	2c f0       	brlt	.+10     	; 0xe80 <vfprintf+0x3ce>
     e76:	8f 5f       	subi	r24, 0xFF	; 255
     e78:	fa e0       	ldi	r31, 0x0A	; 10
     e7a:	cf 1a       	sub	r12, r31
     e7c:	d1 08       	sbc	r13, r1
     e7e:	f7 cf       	rjmp	.-18     	; 0xe6e <vfprintf+0x3bc>
     e80:	b7 01       	movw	r22, r14
     e82:	90 e0       	ldi	r25, 0x00	; 0
     e84:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e88:	b7 01       	movw	r22, r14
     e8a:	c6 01       	movw	r24, r12
     e8c:	c0 96       	adiw	r24, 0x30	; 48
     e8e:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     e92:	54 c1       	rjmp	.+680    	; 0x113c <vfprintf+0x68a>
     e94:	83 36       	cpi	r24, 0x63	; 99
     e96:	31 f0       	breq	.+12     	; 0xea4 <vfprintf+0x3f2>
     e98:	83 37       	cpi	r24, 0x73	; 115
     e9a:	79 f0       	breq	.+30     	; 0xeba <vfprintf+0x408>
     e9c:	83 35       	cpi	r24, 0x53	; 83
     e9e:	09 f0       	breq	.+2      	; 0xea2 <vfprintf+0x3f0>
     ea0:	56 c0       	rjmp	.+172    	; 0xf4e <vfprintf+0x49c>
     ea2:	20 c0       	rjmp	.+64     	; 0xee4 <vfprintf+0x432>
     ea4:	56 01       	movw	r10, r12
     ea6:	32 e0       	ldi	r19, 0x02	; 2
     ea8:	a3 0e       	add	r10, r19
     eaa:	b1 1c       	adc	r11, r1
     eac:	f6 01       	movw	r30, r12
     eae:	80 81       	ld	r24, Z
     eb0:	89 83       	std	Y+1, r24	; 0x01
     eb2:	01 e0       	ldi	r16, 0x01	; 1
     eb4:	10 e0       	ldi	r17, 0x00	; 0
     eb6:	63 01       	movw	r12, r6
     eb8:	12 c0       	rjmp	.+36     	; 0xede <vfprintf+0x42c>
     eba:	56 01       	movw	r10, r12
     ebc:	f2 e0       	ldi	r31, 0x02	; 2
     ebe:	af 0e       	add	r10, r31
     ec0:	b1 1c       	adc	r11, r1
     ec2:	f6 01       	movw	r30, r12
     ec4:	c0 80       	ld	r12, Z
     ec6:	d1 80       	ldd	r13, Z+1	; 0x01
     ec8:	96 fe       	sbrs	r9, 6
     eca:	03 c0       	rjmp	.+6      	; 0xed2 <vfprintf+0x420>
     ecc:	61 2f       	mov	r22, r17
     ece:	70 e0       	ldi	r23, 0x00	; 0
     ed0:	02 c0       	rjmp	.+4      	; 0xed6 <vfprintf+0x424>
     ed2:	6f ef       	ldi	r22, 0xFF	; 255
     ed4:	7f ef       	ldi	r23, 0xFF	; 255
     ed6:	c6 01       	movw	r24, r12
     ed8:	0e 94 32 0a 	call	0x1464	; 0x1464 <strnlen>
     edc:	8c 01       	movw	r16, r24
     ede:	f9 2d       	mov	r31, r9
     ee0:	ff 77       	andi	r31, 0x7F	; 127
     ee2:	14 c0       	rjmp	.+40     	; 0xf0c <vfprintf+0x45a>
     ee4:	56 01       	movw	r10, r12
     ee6:	22 e0       	ldi	r18, 0x02	; 2
     ee8:	a2 0e       	add	r10, r18
     eea:	b1 1c       	adc	r11, r1
     eec:	f6 01       	movw	r30, r12
     eee:	c0 80       	ld	r12, Z
     ef0:	d1 80       	ldd	r13, Z+1	; 0x01
     ef2:	96 fe       	sbrs	r9, 6
     ef4:	03 c0       	rjmp	.+6      	; 0xefc <vfprintf+0x44a>
     ef6:	61 2f       	mov	r22, r17
     ef8:	70 e0       	ldi	r23, 0x00	; 0
     efa:	02 c0       	rjmp	.+4      	; 0xf00 <vfprintf+0x44e>
     efc:	6f ef       	ldi	r22, 0xFF	; 255
     efe:	7f ef       	ldi	r23, 0xFF	; 255
     f00:	c6 01       	movw	r24, r12
     f02:	0e 94 27 0a 	call	0x144e	; 0x144e <strnlen_P>
     f06:	8c 01       	movw	r16, r24
     f08:	f9 2d       	mov	r31, r9
     f0a:	f0 68       	ori	r31, 0x80	; 128
     f0c:	9f 2e       	mov	r9, r31
     f0e:	f3 fd       	sbrc	r31, 3
     f10:	1a c0       	rjmp	.+52     	; 0xf46 <vfprintf+0x494>
     f12:	85 2d       	mov	r24, r5
     f14:	90 e0       	ldi	r25, 0x00	; 0
     f16:	08 17       	cp	r16, r24
     f18:	19 07       	cpc	r17, r25
     f1a:	a8 f4       	brcc	.+42     	; 0xf46 <vfprintf+0x494>
     f1c:	b7 01       	movw	r22, r14
     f1e:	80 e2       	ldi	r24, 0x20	; 32
     f20:	90 e0       	ldi	r25, 0x00	; 0
     f22:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     f26:	5a 94       	dec	r5
     f28:	f4 cf       	rjmp	.-24     	; 0xf12 <vfprintf+0x460>
     f2a:	f6 01       	movw	r30, r12
     f2c:	97 fc       	sbrc	r9, 7
     f2e:	85 91       	lpm	r24, Z+
     f30:	97 fe       	sbrs	r9, 7
     f32:	81 91       	ld	r24, Z+
     f34:	6f 01       	movw	r12, r30
     f36:	b7 01       	movw	r22, r14
     f38:	90 e0       	ldi	r25, 0x00	; 0
     f3a:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
     f3e:	51 10       	cpse	r5, r1
     f40:	5a 94       	dec	r5
     f42:	01 50       	subi	r16, 0x01	; 1
     f44:	11 09       	sbc	r17, r1
     f46:	01 15       	cp	r16, r1
     f48:	11 05       	cpc	r17, r1
     f4a:	79 f7       	brne	.-34     	; 0xf2a <vfprintf+0x478>
     f4c:	f7 c0       	rjmp	.+494    	; 0x113c <vfprintf+0x68a>
     f4e:	84 36       	cpi	r24, 0x64	; 100
     f50:	11 f0       	breq	.+4      	; 0xf56 <vfprintf+0x4a4>
     f52:	89 36       	cpi	r24, 0x69	; 105
     f54:	61 f5       	brne	.+88     	; 0xfae <vfprintf+0x4fc>
     f56:	56 01       	movw	r10, r12
     f58:	97 fe       	sbrs	r9, 7
     f5a:	09 c0       	rjmp	.+18     	; 0xf6e <vfprintf+0x4bc>
     f5c:	24 e0       	ldi	r18, 0x04	; 4
     f5e:	a2 0e       	add	r10, r18
     f60:	b1 1c       	adc	r11, r1
     f62:	f6 01       	movw	r30, r12
     f64:	60 81       	ld	r22, Z
     f66:	71 81       	ldd	r23, Z+1	; 0x01
     f68:	82 81       	ldd	r24, Z+2	; 0x02
     f6a:	93 81       	ldd	r25, Z+3	; 0x03
     f6c:	0a c0       	rjmp	.+20     	; 0xf82 <vfprintf+0x4d0>
     f6e:	f2 e0       	ldi	r31, 0x02	; 2
     f70:	af 0e       	add	r10, r31
     f72:	b1 1c       	adc	r11, r1
     f74:	f6 01       	movw	r30, r12
     f76:	60 81       	ld	r22, Z
     f78:	71 81       	ldd	r23, Z+1	; 0x01
     f7a:	07 2e       	mov	r0, r23
     f7c:	00 0c       	add	r0, r0
     f7e:	88 0b       	sbc	r24, r24
     f80:	99 0b       	sbc	r25, r25
     f82:	f9 2d       	mov	r31, r9
     f84:	ff 76       	andi	r31, 0x6F	; 111
     f86:	9f 2e       	mov	r9, r31
     f88:	97 ff       	sbrs	r25, 7
     f8a:	09 c0       	rjmp	.+18     	; 0xf9e <vfprintf+0x4ec>
     f8c:	90 95       	com	r25
     f8e:	80 95       	com	r24
     f90:	70 95       	com	r23
     f92:	61 95       	neg	r22
     f94:	7f 4f       	sbci	r23, 0xFF	; 255
     f96:	8f 4f       	sbci	r24, 0xFF	; 255
     f98:	9f 4f       	sbci	r25, 0xFF	; 255
     f9a:	f0 68       	ori	r31, 0x80	; 128
     f9c:	9f 2e       	mov	r9, r31
     f9e:	2a e0       	ldi	r18, 0x0A	; 10
     fa0:	30 e0       	ldi	r19, 0x00	; 0
     fa2:	a3 01       	movw	r20, r6
     fa4:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__ultoa_invert>
     fa8:	c8 2e       	mov	r12, r24
     faa:	c6 18       	sub	r12, r6
     fac:	3f c0       	rjmp	.+126    	; 0x102c <vfprintf+0x57a>
     fae:	09 2d       	mov	r16, r9
     fb0:	85 37       	cpi	r24, 0x75	; 117
     fb2:	21 f4       	brne	.+8      	; 0xfbc <vfprintf+0x50a>
     fb4:	0f 7e       	andi	r16, 0xEF	; 239
     fb6:	2a e0       	ldi	r18, 0x0A	; 10
     fb8:	30 e0       	ldi	r19, 0x00	; 0
     fba:	1d c0       	rjmp	.+58     	; 0xff6 <vfprintf+0x544>
     fbc:	09 7f       	andi	r16, 0xF9	; 249
     fbe:	8f 36       	cpi	r24, 0x6F	; 111
     fc0:	91 f0       	breq	.+36     	; 0xfe6 <vfprintf+0x534>
     fc2:	18 f4       	brcc	.+6      	; 0xfca <vfprintf+0x518>
     fc4:	88 35       	cpi	r24, 0x58	; 88
     fc6:	59 f0       	breq	.+22     	; 0xfde <vfprintf+0x52c>
     fc8:	c3 c0       	rjmp	.+390    	; 0x1150 <vfprintf+0x69e>
     fca:	80 37       	cpi	r24, 0x70	; 112
     fcc:	19 f0       	breq	.+6      	; 0xfd4 <vfprintf+0x522>
     fce:	88 37       	cpi	r24, 0x78	; 120
     fd0:	11 f0       	breq	.+4      	; 0xfd6 <vfprintf+0x524>
     fd2:	be c0       	rjmp	.+380    	; 0x1150 <vfprintf+0x69e>
     fd4:	00 61       	ori	r16, 0x10	; 16
     fd6:	04 ff       	sbrs	r16, 4
     fd8:	09 c0       	rjmp	.+18     	; 0xfec <vfprintf+0x53a>
     fda:	04 60       	ori	r16, 0x04	; 4
     fdc:	07 c0       	rjmp	.+14     	; 0xfec <vfprintf+0x53a>
     fde:	94 fe       	sbrs	r9, 4
     fe0:	08 c0       	rjmp	.+16     	; 0xff2 <vfprintf+0x540>
     fe2:	06 60       	ori	r16, 0x06	; 6
     fe4:	06 c0       	rjmp	.+12     	; 0xff2 <vfprintf+0x540>
     fe6:	28 e0       	ldi	r18, 0x08	; 8
     fe8:	30 e0       	ldi	r19, 0x00	; 0
     fea:	05 c0       	rjmp	.+10     	; 0xff6 <vfprintf+0x544>
     fec:	20 e1       	ldi	r18, 0x10	; 16
     fee:	30 e0       	ldi	r19, 0x00	; 0
     ff0:	02 c0       	rjmp	.+4      	; 0xff6 <vfprintf+0x544>
     ff2:	20 e1       	ldi	r18, 0x10	; 16
     ff4:	32 e0       	ldi	r19, 0x02	; 2
     ff6:	56 01       	movw	r10, r12
     ff8:	07 ff       	sbrs	r16, 7
     ffa:	09 c0       	rjmp	.+18     	; 0x100e <vfprintf+0x55c>
     ffc:	84 e0       	ldi	r24, 0x04	; 4
     ffe:	a8 0e       	add	r10, r24
    1000:	b1 1c       	adc	r11, r1
    1002:	f6 01       	movw	r30, r12
    1004:	60 81       	ld	r22, Z
    1006:	71 81       	ldd	r23, Z+1	; 0x01
    1008:	82 81       	ldd	r24, Z+2	; 0x02
    100a:	93 81       	ldd	r25, Z+3	; 0x03
    100c:	08 c0       	rjmp	.+16     	; 0x101e <vfprintf+0x56c>
    100e:	f2 e0       	ldi	r31, 0x02	; 2
    1010:	af 0e       	add	r10, r31
    1012:	b1 1c       	adc	r11, r1
    1014:	f6 01       	movw	r30, r12
    1016:	60 81       	ld	r22, Z
    1018:	71 81       	ldd	r23, Z+1	; 0x01
    101a:	80 e0       	ldi	r24, 0x00	; 0
    101c:	90 e0       	ldi	r25, 0x00	; 0
    101e:	a3 01       	movw	r20, r6
    1020:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__ultoa_invert>
    1024:	c8 2e       	mov	r12, r24
    1026:	c6 18       	sub	r12, r6
    1028:	0f 77       	andi	r16, 0x7F	; 127
    102a:	90 2e       	mov	r9, r16
    102c:	96 fe       	sbrs	r9, 6
    102e:	0b c0       	rjmp	.+22     	; 0x1046 <vfprintf+0x594>
    1030:	09 2d       	mov	r16, r9
    1032:	0e 7f       	andi	r16, 0xFE	; 254
    1034:	c1 16       	cp	r12, r17
    1036:	50 f4       	brcc	.+20     	; 0x104c <vfprintf+0x59a>
    1038:	94 fe       	sbrs	r9, 4
    103a:	0a c0       	rjmp	.+20     	; 0x1050 <vfprintf+0x59e>
    103c:	92 fc       	sbrc	r9, 2
    103e:	08 c0       	rjmp	.+16     	; 0x1050 <vfprintf+0x59e>
    1040:	09 2d       	mov	r16, r9
    1042:	0e 7e       	andi	r16, 0xEE	; 238
    1044:	05 c0       	rjmp	.+10     	; 0x1050 <vfprintf+0x59e>
    1046:	dc 2c       	mov	r13, r12
    1048:	09 2d       	mov	r16, r9
    104a:	03 c0       	rjmp	.+6      	; 0x1052 <vfprintf+0x5a0>
    104c:	dc 2c       	mov	r13, r12
    104e:	01 c0       	rjmp	.+2      	; 0x1052 <vfprintf+0x5a0>
    1050:	d1 2e       	mov	r13, r17
    1052:	04 ff       	sbrs	r16, 4
    1054:	0d c0       	rjmp	.+26     	; 0x1070 <vfprintf+0x5be>
    1056:	fe 01       	movw	r30, r28
    1058:	ec 0d       	add	r30, r12
    105a:	f1 1d       	adc	r31, r1
    105c:	80 81       	ld	r24, Z
    105e:	80 33       	cpi	r24, 0x30	; 48
    1060:	11 f4       	brne	.+4      	; 0x1066 <vfprintf+0x5b4>
    1062:	09 7e       	andi	r16, 0xE9	; 233
    1064:	09 c0       	rjmp	.+18     	; 0x1078 <vfprintf+0x5c6>
    1066:	02 ff       	sbrs	r16, 2
    1068:	06 c0       	rjmp	.+12     	; 0x1076 <vfprintf+0x5c4>
    106a:	d3 94       	inc	r13
    106c:	d3 94       	inc	r13
    106e:	04 c0       	rjmp	.+8      	; 0x1078 <vfprintf+0x5c6>
    1070:	80 2f       	mov	r24, r16
    1072:	86 78       	andi	r24, 0x86	; 134
    1074:	09 f0       	breq	.+2      	; 0x1078 <vfprintf+0x5c6>
    1076:	d3 94       	inc	r13
    1078:	03 fd       	sbrc	r16, 3
    107a:	11 c0       	rjmp	.+34     	; 0x109e <vfprintf+0x5ec>
    107c:	00 ff       	sbrs	r16, 0
    107e:	06 c0       	rjmp	.+12     	; 0x108c <vfprintf+0x5da>
    1080:	1c 2d       	mov	r17, r12
    1082:	d5 14       	cp	r13, r5
    1084:	80 f4       	brcc	.+32     	; 0x10a6 <vfprintf+0x5f4>
    1086:	15 0d       	add	r17, r5
    1088:	1d 19       	sub	r17, r13
    108a:	0d c0       	rjmp	.+26     	; 0x10a6 <vfprintf+0x5f4>
    108c:	d5 14       	cp	r13, r5
    108e:	58 f4       	brcc	.+22     	; 0x10a6 <vfprintf+0x5f4>
    1090:	b7 01       	movw	r22, r14
    1092:	80 e2       	ldi	r24, 0x20	; 32
    1094:	90 e0       	ldi	r25, 0x00	; 0
    1096:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    109a:	d3 94       	inc	r13
    109c:	f7 cf       	rjmp	.-18     	; 0x108c <vfprintf+0x5da>
    109e:	d5 14       	cp	r13, r5
    10a0:	10 f4       	brcc	.+4      	; 0x10a6 <vfprintf+0x5f4>
    10a2:	5d 18       	sub	r5, r13
    10a4:	01 c0       	rjmp	.+2      	; 0x10a8 <vfprintf+0x5f6>
    10a6:	51 2c       	mov	r5, r1
    10a8:	04 ff       	sbrs	r16, 4
    10aa:	10 c0       	rjmp	.+32     	; 0x10cc <vfprintf+0x61a>
    10ac:	b7 01       	movw	r22, r14
    10ae:	80 e3       	ldi	r24, 0x30	; 48
    10b0:	90 e0       	ldi	r25, 0x00	; 0
    10b2:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    10b6:	02 ff       	sbrs	r16, 2
    10b8:	17 c0       	rjmp	.+46     	; 0x10e8 <vfprintf+0x636>
    10ba:	01 fd       	sbrc	r16, 1
    10bc:	03 c0       	rjmp	.+6      	; 0x10c4 <vfprintf+0x612>
    10be:	88 e7       	ldi	r24, 0x78	; 120
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	02 c0       	rjmp	.+4      	; 0x10c8 <vfprintf+0x616>
    10c4:	88 e5       	ldi	r24, 0x58	; 88
    10c6:	90 e0       	ldi	r25, 0x00	; 0
    10c8:	b7 01       	movw	r22, r14
    10ca:	0c c0       	rjmp	.+24     	; 0x10e4 <vfprintf+0x632>
    10cc:	80 2f       	mov	r24, r16
    10ce:	86 78       	andi	r24, 0x86	; 134
    10d0:	59 f0       	breq	.+22     	; 0x10e8 <vfprintf+0x636>
    10d2:	01 ff       	sbrs	r16, 1
    10d4:	02 c0       	rjmp	.+4      	; 0x10da <vfprintf+0x628>
    10d6:	8b e2       	ldi	r24, 0x2B	; 43
    10d8:	01 c0       	rjmp	.+2      	; 0x10dc <vfprintf+0x62a>
    10da:	80 e2       	ldi	r24, 0x20	; 32
    10dc:	07 fd       	sbrc	r16, 7
    10de:	8d e2       	ldi	r24, 0x2D	; 45
    10e0:	b7 01       	movw	r22, r14
    10e2:	90 e0       	ldi	r25, 0x00	; 0
    10e4:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    10e8:	c1 16       	cp	r12, r17
    10ea:	38 f4       	brcc	.+14     	; 0x10fa <vfprintf+0x648>
    10ec:	b7 01       	movw	r22, r14
    10ee:	80 e3       	ldi	r24, 0x30	; 48
    10f0:	90 e0       	ldi	r25, 0x00	; 0
    10f2:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    10f6:	11 50       	subi	r17, 0x01	; 1
    10f8:	f7 cf       	rjmp	.-18     	; 0x10e8 <vfprintf+0x636>
    10fa:	ca 94       	dec	r12
    10fc:	f3 01       	movw	r30, r6
    10fe:	ec 0d       	add	r30, r12
    1100:	f1 1d       	adc	r31, r1
    1102:	80 81       	ld	r24, Z
    1104:	b7 01       	movw	r22, r14
    1106:	90 e0       	ldi	r25, 0x00	; 0
    1108:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    110c:	c1 10       	cpse	r12, r1
    110e:	f5 cf       	rjmp	.-22     	; 0x10fa <vfprintf+0x648>
    1110:	15 c0       	rjmp	.+42     	; 0x113c <vfprintf+0x68a>
    1112:	f4 e0       	ldi	r31, 0x04	; 4
    1114:	f5 15       	cp	r31, r5
    1116:	60 f5       	brcc	.+88     	; 0x1170 <vfprintf+0x6be>
    1118:	84 e0       	ldi	r24, 0x04	; 4
    111a:	58 1a       	sub	r5, r24
    111c:	93 fe       	sbrs	r9, 3
    111e:	1f c0       	rjmp	.+62     	; 0x115e <vfprintf+0x6ac>
    1120:	01 11       	cpse	r16, r1
    1122:	27 c0       	rjmp	.+78     	; 0x1172 <vfprintf+0x6c0>
    1124:	2c 85       	ldd	r18, Y+12	; 0x0c
    1126:	23 ff       	sbrs	r18, 3
    1128:	2a c0       	rjmp	.+84     	; 0x117e <vfprintf+0x6cc>
    112a:	04 eb       	ldi	r16, 0xB4	; 180
    112c:	10 e0       	ldi	r17, 0x00	; 0
    112e:	39 2d       	mov	r19, r9
    1130:	30 71       	andi	r19, 0x10	; 16
    1132:	93 2e       	mov	r9, r19
    1134:	f8 01       	movw	r30, r16
    1136:	84 91       	lpm	r24, Z
    1138:	81 11       	cpse	r24, r1
    113a:	24 c0       	rjmp	.+72     	; 0x1184 <vfprintf+0x6d2>
    113c:	55 20       	and	r5, r5
    113e:	09 f4       	brne	.+2      	; 0x1142 <vfprintf+0x690>
    1140:	e4 cc       	rjmp	.-1592   	; 0xb0a <vfprintf+0x58>
    1142:	b7 01       	movw	r22, r14
    1144:	80 e2       	ldi	r24, 0x20	; 32
    1146:	90 e0       	ldi	r25, 0x00	; 0
    1148:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    114c:	5a 94       	dec	r5
    114e:	f6 cf       	rjmp	.-20     	; 0x113c <vfprintf+0x68a>
    1150:	f7 01       	movw	r30, r14
    1152:	86 81       	ldd	r24, Z+6	; 0x06
    1154:	97 81       	ldd	r25, Z+7	; 0x07
    1156:	26 c0       	rjmp	.+76     	; 0x11a4 <vfprintf+0x6f2>
    1158:	8f ef       	ldi	r24, 0xFF	; 255
    115a:	9f ef       	ldi	r25, 0xFF	; 255
    115c:	23 c0       	rjmp	.+70     	; 0x11a4 <vfprintf+0x6f2>
    115e:	b7 01       	movw	r22, r14
    1160:	80 e2       	ldi	r24, 0x20	; 32
    1162:	90 e0       	ldi	r25, 0x00	; 0
    1164:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    1168:	5a 94       	dec	r5
    116a:	51 10       	cpse	r5, r1
    116c:	f8 cf       	rjmp	.-16     	; 0x115e <vfprintf+0x6ac>
    116e:	d8 cf       	rjmp	.-80     	; 0x1120 <vfprintf+0x66e>
    1170:	51 2c       	mov	r5, r1
    1172:	b7 01       	movw	r22, r14
    1174:	80 2f       	mov	r24, r16
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    117c:	d3 cf       	rjmp	.-90     	; 0x1124 <vfprintf+0x672>
    117e:	08 eb       	ldi	r16, 0xB8	; 184
    1180:	10 e0       	ldi	r17, 0x00	; 0
    1182:	d5 cf       	rjmp	.-86     	; 0x112e <vfprintf+0x67c>
    1184:	91 10       	cpse	r9, r1
    1186:	80 52       	subi	r24, 0x20	; 32
    1188:	b7 01       	movw	r22, r14
    118a:	90 e0       	ldi	r25, 0x00	; 0
    118c:	0e 94 3d 0a 	call	0x147a	; 0x147a <fputc>
    1190:	0f 5f       	subi	r16, 0xFF	; 255
    1192:	1f 4f       	sbci	r17, 0xFF	; 255
    1194:	cf cf       	rjmp	.-98     	; 0x1134 <vfprintf+0x682>
    1196:	23 e0       	ldi	r18, 0x03	; 3
    1198:	25 15       	cp	r18, r5
    119a:	10 f4       	brcc	.+4      	; 0x11a0 <vfprintf+0x6ee>
    119c:	83 e0       	ldi	r24, 0x03	; 3
    119e:	bd cf       	rjmp	.-134    	; 0x111a <vfprintf+0x668>
    11a0:	51 2c       	mov	r5, r1
    11a2:	c0 cf       	rjmp	.-128    	; 0x1124 <vfprintf+0x672>
    11a4:	60 96       	adiw	r28, 0x10	; 16
    11a6:	e2 e1       	ldi	r30, 0x12	; 18
    11a8:	0c 94 14 09 	jmp	0x1228	; 0x1228 <__epilogue_restores__>

000011ac <__udivmodsi4>:
    11ac:	a1 e2       	ldi	r26, 0x21	; 33
    11ae:	1a 2e       	mov	r1, r26
    11b0:	aa 1b       	sub	r26, r26
    11b2:	bb 1b       	sub	r27, r27
    11b4:	fd 01       	movw	r30, r26
    11b6:	0d c0       	rjmp	.+26     	; 0x11d2 <__udivmodsi4_ep>

000011b8 <__udivmodsi4_loop>:
    11b8:	aa 1f       	adc	r26, r26
    11ba:	bb 1f       	adc	r27, r27
    11bc:	ee 1f       	adc	r30, r30
    11be:	ff 1f       	adc	r31, r31
    11c0:	a2 17       	cp	r26, r18
    11c2:	b3 07       	cpc	r27, r19
    11c4:	e4 07       	cpc	r30, r20
    11c6:	f5 07       	cpc	r31, r21
    11c8:	20 f0       	brcs	.+8      	; 0x11d2 <__udivmodsi4_ep>
    11ca:	a2 1b       	sub	r26, r18
    11cc:	b3 0b       	sbc	r27, r19
    11ce:	e4 0b       	sbc	r30, r20
    11d0:	f5 0b       	sbc	r31, r21

000011d2 <__udivmodsi4_ep>:
    11d2:	66 1f       	adc	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	88 1f       	adc	r24, r24
    11d8:	99 1f       	adc	r25, r25
    11da:	1a 94       	dec	r1
    11dc:	69 f7       	brne	.-38     	; 0x11b8 <__udivmodsi4_loop>
    11de:	60 95       	com	r22
    11e0:	70 95       	com	r23
    11e2:	80 95       	com	r24
    11e4:	90 95       	com	r25
    11e6:	9b 01       	movw	r18, r22
    11e8:	ac 01       	movw	r20, r24
    11ea:	bd 01       	movw	r22, r26
    11ec:	cf 01       	movw	r24, r30
    11ee:	08 95       	ret

000011f0 <__prologue_saves__>:
    11f0:	2f 92       	push	r2
    11f2:	3f 92       	push	r3
    11f4:	4f 92       	push	r4
    11f6:	5f 92       	push	r5
    11f8:	6f 92       	push	r6
    11fa:	7f 92       	push	r7
    11fc:	8f 92       	push	r8
    11fe:	9f 92       	push	r9
    1200:	af 92       	push	r10
    1202:	bf 92       	push	r11
    1204:	cf 92       	push	r12
    1206:	df 92       	push	r13
    1208:	ef 92       	push	r14
    120a:	ff 92       	push	r15
    120c:	0f 93       	push	r16
    120e:	1f 93       	push	r17
    1210:	cf 93       	push	r28
    1212:	df 93       	push	r29
    1214:	cd b7       	in	r28, 0x3d	; 61
    1216:	de b7       	in	r29, 0x3e	; 62
    1218:	ca 1b       	sub	r28, r26
    121a:	db 0b       	sbc	r29, r27
    121c:	0f b6       	in	r0, 0x3f	; 63
    121e:	f8 94       	cli
    1220:	de bf       	out	0x3e, r29	; 62
    1222:	0f be       	out	0x3f, r0	; 63
    1224:	cd bf       	out	0x3d, r28	; 61
    1226:	09 94       	ijmp

00001228 <__epilogue_restores__>:
    1228:	2a 88       	ldd	r2, Y+18	; 0x12
    122a:	39 88       	ldd	r3, Y+17	; 0x11
    122c:	48 88       	ldd	r4, Y+16	; 0x10
    122e:	5f 84       	ldd	r5, Y+15	; 0x0f
    1230:	6e 84       	ldd	r6, Y+14	; 0x0e
    1232:	7d 84       	ldd	r7, Y+13	; 0x0d
    1234:	8c 84       	ldd	r8, Y+12	; 0x0c
    1236:	9b 84       	ldd	r9, Y+11	; 0x0b
    1238:	aa 84       	ldd	r10, Y+10	; 0x0a
    123a:	b9 84       	ldd	r11, Y+9	; 0x09
    123c:	c8 84       	ldd	r12, Y+8	; 0x08
    123e:	df 80       	ldd	r13, Y+7	; 0x07
    1240:	ee 80       	ldd	r14, Y+6	; 0x06
    1242:	fd 80       	ldd	r15, Y+5	; 0x05
    1244:	0c 81       	ldd	r16, Y+4	; 0x04
    1246:	1b 81       	ldd	r17, Y+3	; 0x03
    1248:	aa 81       	ldd	r26, Y+2	; 0x02
    124a:	b9 81       	ldd	r27, Y+1	; 0x01
    124c:	ce 0f       	add	r28, r30
    124e:	d1 1d       	adc	r29, r1
    1250:	0f b6       	in	r0, 0x3f	; 63
    1252:	f8 94       	cli
    1254:	de bf       	out	0x3e, r29	; 62
    1256:	0f be       	out	0x3f, r0	; 63
    1258:	cd bf       	out	0x3d, r28	; 61
    125a:	ed 01       	movw	r28, r26
    125c:	08 95       	ret

0000125e <dtostrf>:
    125e:	ef 92       	push	r14
    1260:	0f 93       	push	r16
    1262:	1f 93       	push	r17
    1264:	cf 93       	push	r28
    1266:	df 93       	push	r29
    1268:	e8 01       	movw	r28, r16
    126a:	47 fd       	sbrc	r20, 7
    126c:	02 c0       	rjmp	.+4      	; 0x1272 <dtostrf+0x14>
    126e:	34 e0       	ldi	r19, 0x04	; 4
    1270:	01 c0       	rjmp	.+2      	; 0x1274 <dtostrf+0x16>
    1272:	34 e1       	ldi	r19, 0x14	; 20
    1274:	04 2e       	mov	r0, r20
    1276:	00 0c       	add	r0, r0
    1278:	55 0b       	sbc	r21, r21
    127a:	57 ff       	sbrs	r21, 7
    127c:	03 c0       	rjmp	.+6      	; 0x1284 <dtostrf+0x26>
    127e:	51 95       	neg	r21
    1280:	41 95       	neg	r20
    1282:	51 09       	sbc	r21, r1
    1284:	e3 2e       	mov	r14, r19
    1286:	02 2f       	mov	r16, r18
    1288:	24 2f       	mov	r18, r20
    128a:	ae 01       	movw	r20, r28
    128c:	0e 94 f9 0a 	call	0x15f2	; 0x15f2 <dtoa_prf>
    1290:	ce 01       	movw	r24, r28
    1292:	df 91       	pop	r29
    1294:	cf 91       	pop	r28
    1296:	1f 91       	pop	r17
    1298:	0f 91       	pop	r16
    129a:	ef 90       	pop	r14
    129c:	08 95       	ret

0000129e <__ftoa_engine>:
    129e:	28 30       	cpi	r18, 0x08	; 8
    12a0:	08 f0       	brcs	.+2      	; 0x12a4 <__ftoa_engine+0x6>
    12a2:	27 e0       	ldi	r18, 0x07	; 7
    12a4:	33 27       	eor	r19, r19
    12a6:	da 01       	movw	r26, r20
    12a8:	99 0f       	add	r25, r25
    12aa:	31 1d       	adc	r19, r1
    12ac:	87 fd       	sbrc	r24, 7
    12ae:	91 60       	ori	r25, 0x01	; 1
    12b0:	00 96       	adiw	r24, 0x00	; 0
    12b2:	61 05       	cpc	r22, r1
    12b4:	71 05       	cpc	r23, r1
    12b6:	39 f4       	brne	.+14     	; 0x12c6 <__ftoa_engine+0x28>
    12b8:	32 60       	ori	r19, 0x02	; 2
    12ba:	2e 5f       	subi	r18, 0xFE	; 254
    12bc:	3d 93       	st	X+, r19
    12be:	30 e3       	ldi	r19, 0x30	; 48
    12c0:	2a 95       	dec	r18
    12c2:	e1 f7       	brne	.-8      	; 0x12bc <__ftoa_engine+0x1e>
    12c4:	08 95       	ret
    12c6:	9f 3f       	cpi	r25, 0xFF	; 255
    12c8:	30 f0       	brcs	.+12     	; 0x12d6 <__ftoa_engine+0x38>
    12ca:	80 38       	cpi	r24, 0x80	; 128
    12cc:	71 05       	cpc	r23, r1
    12ce:	61 05       	cpc	r22, r1
    12d0:	09 f0       	breq	.+2      	; 0x12d4 <__ftoa_engine+0x36>
    12d2:	3c 5f       	subi	r19, 0xFC	; 252
    12d4:	3c 5f       	subi	r19, 0xFC	; 252
    12d6:	3d 93       	st	X+, r19
    12d8:	91 30       	cpi	r25, 0x01	; 1
    12da:	08 f0       	brcs	.+2      	; 0x12de <__ftoa_engine+0x40>
    12dc:	80 68       	ori	r24, 0x80	; 128
    12de:	91 1d       	adc	r25, r1
    12e0:	df 93       	push	r29
    12e2:	cf 93       	push	r28
    12e4:	1f 93       	push	r17
    12e6:	0f 93       	push	r16
    12e8:	ff 92       	push	r15
    12ea:	ef 92       	push	r14
    12ec:	19 2f       	mov	r17, r25
    12ee:	98 7f       	andi	r25, 0xF8	; 248
    12f0:	96 95       	lsr	r25
    12f2:	e9 2f       	mov	r30, r25
    12f4:	96 95       	lsr	r25
    12f6:	96 95       	lsr	r25
    12f8:	e9 0f       	add	r30, r25
    12fa:	ff 27       	eor	r31, r31
    12fc:	ea 5e       	subi	r30, 0xEA	; 234
    12fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1300:	99 27       	eor	r25, r25
    1302:	33 27       	eor	r19, r19
    1304:	ee 24       	eor	r14, r14
    1306:	ff 24       	eor	r15, r15
    1308:	a7 01       	movw	r20, r14
    130a:	e7 01       	movw	r28, r14
    130c:	05 90       	lpm	r0, Z+
    130e:	08 94       	sec
    1310:	07 94       	ror	r0
    1312:	28 f4       	brcc	.+10     	; 0x131e <__ftoa_engine+0x80>
    1314:	36 0f       	add	r19, r22
    1316:	e7 1e       	adc	r14, r23
    1318:	f8 1e       	adc	r15, r24
    131a:	49 1f       	adc	r20, r25
    131c:	51 1d       	adc	r21, r1
    131e:	66 0f       	add	r22, r22
    1320:	77 1f       	adc	r23, r23
    1322:	88 1f       	adc	r24, r24
    1324:	99 1f       	adc	r25, r25
    1326:	06 94       	lsr	r0
    1328:	a1 f7       	brne	.-24     	; 0x1312 <__ftoa_engine+0x74>
    132a:	05 90       	lpm	r0, Z+
    132c:	07 94       	ror	r0
    132e:	28 f4       	brcc	.+10     	; 0x133a <__ftoa_engine+0x9c>
    1330:	e7 0e       	add	r14, r23
    1332:	f8 1e       	adc	r15, r24
    1334:	49 1f       	adc	r20, r25
    1336:	56 1f       	adc	r21, r22
    1338:	c1 1d       	adc	r28, r1
    133a:	77 0f       	add	r23, r23
    133c:	88 1f       	adc	r24, r24
    133e:	99 1f       	adc	r25, r25
    1340:	66 1f       	adc	r22, r22
    1342:	06 94       	lsr	r0
    1344:	a1 f7       	brne	.-24     	; 0x132e <__ftoa_engine+0x90>
    1346:	05 90       	lpm	r0, Z+
    1348:	07 94       	ror	r0
    134a:	28 f4       	brcc	.+10     	; 0x1356 <__ftoa_engine+0xb8>
    134c:	f8 0e       	add	r15, r24
    134e:	49 1f       	adc	r20, r25
    1350:	56 1f       	adc	r21, r22
    1352:	c7 1f       	adc	r28, r23
    1354:	d1 1d       	adc	r29, r1
    1356:	88 0f       	add	r24, r24
    1358:	99 1f       	adc	r25, r25
    135a:	66 1f       	adc	r22, r22
    135c:	77 1f       	adc	r23, r23
    135e:	06 94       	lsr	r0
    1360:	a1 f7       	brne	.-24     	; 0x134a <__ftoa_engine+0xac>
    1362:	05 90       	lpm	r0, Z+
    1364:	07 94       	ror	r0
    1366:	20 f4       	brcc	.+8      	; 0x1370 <__ftoa_engine+0xd2>
    1368:	49 0f       	add	r20, r25
    136a:	56 1f       	adc	r21, r22
    136c:	c7 1f       	adc	r28, r23
    136e:	d8 1f       	adc	r29, r24
    1370:	99 0f       	add	r25, r25
    1372:	66 1f       	adc	r22, r22
    1374:	77 1f       	adc	r23, r23
    1376:	88 1f       	adc	r24, r24
    1378:	06 94       	lsr	r0
    137a:	a9 f7       	brne	.-22     	; 0x1366 <__ftoa_engine+0xc8>
    137c:	84 91       	lpm	r24, Z
    137e:	10 95       	com	r17
    1380:	17 70       	andi	r17, 0x07	; 7
    1382:	41 f0       	breq	.+16     	; 0x1394 <__ftoa_engine+0xf6>
    1384:	d6 95       	lsr	r29
    1386:	c7 95       	ror	r28
    1388:	57 95       	ror	r21
    138a:	47 95       	ror	r20
    138c:	f7 94       	ror	r15
    138e:	e7 94       	ror	r14
    1390:	1a 95       	dec	r17
    1392:	c1 f7       	brne	.-16     	; 0x1384 <__ftoa_engine+0xe6>
    1394:	ec eb       	ldi	r30, 0xBC	; 188
    1396:	f0 e0       	ldi	r31, 0x00	; 0
    1398:	68 94       	set
    139a:	15 90       	lpm	r1, Z+
    139c:	15 91       	lpm	r17, Z+
    139e:	35 91       	lpm	r19, Z+
    13a0:	65 91       	lpm	r22, Z+
    13a2:	95 91       	lpm	r25, Z+
    13a4:	05 90       	lpm	r0, Z+
    13a6:	7f e2       	ldi	r23, 0x2F	; 47
    13a8:	73 95       	inc	r23
    13aa:	e1 18       	sub	r14, r1
    13ac:	f1 0a       	sbc	r15, r17
    13ae:	43 0b       	sbc	r20, r19
    13b0:	56 0b       	sbc	r21, r22
    13b2:	c9 0b       	sbc	r28, r25
    13b4:	d0 09       	sbc	r29, r0
    13b6:	c0 f7       	brcc	.-16     	; 0x13a8 <__ftoa_engine+0x10a>
    13b8:	e1 0c       	add	r14, r1
    13ba:	f1 1e       	adc	r15, r17
    13bc:	43 1f       	adc	r20, r19
    13be:	56 1f       	adc	r21, r22
    13c0:	c9 1f       	adc	r28, r25
    13c2:	d0 1d       	adc	r29, r0
    13c4:	7e f4       	brtc	.+30     	; 0x13e4 <__ftoa_engine+0x146>
    13c6:	70 33       	cpi	r23, 0x30	; 48
    13c8:	11 f4       	brne	.+4      	; 0x13ce <__ftoa_engine+0x130>
    13ca:	8a 95       	dec	r24
    13cc:	e6 cf       	rjmp	.-52     	; 0x139a <__ftoa_engine+0xfc>
    13ce:	e8 94       	clt
    13d0:	01 50       	subi	r16, 0x01	; 1
    13d2:	30 f0       	brcs	.+12     	; 0x13e0 <__ftoa_engine+0x142>
    13d4:	08 0f       	add	r16, r24
    13d6:	0a f4       	brpl	.+2      	; 0x13da <__ftoa_engine+0x13c>
    13d8:	00 27       	eor	r16, r16
    13da:	02 17       	cp	r16, r18
    13dc:	08 f4       	brcc	.+2      	; 0x13e0 <__ftoa_engine+0x142>
    13de:	20 2f       	mov	r18, r16
    13e0:	23 95       	inc	r18
    13e2:	02 2f       	mov	r16, r18
    13e4:	7a 33       	cpi	r23, 0x3A	; 58
    13e6:	28 f0       	brcs	.+10     	; 0x13f2 <__ftoa_engine+0x154>
    13e8:	79 e3       	ldi	r23, 0x39	; 57
    13ea:	7d 93       	st	X+, r23
    13ec:	2a 95       	dec	r18
    13ee:	e9 f7       	brne	.-6      	; 0x13ea <__ftoa_engine+0x14c>
    13f0:	10 c0       	rjmp	.+32     	; 0x1412 <__ftoa_engine+0x174>
    13f2:	7d 93       	st	X+, r23
    13f4:	2a 95       	dec	r18
    13f6:	89 f6       	brne	.-94     	; 0x139a <__ftoa_engine+0xfc>
    13f8:	06 94       	lsr	r0
    13fa:	97 95       	ror	r25
    13fc:	67 95       	ror	r22
    13fe:	37 95       	ror	r19
    1400:	17 95       	ror	r17
    1402:	17 94       	ror	r1
    1404:	e1 18       	sub	r14, r1
    1406:	f1 0a       	sbc	r15, r17
    1408:	43 0b       	sbc	r20, r19
    140a:	56 0b       	sbc	r21, r22
    140c:	c9 0b       	sbc	r28, r25
    140e:	d0 09       	sbc	r29, r0
    1410:	98 f0       	brcs	.+38     	; 0x1438 <__ftoa_engine+0x19a>
    1412:	23 95       	inc	r18
    1414:	7e 91       	ld	r23, -X
    1416:	73 95       	inc	r23
    1418:	7a 33       	cpi	r23, 0x3A	; 58
    141a:	08 f0       	brcs	.+2      	; 0x141e <__ftoa_engine+0x180>
    141c:	70 e3       	ldi	r23, 0x30	; 48
    141e:	7c 93       	st	X, r23
    1420:	20 13       	cpse	r18, r16
    1422:	b8 f7       	brcc	.-18     	; 0x1412 <__ftoa_engine+0x174>
    1424:	7e 91       	ld	r23, -X
    1426:	70 61       	ori	r23, 0x10	; 16
    1428:	7d 93       	st	X+, r23
    142a:	30 f0       	brcs	.+12     	; 0x1438 <__ftoa_engine+0x19a>
    142c:	83 95       	inc	r24
    142e:	71 e3       	ldi	r23, 0x31	; 49
    1430:	7d 93       	st	X+, r23
    1432:	70 e3       	ldi	r23, 0x30	; 48
    1434:	2a 95       	dec	r18
    1436:	e1 f7       	brne	.-8      	; 0x1430 <__ftoa_engine+0x192>
    1438:	11 24       	eor	r1, r1
    143a:	ef 90       	pop	r14
    143c:	ff 90       	pop	r15
    143e:	0f 91       	pop	r16
    1440:	1f 91       	pop	r17
    1442:	cf 91       	pop	r28
    1444:	df 91       	pop	r29
    1446:	99 27       	eor	r25, r25
    1448:	87 fd       	sbrc	r24, 7
    144a:	90 95       	com	r25
    144c:	08 95       	ret

0000144e <strnlen_P>:
    144e:	fc 01       	movw	r30, r24
    1450:	05 90       	lpm	r0, Z+
    1452:	61 50       	subi	r22, 0x01	; 1
    1454:	70 40       	sbci	r23, 0x00	; 0
    1456:	01 10       	cpse	r0, r1
    1458:	d8 f7       	brcc	.-10     	; 0x1450 <strnlen_P+0x2>
    145a:	80 95       	com	r24
    145c:	90 95       	com	r25
    145e:	8e 0f       	add	r24, r30
    1460:	9f 1f       	adc	r25, r31
    1462:	08 95       	ret

00001464 <strnlen>:
    1464:	fc 01       	movw	r30, r24
    1466:	61 50       	subi	r22, 0x01	; 1
    1468:	70 40       	sbci	r23, 0x00	; 0
    146a:	01 90       	ld	r0, Z+
    146c:	01 10       	cpse	r0, r1
    146e:	d8 f7       	brcc	.-10     	; 0x1466 <strnlen+0x2>
    1470:	80 95       	com	r24
    1472:	90 95       	com	r25
    1474:	8e 0f       	add	r24, r30
    1476:	9f 1f       	adc	r25, r31
    1478:	08 95       	ret

0000147a <fputc>:
    147a:	0f 93       	push	r16
    147c:	1f 93       	push	r17
    147e:	cf 93       	push	r28
    1480:	df 93       	push	r29
    1482:	fb 01       	movw	r30, r22
    1484:	23 81       	ldd	r18, Z+3	; 0x03
    1486:	21 fd       	sbrc	r18, 1
    1488:	03 c0       	rjmp	.+6      	; 0x1490 <fputc+0x16>
    148a:	8f ef       	ldi	r24, 0xFF	; 255
    148c:	9f ef       	ldi	r25, 0xFF	; 255
    148e:	2c c0       	rjmp	.+88     	; 0x14e8 <fputc+0x6e>
    1490:	22 ff       	sbrs	r18, 2
    1492:	16 c0       	rjmp	.+44     	; 0x14c0 <fputc+0x46>
    1494:	46 81       	ldd	r20, Z+6	; 0x06
    1496:	57 81       	ldd	r21, Z+7	; 0x07
    1498:	24 81       	ldd	r18, Z+4	; 0x04
    149a:	35 81       	ldd	r19, Z+5	; 0x05
    149c:	42 17       	cp	r20, r18
    149e:	53 07       	cpc	r21, r19
    14a0:	44 f4       	brge	.+16     	; 0x14b2 <fputc+0x38>
    14a2:	a0 81       	ld	r26, Z
    14a4:	b1 81       	ldd	r27, Z+1	; 0x01
    14a6:	9d 01       	movw	r18, r26
    14a8:	2f 5f       	subi	r18, 0xFF	; 255
    14aa:	3f 4f       	sbci	r19, 0xFF	; 255
    14ac:	31 83       	std	Z+1, r19	; 0x01
    14ae:	20 83       	st	Z, r18
    14b0:	8c 93       	st	X, r24
    14b2:	26 81       	ldd	r18, Z+6	; 0x06
    14b4:	37 81       	ldd	r19, Z+7	; 0x07
    14b6:	2f 5f       	subi	r18, 0xFF	; 255
    14b8:	3f 4f       	sbci	r19, 0xFF	; 255
    14ba:	37 83       	std	Z+7, r19	; 0x07
    14bc:	26 83       	std	Z+6, r18	; 0x06
    14be:	14 c0       	rjmp	.+40     	; 0x14e8 <fputc+0x6e>
    14c0:	8b 01       	movw	r16, r22
    14c2:	ec 01       	movw	r28, r24
    14c4:	fb 01       	movw	r30, r22
    14c6:	00 84       	ldd	r0, Z+8	; 0x08
    14c8:	f1 85       	ldd	r31, Z+9	; 0x09
    14ca:	e0 2d       	mov	r30, r0
    14cc:	09 95       	icall
    14ce:	89 2b       	or	r24, r25
    14d0:	e1 f6       	brne	.-72     	; 0x148a <fputc+0x10>
    14d2:	d8 01       	movw	r26, r16
    14d4:	16 96       	adiw	r26, 0x06	; 6
    14d6:	8d 91       	ld	r24, X+
    14d8:	9c 91       	ld	r25, X
    14da:	17 97       	sbiw	r26, 0x07	; 7
    14dc:	01 96       	adiw	r24, 0x01	; 1
    14de:	17 96       	adiw	r26, 0x07	; 7
    14e0:	9c 93       	st	X, r25
    14e2:	8e 93       	st	-X, r24
    14e4:	16 97       	sbiw	r26, 0x06	; 6
    14e6:	ce 01       	movw	r24, r28
    14e8:	df 91       	pop	r29
    14ea:	cf 91       	pop	r28
    14ec:	1f 91       	pop	r17
    14ee:	0f 91       	pop	r16
    14f0:	08 95       	ret

000014f2 <sprintf>:
    14f2:	ae e0       	ldi	r26, 0x0E	; 14
    14f4:	b0 e0       	ldi	r27, 0x00	; 0
    14f6:	ef e7       	ldi	r30, 0x7F	; 127
    14f8:	fa e0       	ldi	r31, 0x0A	; 10
    14fa:	0c 94 06 09 	jmp	0x120c	; 0x120c <__prologue_saves__+0x1c>
    14fe:	0d 89       	ldd	r16, Y+21	; 0x15
    1500:	1e 89       	ldd	r17, Y+22	; 0x16
    1502:	86 e0       	ldi	r24, 0x06	; 6
    1504:	8c 83       	std	Y+4, r24	; 0x04
    1506:	1a 83       	std	Y+2, r17	; 0x02
    1508:	09 83       	std	Y+1, r16	; 0x01
    150a:	8f ef       	ldi	r24, 0xFF	; 255
    150c:	9f e7       	ldi	r25, 0x7F	; 127
    150e:	9e 83       	std	Y+6, r25	; 0x06
    1510:	8d 83       	std	Y+5, r24	; 0x05
    1512:	ae 01       	movw	r20, r28
    1514:	47 5e       	subi	r20, 0xE7	; 231
    1516:	5f 4f       	sbci	r21, 0xFF	; 255
    1518:	6f 89       	ldd	r22, Y+23	; 0x17
    151a:	78 8d       	ldd	r23, Y+24	; 0x18
    151c:	ce 01       	movw	r24, r28
    151e:	01 96       	adiw	r24, 0x01	; 1
    1520:	0e 94 59 05 	call	0xab2	; 0xab2 <vfprintf>
    1524:	ef 81       	ldd	r30, Y+7	; 0x07
    1526:	f8 85       	ldd	r31, Y+8	; 0x08
    1528:	e0 0f       	add	r30, r16
    152a:	f1 1f       	adc	r31, r17
    152c:	10 82       	st	Z, r1
    152e:	2e 96       	adiw	r28, 0x0e	; 14
    1530:	e4 e0       	ldi	r30, 0x04	; 4
    1532:	0c 94 22 09 	jmp	0x1244	; 0x1244 <__epilogue_restores__+0x1c>

00001536 <__ultoa_invert>:
    1536:	fa 01       	movw	r30, r20
    1538:	aa 27       	eor	r26, r26
    153a:	28 30       	cpi	r18, 0x08	; 8
    153c:	51 f1       	breq	.+84     	; 0x1592 <__ultoa_invert+0x5c>
    153e:	20 31       	cpi	r18, 0x10	; 16
    1540:	81 f1       	breq	.+96     	; 0x15a2 <__ultoa_invert+0x6c>
    1542:	e8 94       	clt
    1544:	6f 93       	push	r22
    1546:	6e 7f       	andi	r22, 0xFE	; 254
    1548:	6e 5f       	subi	r22, 0xFE	; 254
    154a:	7f 4f       	sbci	r23, 0xFF	; 255
    154c:	8f 4f       	sbci	r24, 0xFF	; 255
    154e:	9f 4f       	sbci	r25, 0xFF	; 255
    1550:	af 4f       	sbci	r26, 0xFF	; 255
    1552:	b1 e0       	ldi	r27, 0x01	; 1
    1554:	3e d0       	rcall	.+124    	; 0x15d2 <__ultoa_invert+0x9c>
    1556:	b4 e0       	ldi	r27, 0x04	; 4
    1558:	3c d0       	rcall	.+120    	; 0x15d2 <__ultoa_invert+0x9c>
    155a:	67 0f       	add	r22, r23
    155c:	78 1f       	adc	r23, r24
    155e:	89 1f       	adc	r24, r25
    1560:	9a 1f       	adc	r25, r26
    1562:	a1 1d       	adc	r26, r1
    1564:	68 0f       	add	r22, r24
    1566:	79 1f       	adc	r23, r25
    1568:	8a 1f       	adc	r24, r26
    156a:	91 1d       	adc	r25, r1
    156c:	a1 1d       	adc	r26, r1
    156e:	6a 0f       	add	r22, r26
    1570:	71 1d       	adc	r23, r1
    1572:	81 1d       	adc	r24, r1
    1574:	91 1d       	adc	r25, r1
    1576:	a1 1d       	adc	r26, r1
    1578:	20 d0       	rcall	.+64     	; 0x15ba <__ultoa_invert+0x84>
    157a:	09 f4       	brne	.+2      	; 0x157e <__ultoa_invert+0x48>
    157c:	68 94       	set
    157e:	3f 91       	pop	r19
    1580:	2a e0       	ldi	r18, 0x0A	; 10
    1582:	26 9f       	mul	r18, r22
    1584:	11 24       	eor	r1, r1
    1586:	30 19       	sub	r19, r0
    1588:	30 5d       	subi	r19, 0xD0	; 208
    158a:	31 93       	st	Z+, r19
    158c:	de f6       	brtc	.-74     	; 0x1544 <__ultoa_invert+0xe>
    158e:	cf 01       	movw	r24, r30
    1590:	08 95       	ret
    1592:	46 2f       	mov	r20, r22
    1594:	47 70       	andi	r20, 0x07	; 7
    1596:	40 5d       	subi	r20, 0xD0	; 208
    1598:	41 93       	st	Z+, r20
    159a:	b3 e0       	ldi	r27, 0x03	; 3
    159c:	0f d0       	rcall	.+30     	; 0x15bc <__ultoa_invert+0x86>
    159e:	c9 f7       	brne	.-14     	; 0x1592 <__ultoa_invert+0x5c>
    15a0:	f6 cf       	rjmp	.-20     	; 0x158e <__ultoa_invert+0x58>
    15a2:	46 2f       	mov	r20, r22
    15a4:	4f 70       	andi	r20, 0x0F	; 15
    15a6:	40 5d       	subi	r20, 0xD0	; 208
    15a8:	4a 33       	cpi	r20, 0x3A	; 58
    15aa:	18 f0       	brcs	.+6      	; 0x15b2 <__ultoa_invert+0x7c>
    15ac:	49 5d       	subi	r20, 0xD9	; 217
    15ae:	31 fd       	sbrc	r19, 1
    15b0:	40 52       	subi	r20, 0x20	; 32
    15b2:	41 93       	st	Z+, r20
    15b4:	02 d0       	rcall	.+4      	; 0x15ba <__ultoa_invert+0x84>
    15b6:	a9 f7       	brne	.-22     	; 0x15a2 <__ultoa_invert+0x6c>
    15b8:	ea cf       	rjmp	.-44     	; 0x158e <__ultoa_invert+0x58>
    15ba:	b4 e0       	ldi	r27, 0x04	; 4
    15bc:	a6 95       	lsr	r26
    15be:	97 95       	ror	r25
    15c0:	87 95       	ror	r24
    15c2:	77 95       	ror	r23
    15c4:	67 95       	ror	r22
    15c6:	ba 95       	dec	r27
    15c8:	c9 f7       	brne	.-14     	; 0x15bc <__ultoa_invert+0x86>
    15ca:	00 97       	sbiw	r24, 0x00	; 0
    15cc:	61 05       	cpc	r22, r1
    15ce:	71 05       	cpc	r23, r1
    15d0:	08 95       	ret
    15d2:	9b 01       	movw	r18, r22
    15d4:	ac 01       	movw	r20, r24
    15d6:	0a 2e       	mov	r0, r26
    15d8:	06 94       	lsr	r0
    15da:	57 95       	ror	r21
    15dc:	47 95       	ror	r20
    15de:	37 95       	ror	r19
    15e0:	27 95       	ror	r18
    15e2:	ba 95       	dec	r27
    15e4:	c9 f7       	brne	.-14     	; 0x15d8 <__ultoa_invert+0xa2>
    15e6:	62 0f       	add	r22, r18
    15e8:	73 1f       	adc	r23, r19
    15ea:	84 1f       	adc	r24, r20
    15ec:	95 1f       	adc	r25, r21
    15ee:	a0 1d       	adc	r26, r0
    15f0:	08 95       	ret

000015f2 <dtoa_prf>:
    15f2:	a9 e0       	ldi	r26, 0x09	; 9
    15f4:	b0 e0       	ldi	r27, 0x00	; 0
    15f6:	ef ef       	ldi	r30, 0xFF	; 255
    15f8:	fa e0       	ldi	r31, 0x0A	; 10
    15fa:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__prologue_saves__+0xc>
    15fe:	6a 01       	movw	r12, r20
    1600:	12 2f       	mov	r17, r18
    1602:	b0 2e       	mov	r11, r16
    1604:	2b e3       	ldi	r18, 0x3B	; 59
    1606:	20 17       	cp	r18, r16
    1608:	20 f0       	brcs	.+8      	; 0x1612 <dtoa_prf+0x20>
    160a:	ff 24       	eor	r15, r15
    160c:	f3 94       	inc	r15
    160e:	f0 0e       	add	r15, r16
    1610:	02 c0       	rjmp	.+4      	; 0x1616 <dtoa_prf+0x24>
    1612:	2c e3       	ldi	r18, 0x3C	; 60
    1614:	f2 2e       	mov	r15, r18
    1616:	0f 2d       	mov	r16, r15
    1618:	27 e0       	ldi	r18, 0x07	; 7
    161a:	ae 01       	movw	r20, r28
    161c:	4f 5f       	subi	r20, 0xFF	; 255
    161e:	5f 4f       	sbci	r21, 0xFF	; 255
    1620:	0e 94 4f 09 	call	0x129e	; 0x129e <__ftoa_engine>
    1624:	bc 01       	movw	r22, r24
    1626:	49 81       	ldd	r20, Y+1	; 0x01
    1628:	84 2f       	mov	r24, r20
    162a:	89 70       	andi	r24, 0x09	; 9
    162c:	81 30       	cpi	r24, 0x01	; 1
    162e:	31 f0       	breq	.+12     	; 0x163c <dtoa_prf+0x4a>
    1630:	e1 fc       	sbrc	r14, 1
    1632:	06 c0       	rjmp	.+12     	; 0x1640 <dtoa_prf+0x4e>
    1634:	e0 fe       	sbrs	r14, 0
    1636:	06 c0       	rjmp	.+12     	; 0x1644 <dtoa_prf+0x52>
    1638:	90 e2       	ldi	r25, 0x20	; 32
    163a:	05 c0       	rjmp	.+10     	; 0x1646 <dtoa_prf+0x54>
    163c:	9d e2       	ldi	r25, 0x2D	; 45
    163e:	03 c0       	rjmp	.+6      	; 0x1646 <dtoa_prf+0x54>
    1640:	9b e2       	ldi	r25, 0x2B	; 43
    1642:	01 c0       	rjmp	.+2      	; 0x1646 <dtoa_prf+0x54>
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	5e 2d       	mov	r21, r14
    1648:	50 71       	andi	r21, 0x10	; 16
    164a:	43 ff       	sbrs	r20, 3
    164c:	3c c0       	rjmp	.+120    	; 0x16c6 <dtoa_prf+0xd4>
    164e:	91 11       	cpse	r25, r1
    1650:	02 c0       	rjmp	.+4      	; 0x1656 <dtoa_prf+0x64>
    1652:	83 e0       	ldi	r24, 0x03	; 3
    1654:	01 c0       	rjmp	.+2      	; 0x1658 <dtoa_prf+0x66>
    1656:	84 e0       	ldi	r24, 0x04	; 4
    1658:	81 17       	cp	r24, r17
    165a:	18 f4       	brcc	.+6      	; 0x1662 <dtoa_prf+0x70>
    165c:	21 2f       	mov	r18, r17
    165e:	28 1b       	sub	r18, r24
    1660:	01 c0       	rjmp	.+2      	; 0x1664 <dtoa_prf+0x72>
    1662:	20 e0       	ldi	r18, 0x00	; 0
    1664:	51 11       	cpse	r21, r1
    1666:	0b c0       	rjmp	.+22     	; 0x167e <dtoa_prf+0x8c>
    1668:	f6 01       	movw	r30, r12
    166a:	82 2f       	mov	r24, r18
    166c:	30 e2       	ldi	r19, 0x20	; 32
    166e:	88 23       	and	r24, r24
    1670:	19 f0       	breq	.+6      	; 0x1678 <dtoa_prf+0x86>
    1672:	31 93       	st	Z+, r19
    1674:	81 50       	subi	r24, 0x01	; 1
    1676:	fb cf       	rjmp	.-10     	; 0x166e <dtoa_prf+0x7c>
    1678:	c2 0e       	add	r12, r18
    167a:	d1 1c       	adc	r13, r1
    167c:	20 e0       	ldi	r18, 0x00	; 0
    167e:	99 23       	and	r25, r25
    1680:	29 f0       	breq	.+10     	; 0x168c <dtoa_prf+0x9a>
    1682:	d6 01       	movw	r26, r12
    1684:	9c 93       	st	X, r25
    1686:	f6 01       	movw	r30, r12
    1688:	31 96       	adiw	r30, 0x01	; 1
    168a:	6f 01       	movw	r12, r30
    168c:	c6 01       	movw	r24, r12
    168e:	03 96       	adiw	r24, 0x03	; 3
    1690:	e2 fe       	sbrs	r14, 2
    1692:	0a c0       	rjmp	.+20     	; 0x16a8 <dtoa_prf+0xb6>
    1694:	3e e4       	ldi	r19, 0x4E	; 78
    1696:	d6 01       	movw	r26, r12
    1698:	3c 93       	st	X, r19
    169a:	41 e4       	ldi	r20, 0x41	; 65
    169c:	11 96       	adiw	r26, 0x01	; 1
    169e:	4c 93       	st	X, r20
    16a0:	11 97       	sbiw	r26, 0x01	; 1
    16a2:	12 96       	adiw	r26, 0x02	; 2
    16a4:	3c 93       	st	X, r19
    16a6:	06 c0       	rjmp	.+12     	; 0x16b4 <dtoa_prf+0xc2>
    16a8:	3e e6       	ldi	r19, 0x6E	; 110
    16aa:	f6 01       	movw	r30, r12
    16ac:	30 83       	st	Z, r19
    16ae:	41 e6       	ldi	r20, 0x61	; 97
    16b0:	41 83       	std	Z+1, r20	; 0x01
    16b2:	32 83       	std	Z+2, r19	; 0x02
    16b4:	fc 01       	movw	r30, r24
    16b6:	32 2f       	mov	r19, r18
    16b8:	40 e2       	ldi	r20, 0x20	; 32
    16ba:	33 23       	and	r19, r19
    16bc:	09 f4       	brne	.+2      	; 0x16c0 <dtoa_prf+0xce>
    16be:	42 c0       	rjmp	.+132    	; 0x1744 <dtoa_prf+0x152>
    16c0:	41 93       	st	Z+, r20
    16c2:	31 50       	subi	r19, 0x01	; 1
    16c4:	fa cf       	rjmp	.-12     	; 0x16ba <dtoa_prf+0xc8>
    16c6:	42 ff       	sbrs	r20, 2
    16c8:	44 c0       	rjmp	.+136    	; 0x1752 <dtoa_prf+0x160>
    16ca:	91 11       	cpse	r25, r1
    16cc:	02 c0       	rjmp	.+4      	; 0x16d2 <dtoa_prf+0xe0>
    16ce:	83 e0       	ldi	r24, 0x03	; 3
    16d0:	01 c0       	rjmp	.+2      	; 0x16d4 <dtoa_prf+0xe2>
    16d2:	84 e0       	ldi	r24, 0x04	; 4
    16d4:	81 17       	cp	r24, r17
    16d6:	18 f4       	brcc	.+6      	; 0x16de <dtoa_prf+0xec>
    16d8:	21 2f       	mov	r18, r17
    16da:	28 1b       	sub	r18, r24
    16dc:	01 c0       	rjmp	.+2      	; 0x16e0 <dtoa_prf+0xee>
    16de:	20 e0       	ldi	r18, 0x00	; 0
    16e0:	51 11       	cpse	r21, r1
    16e2:	0b c0       	rjmp	.+22     	; 0x16fa <dtoa_prf+0x108>
    16e4:	f6 01       	movw	r30, r12
    16e6:	82 2f       	mov	r24, r18
    16e8:	30 e2       	ldi	r19, 0x20	; 32
    16ea:	88 23       	and	r24, r24
    16ec:	19 f0       	breq	.+6      	; 0x16f4 <dtoa_prf+0x102>
    16ee:	31 93       	st	Z+, r19
    16f0:	81 50       	subi	r24, 0x01	; 1
    16f2:	fb cf       	rjmp	.-10     	; 0x16ea <dtoa_prf+0xf8>
    16f4:	c2 0e       	add	r12, r18
    16f6:	d1 1c       	adc	r13, r1
    16f8:	20 e0       	ldi	r18, 0x00	; 0
    16fa:	99 23       	and	r25, r25
    16fc:	29 f0       	breq	.+10     	; 0x1708 <dtoa_prf+0x116>
    16fe:	d6 01       	movw	r26, r12
    1700:	9c 93       	st	X, r25
    1702:	f6 01       	movw	r30, r12
    1704:	31 96       	adiw	r30, 0x01	; 1
    1706:	6f 01       	movw	r12, r30
    1708:	c6 01       	movw	r24, r12
    170a:	03 96       	adiw	r24, 0x03	; 3
    170c:	e2 fe       	sbrs	r14, 2
    170e:	0b c0       	rjmp	.+22     	; 0x1726 <dtoa_prf+0x134>
    1710:	39 e4       	ldi	r19, 0x49	; 73
    1712:	d6 01       	movw	r26, r12
    1714:	3c 93       	st	X, r19
    1716:	3e e4       	ldi	r19, 0x4E	; 78
    1718:	11 96       	adiw	r26, 0x01	; 1
    171a:	3c 93       	st	X, r19
    171c:	11 97       	sbiw	r26, 0x01	; 1
    171e:	36 e4       	ldi	r19, 0x46	; 70
    1720:	12 96       	adiw	r26, 0x02	; 2
    1722:	3c 93       	st	X, r19
    1724:	07 c0       	rjmp	.+14     	; 0x1734 <dtoa_prf+0x142>
    1726:	39 e6       	ldi	r19, 0x69	; 105
    1728:	f6 01       	movw	r30, r12
    172a:	30 83       	st	Z, r19
    172c:	3e e6       	ldi	r19, 0x6E	; 110
    172e:	31 83       	std	Z+1, r19	; 0x01
    1730:	36 e6       	ldi	r19, 0x66	; 102
    1732:	32 83       	std	Z+2, r19	; 0x02
    1734:	fc 01       	movw	r30, r24
    1736:	32 2f       	mov	r19, r18
    1738:	40 e2       	ldi	r20, 0x20	; 32
    173a:	33 23       	and	r19, r19
    173c:	19 f0       	breq	.+6      	; 0x1744 <dtoa_prf+0x152>
    173e:	41 93       	st	Z+, r20
    1740:	31 50       	subi	r19, 0x01	; 1
    1742:	fb cf       	rjmp	.-10     	; 0x173a <dtoa_prf+0x148>
    1744:	fc 01       	movw	r30, r24
    1746:	e2 0f       	add	r30, r18
    1748:	f1 1d       	adc	r31, r1
    174a:	10 82       	st	Z, r1
    174c:	8e ef       	ldi	r24, 0xFE	; 254
    174e:	9f ef       	ldi	r25, 0xFF	; 255
    1750:	a6 c0       	rjmp	.+332    	; 0x189e <dtoa_prf+0x2ac>
    1752:	21 e0       	ldi	r18, 0x01	; 1
    1754:	30 e0       	ldi	r19, 0x00	; 0
    1756:	91 11       	cpse	r25, r1
    1758:	02 c0       	rjmp	.+4      	; 0x175e <dtoa_prf+0x16c>
    175a:	20 e0       	ldi	r18, 0x00	; 0
    175c:	30 e0       	ldi	r19, 0x00	; 0
    175e:	16 16       	cp	r1, r22
    1760:	17 06       	cpc	r1, r23
    1762:	1c f4       	brge	.+6      	; 0x176a <dtoa_prf+0x178>
    1764:	fb 01       	movw	r30, r22
    1766:	31 96       	adiw	r30, 0x01	; 1
    1768:	02 c0       	rjmp	.+4      	; 0x176e <dtoa_prf+0x17c>
    176a:	e1 e0       	ldi	r30, 0x01	; 1
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	2e 0f       	add	r18, r30
    1770:	3f 1f       	adc	r19, r31
    1772:	bb 20       	and	r11, r11
    1774:	21 f0       	breq	.+8      	; 0x177e <dtoa_prf+0x18c>
    1776:	eb 2d       	mov	r30, r11
    1778:	f0 e0       	ldi	r31, 0x00	; 0
    177a:	31 96       	adiw	r30, 0x01	; 1
    177c:	02 c0       	rjmp	.+4      	; 0x1782 <dtoa_prf+0x190>
    177e:	e0 e0       	ldi	r30, 0x00	; 0
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	2e 0f       	add	r18, r30
    1784:	3f 1f       	adc	r19, r31
    1786:	e1 2f       	mov	r30, r17
    1788:	f0 e0       	ldi	r31, 0x00	; 0
    178a:	2e 17       	cp	r18, r30
    178c:	3f 07       	cpc	r19, r31
    178e:	1c f4       	brge	.+6      	; 0x1796 <dtoa_prf+0x1a4>
    1790:	12 1b       	sub	r17, r18
    1792:	21 2f       	mov	r18, r17
    1794:	01 c0       	rjmp	.+2      	; 0x1798 <dtoa_prf+0x1a6>
    1796:	20 e0       	ldi	r18, 0x00	; 0
    1798:	8e 2d       	mov	r24, r14
    179a:	88 71       	andi	r24, 0x18	; 24
    179c:	59 f4       	brne	.+22     	; 0x17b4 <dtoa_prf+0x1c2>
    179e:	f6 01       	movw	r30, r12
    17a0:	82 2f       	mov	r24, r18
    17a2:	30 e2       	ldi	r19, 0x20	; 32
    17a4:	88 23       	and	r24, r24
    17a6:	19 f0       	breq	.+6      	; 0x17ae <dtoa_prf+0x1bc>
    17a8:	31 93       	st	Z+, r19
    17aa:	81 50       	subi	r24, 0x01	; 1
    17ac:	fb cf       	rjmp	.-10     	; 0x17a4 <dtoa_prf+0x1b2>
    17ae:	c2 0e       	add	r12, r18
    17b0:	d1 1c       	adc	r13, r1
    17b2:	20 e0       	ldi	r18, 0x00	; 0
    17b4:	99 23       	and	r25, r25
    17b6:	29 f0       	breq	.+10     	; 0x17c2 <dtoa_prf+0x1d0>
    17b8:	d6 01       	movw	r26, r12
    17ba:	9c 93       	st	X, r25
    17bc:	f6 01       	movw	r30, r12
    17be:	31 96       	adiw	r30, 0x01	; 1
    17c0:	6f 01       	movw	r12, r30
    17c2:	51 11       	cpse	r21, r1
    17c4:	0b c0       	rjmp	.+22     	; 0x17dc <dtoa_prf+0x1ea>
    17c6:	f6 01       	movw	r30, r12
    17c8:	82 2f       	mov	r24, r18
    17ca:	90 e3       	ldi	r25, 0x30	; 48
    17cc:	88 23       	and	r24, r24
    17ce:	19 f0       	breq	.+6      	; 0x17d6 <dtoa_prf+0x1e4>
    17d0:	91 93       	st	Z+, r25
    17d2:	81 50       	subi	r24, 0x01	; 1
    17d4:	fb cf       	rjmp	.-10     	; 0x17cc <dtoa_prf+0x1da>
    17d6:	c2 0e       	add	r12, r18
    17d8:	d1 1c       	adc	r13, r1
    17da:	20 e0       	ldi	r18, 0x00	; 0
    17dc:	0f 2d       	mov	r16, r15
    17de:	06 0f       	add	r16, r22
    17e0:	9a 81       	ldd	r25, Y+2	; 0x02
    17e2:	34 2f       	mov	r19, r20
    17e4:	30 71       	andi	r19, 0x10	; 16
    17e6:	44 ff       	sbrs	r20, 4
    17e8:	03 c0       	rjmp	.+6      	; 0x17f0 <dtoa_prf+0x1fe>
    17ea:	91 33       	cpi	r25, 0x31	; 49
    17ec:	09 f4       	brne	.+2      	; 0x17f0 <dtoa_prf+0x1fe>
    17ee:	01 50       	subi	r16, 0x01	; 1
    17f0:	10 16       	cp	r1, r16
    17f2:	24 f4       	brge	.+8      	; 0x17fc <dtoa_prf+0x20a>
    17f4:	09 30       	cpi	r16, 0x09	; 9
    17f6:	18 f0       	brcs	.+6      	; 0x17fe <dtoa_prf+0x20c>
    17f8:	08 e0       	ldi	r16, 0x08	; 8
    17fa:	01 c0       	rjmp	.+2      	; 0x17fe <dtoa_prf+0x20c>
    17fc:	01 e0       	ldi	r16, 0x01	; 1
    17fe:	ab 01       	movw	r20, r22
    1800:	77 ff       	sbrs	r23, 7
    1802:	02 c0       	rjmp	.+4      	; 0x1808 <dtoa_prf+0x216>
    1804:	40 e0       	ldi	r20, 0x00	; 0
    1806:	50 e0       	ldi	r21, 0x00	; 0
    1808:	fb 01       	movw	r30, r22
    180a:	e4 1b       	sub	r30, r20
    180c:	f5 0b       	sbc	r31, r21
    180e:	a1 e0       	ldi	r26, 0x01	; 1
    1810:	b0 e0       	ldi	r27, 0x00	; 0
    1812:	ac 0f       	add	r26, r28
    1814:	bd 1f       	adc	r27, r29
    1816:	ea 0f       	add	r30, r26
    1818:	fb 1f       	adc	r31, r27
    181a:	8e e2       	ldi	r24, 0x2E	; 46
    181c:	a8 2e       	mov	r10, r24
    181e:	4b 01       	movw	r8, r22
    1820:	80 1a       	sub	r8, r16
    1822:	91 08       	sbc	r9, r1
    1824:	0b 2d       	mov	r16, r11
    1826:	10 e0       	ldi	r17, 0x00	; 0
    1828:	11 95       	neg	r17
    182a:	01 95       	neg	r16
    182c:	11 09       	sbc	r17, r1
    182e:	4f 3f       	cpi	r20, 0xFF	; 255
    1830:	bf ef       	ldi	r27, 0xFF	; 255
    1832:	5b 07       	cpc	r21, r27
    1834:	21 f4       	brne	.+8      	; 0x183e <dtoa_prf+0x24c>
    1836:	d6 01       	movw	r26, r12
    1838:	ac 92       	st	X, r10
    183a:	11 96       	adiw	r26, 0x01	; 1
    183c:	6d 01       	movw	r12, r26
    183e:	64 17       	cp	r22, r20
    1840:	75 07       	cpc	r23, r21
    1842:	2c f0       	brlt	.+10     	; 0x184e <dtoa_prf+0x25c>
    1844:	84 16       	cp	r8, r20
    1846:	95 06       	cpc	r9, r21
    1848:	14 f4       	brge	.+4      	; 0x184e <dtoa_prf+0x25c>
    184a:	81 81       	ldd	r24, Z+1	; 0x01
    184c:	01 c0       	rjmp	.+2      	; 0x1850 <dtoa_prf+0x25e>
    184e:	80 e3       	ldi	r24, 0x30	; 48
    1850:	41 50       	subi	r20, 0x01	; 1
    1852:	51 09       	sbc	r21, r1
    1854:	31 96       	adiw	r30, 0x01	; 1
    1856:	d6 01       	movw	r26, r12
    1858:	11 96       	adiw	r26, 0x01	; 1
    185a:	7d 01       	movw	r14, r26
    185c:	40 17       	cp	r20, r16
    185e:	51 07       	cpc	r21, r17
    1860:	24 f0       	brlt	.+8      	; 0x186a <dtoa_prf+0x278>
    1862:	d6 01       	movw	r26, r12
    1864:	8c 93       	st	X, r24
    1866:	67 01       	movw	r12, r14
    1868:	e2 cf       	rjmp	.-60     	; 0x182e <dtoa_prf+0x23c>
    186a:	64 17       	cp	r22, r20
    186c:	75 07       	cpc	r23, r21
    186e:	39 f4       	brne	.+14     	; 0x187e <dtoa_prf+0x28c>
    1870:	96 33       	cpi	r25, 0x36	; 54
    1872:	20 f4       	brcc	.+8      	; 0x187c <dtoa_prf+0x28a>
    1874:	95 33       	cpi	r25, 0x35	; 53
    1876:	19 f4       	brne	.+6      	; 0x187e <dtoa_prf+0x28c>
    1878:	31 11       	cpse	r19, r1
    187a:	01 c0       	rjmp	.+2      	; 0x187e <dtoa_prf+0x28c>
    187c:	81 e3       	ldi	r24, 0x31	; 49
    187e:	f6 01       	movw	r30, r12
    1880:	80 83       	st	Z, r24
    1882:	f7 01       	movw	r30, r14
    1884:	82 2f       	mov	r24, r18
    1886:	90 e2       	ldi	r25, 0x20	; 32
    1888:	88 23       	and	r24, r24
    188a:	19 f0       	breq	.+6      	; 0x1892 <dtoa_prf+0x2a0>
    188c:	91 93       	st	Z+, r25
    188e:	81 50       	subi	r24, 0x01	; 1
    1890:	fb cf       	rjmp	.-10     	; 0x1888 <dtoa_prf+0x296>
    1892:	f7 01       	movw	r30, r14
    1894:	e2 0f       	add	r30, r18
    1896:	f1 1d       	adc	r31, r1
    1898:	10 82       	st	Z, r1
    189a:	80 e0       	ldi	r24, 0x00	; 0
    189c:	90 e0       	ldi	r25, 0x00	; 0
    189e:	29 96       	adiw	r28, 0x09	; 9
    18a0:	ec e0       	ldi	r30, 0x0C	; 12
    18a2:	0c 94 1a 09 	jmp	0x1234	; 0x1234 <__epilogue_restores__+0xc>

000018a6 <_exit>:
    18a6:	f8 94       	cli

000018a8 <__stop_program>:
    18a8:	ff cf       	rjmp	.-2      	; 0x18a8 <__stop_program>
